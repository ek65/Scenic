(set-logic QF_NRA)
(declare-fun x1 () Real)
(declare-fun y1 () Real)
(assert (<= (+ (* (- x1 103.42607059136343) (- x1 103.42607059136343)) (* (- y1 -55.33521489578369) (- y1 -55.33521489578369))) (* 50 50)))
(declare-fun x2 () Real)
(declare-fun y2 () Real)
(assert (= x2 (- (* (cos -3.4947427729287672) 0) (* (sin -3.4947427729287672) 50))))
(assert (= y2 (+ (* (sin -3.4947427729287672) 0) (* (cos -3.4947427729287672) 50))))
(declare-fun x3 () Real)
(declare-fun y3 () Real)
(assert (= x3 (+ x2 103.42607059136343)))
(assert (= y3 (+ y2 -55.33521489578369)))
(declare-fun x4 () Real)
(declare-fun y4 () Real)
(assert (= x4 (- (* (cos 2.788442534250819) 0) (* (sin 2.788442534250819) 50))))
(assert (= y4 (+ (* (sin 2.788442534250819) 0) (* (cos 2.788442534250819) 50))))
(declare-fun x5 () Real)
(declare-fun y5 () Real)
(assert (= x5 (+ x4 103.42607059136343)))
(assert (= y5 (+ y4 -55.33521489578369)))
(assert (<= (- (* (- x5 103.42607059136343) (- y1 -55.33521489578369)) (* (- y5 -55.33521489578369) (- x1 103.42607059136343))) 0))
(assert (<= 0 (- (* (- x3 103.42607059136343) (- y1 -55.33521489578369)) (* (- y3 -55.33521489578369) (- x1 103.42607059136343)))))
(declare-fun s1 () Real)
(declare-fun t1 () Real)
(assert (and (<= 0 s1) (<= s1 1)))
(assert (and (<= 0 t1) (<= t1 1)))
(assert (<= (+ s1 t1) 1))
(assert (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (and (= x1 (+ 149.78187621789078 (+ (* (- 149.8502888733718 149.78187621789078) s1) (* (- 149.85185797657485 149.78187621789078) t1)))) (= y1 (+ -12.277335447046873 (+ (* (- -86.83364074124549 -12.277335447046873) s1) (* (- -86.77599221196235 -12.277335447046873) t1))))) (and (= x1 (+ 149.85033373996458 (+ (* (- 149.8502888733718 149.85033373996458) s1) (* (- 149.77566074655047 149.85033373996458) t1)))) (= y1 (+ -86.8825364808799 (+ (* (- -86.83364074124549 -86.8825364808799) s1) (* (- -89.57546278711719 -86.8825364808799) t1)))))) (and (= x1 (+ 65.36041557536652 (+ (* (- 42.843543568013295 65.36041557536652) s1) (* (- 42.70745114452926 65.36041557536652) t1)))) (= y1 (+ -140.5846408781953 (+ (* (- -139.7481401743526 -140.5846408781953) s1) (* (- -143.2454932952528 -140.5846408781953) t1)))))) (and (= x1 (+ 42.70745114452926 (+ (* (- 65.26608637853778 42.70745114452926) s1) (* (- 68.60961335835475 42.70745114452926) t1)))) (= y1 (+ -143.2454932952528 (+ (* (- -144.08336950480034 -143.2454932952528) s1) (* (- -144.09365649927693 -143.2454932952528) t1)))))) (and (= x1 (+ 68.60961335835475 (+ (* (- 75.29263900218935 68.60961335835475) s1) (* (- 81.9575966732408 68.60961335835475) t1)))) (= y1 (+ -144.09365649927693 (+ (* (- -143.8747760624568 -144.09365649927693) s1) (* (- -143.33711478910195 -144.09365649927693) t1)))))) (and (= x1 (+ 81.9575966732408 (+ (* (- 85.27854834411704 81.9575966732408) s1) (* (- 91.88793170732984 81.9575966732408) t1)))) (= y1 (+ -143.33711478910195 (+ (* (- -142.94909612109248 -143.33711478910195) s1) (* (- -141.93578868508956 -143.33711478910195) t1)))))) (and (= x1 (+ 91.88793170732984 (+ (* (- 98.44140716343541 91.88793170732984) s1) (* (- 101.69250383229637 91.88793170732984) t1)))) (= y1 (+ -141.93578868508956 (+ (* (- -140.6081216153785 -141.93578868508956) s1) (* (- -139.82732142535502 -141.93578868508956) t1)))))) (and (= x1 (+ 101.69250383229637 (+ (* (- 108.13414850885869 101.69250383229637) s1) (* (- 114.4828412931483 101.69250383229637) t1)))) (= y1 (+ -139.82732142535502 (+ (* (- -138.03401323580988 -139.82732142535502) s1) (* (- -135.93524208761812 -139.82732142535502) t1)))))) (and (= x1 (+ 114.4828412931483 (+ (* (- 120.72410614534657 114.4828412931483) s1) (* (- 123.79999542236325 114.4828412931483) t1)))) (= y1 (+ -135.93524208761812 (+ (* (- -133.53579351628184 -135.93524208761812) s1) (* (- -132.22499847412112 -135.93524208761812) t1)))))) (and (= x1 (+ 123.79999542236325 (+ (* (- 126.51970224132829 123.79999542236325) s1) (* (- 129.15539283323548 123.79999542236325) t1)))) (= y1 (+ -132.22499847412112 (+ (* (- -130.92719369162091 -132.22499847412112) s1) (* (- -129.4662907043089 -132.22499847412112) t1)))))) (and (= x1 (+ 129.15539283323548 (+ (* (- 131.69729782380384 129.15539283323548) s1) (* (- 134.13599546174152 129.15539283323548) t1)))) (= y1 (+ -129.4662907043089 (+ (* (- -127.84770445281384 -129.4662907043089) s1) (* (- -126.07743434197691 -129.4662907043089) t1)))))) (and (= x1 (+ 134.13599546174152 (+ (* (- 136.46244654113548 134.13599546174152) s1) (* (- 138.6680279059102 134.13599546174152) t1)))) (= y1 (+ -126.07743434197691 (+ (* (- -124.16204200363161 -126.07743434197691) s1) (* (- -122.10862697544962 -126.07743434197691) t1)))))) (and (= x1 (+ 138.6680279059102 (+ (* (- 140.74456441216768 138.6680279059102) s1) (* (- 142.6843592299386 138.6680279059102) t1)))) (= y1 (+ -122.10862697544962 (+ (* (- -119.92480038600044 -122.10862697544962) s1) (* (- -117.61865674356305 -122.10862697544962) t1)))))) (and (= x1 (+ 142.6843592299386 (+ (* (- 144.48022237202892 142.6843592299386) s1) (* (- 146.12549734421808 142.6843592299386) t1)))) (= y1 (+ -117.61865674356305 (+ (* (- -115.19874393325632 -117.61865674356305) s1) (* (- -112.67403153369608 -117.61865674356305) t1)))))) (and (= x1 (+ 146.12549734421808 (+ (* (- 147.6140858180271 146.12549734421808) s1) (* (- 148.94047023460607 146.12549734421808) t1)))) (= y1 (+ -112.67403153369608 (+ (* (- -110.05387757061524 -112.67403153369608) s1) (* (- -107.3479938306771 -112.67403153369608) t1)))))) (and (= x1 (+ 148.94047023460607 (+ (* (- 150.09973425595777 148.94047023460607) s1) (* (- 151.0875809876934 148.94047023460607) t1)))) (= y1 (+ -107.3479938306771 (+ (* (- -104.56640986404861 -107.3479938306771) s1) (* (- -101.71943580916077 -107.3479938306771) t1)))))) (and (= x1 (+ 151.0875809876934 (+ (* (- 151.90034890577664 151.0875809876934) s1) (* (- 152.53502542822247 151.0875809876934) t1)))) (= y1 (+ -101.71943580916077 (+ (* (- -98.81762417744864 -101.71943580916077) s1) (* (- -95.87173073971853 -101.71943580916077) t1)))))) (and (= x1 (+ 152.53502542822247 (+ (* (- 152.9892580814461 152.53502542822247) s1) (* (- 153.26136321987337 152.53502542822247) t1)))) (= y1 (+ -95.87173073971853 (+ (* (- -92.89267465912006 -95.87173073971853) s1) (* (- -89.89149801849283 -95.87173073971853) t1)))))) (and (= x1 (+ 153.26136321987337 (+ (* (- 153.35033226649253 153.26136321987337) s1) (* (- 153.2818747444187 153.26136321987337) t1)))) (= y1 (+ -89.89149801849283 (+ (* (- -86.87932489210235 -89.89149801849283) s1) (* (- -12.274123858269313 -89.89149801849283) t1)))))) (and (= x1 (+ 153.2818747444187 (+ (* (- 149.78187621789078 153.2818747444187) s1) (* (- 149.85185797657485 153.2818747444187) t1)))) (= y1 (+ -12.274123858269313 (+ (* (- -12.277335447046873 -12.274123858269313) s1) (* (- -86.77599221196235 -12.274123858269313) t1)))))) (and (= x1 (+ 68.62038172076878 (+ (* (- 65.36041557536652 68.62038172076878) s1) (* (- 42.70745114452926 68.62038172076878) t1)))) (= y1 (+ -140.59367306469173 (+ (* (- -140.5846408781953 -140.59367306469173) s1) (* (- -143.2454932952528 -140.59367306469173) t1)))))) (and (= x1 (+ 42.70745114452926 (+ (* (- 68.60961335835475 42.70745114452926) s1) (* (- 81.9575966732408 42.70745114452926) t1)))) (= y1 (+ -143.2454932952528 (+ (* (- -144.09365649927693 -143.2454932952528) s1) (* (- -143.33711478910195 -143.2454932952528) t1)))))) (and (= x1 (+ 81.9575966732408 (+ (* (- 91.88793170732984 81.9575966732408) s1) (* (- 101.69250383229637 81.9575966732408) t1)))) (= y1 (+ -143.33711478910195 (+ (* (- -141.93578868508956 -143.33711478910195) s1) (* (- -139.82732142535502 -143.33711478910195) t1)))))) (and (= x1 (+ 101.69250383229637 (+ (* (- 114.4828412931483 101.69250383229637) s1) (* (- 123.79999542236325 101.69250383229637) t1)))) (= y1 (+ -139.82732142535502 (+ (* (- -135.93524208761812 -139.82732142535502) s1) (* (- -132.22499847412112 -139.82732142535502) t1)))))) (and (= x1 (+ 123.79999542236325 (+ (* (- 129.15539283323548 123.79999542236325) s1) (* (- 134.13599546174152 123.79999542236325) t1)))) (= y1 (+ -132.22499847412112 (+ (* (- -129.4662907043089 -132.22499847412112) s1) (* (- -126.07743434197691 -132.22499847412112) t1)))))) (and (= x1 (+ 134.13599546174152 (+ (* (- 138.6680279059102 134.13599546174152) s1) (* (- 142.6843592299386 134.13599546174152) t1)))) (= y1 (+ -126.07743434197691 (+ (* (- -122.10862697544962 -126.07743434197691) s1) (* (- -117.61865674356305 -126.07743434197691) t1)))))) (and (= x1 (+ 142.6843592299386 (+ (* (- 146.12549734421808 142.6843592299386) s1) (* (- 148.94047023460607 142.6843592299386) t1)))) (= y1 (+ -117.61865674356305 (+ (* (- -112.67403153369608 -117.61865674356305) s1) (* (- -107.3479938306771 -117.61865674356305) t1)))))) (and (= x1 (+ 148.94047023460607 (+ (* (- 151.0875809876934 148.94047023460607) s1) (* (- 152.53502542822247 148.94047023460607) t1)))) (= y1 (+ -107.3479938306771 (+ (* (- -101.71943580916077 -107.3479938306771) s1) (* (- -95.87173073971853 -107.3479938306771) t1)))))) (and (= x1 (+ 152.53502542822247 (+ (* (- 153.26136321987337 152.53502542822247) s1) (* (- 153.2818747444187 152.53502542822247) t1)))) (= y1 (+ -95.87173073971853 (+ (* (- -89.89149801849283 -95.87173073971853) s1) (* (- -12.274123858269313 -95.87173073971853) t1)))))) (and (= x1 (+ 153.2818747444187 (+ (* (- 149.85185797657485 153.2818747444187) s1) (* (- 149.85033373996458 153.2818747444187) t1)))) (= y1 (+ -12.274123858269313 (+ (* (- -86.77599221196235 -12.274123858269313) s1) (* (- -86.8825364808799 -12.274123858269313) t1)))))) (and (= x1 (+ 75.13631492127433 (+ (* (- 68.62038172076878 75.13631492127433) s1) (* (- 42.70745114452926 75.13631492127433) t1)))) (= y1 (+ -140.3782688364202 (+ (* (- -140.59367306469173 -140.3782688364202) s1) (* (- -143.2454932952528 -140.3782688364202) t1)))))) (and (= x1 (+ 42.70745114452926 (+ (* (- 81.9575966732408 42.70745114452926) s1) (* (- 101.69250383229637 42.70745114452926) t1)))) (= y1 (+ -143.2454932952528 (+ (* (- -143.33711478910195 -143.2454932952528) s1) (* (- -139.82732142535502 -143.2454932952528) t1)))))) (and (= x1 (+ 101.69250383229637 (+ (* (- 123.79999542236325 101.69250383229637) s1) (* (- 134.13599546174152 101.69250383229637) t1)))) (= y1 (+ -139.82732142535502 (+ (* (- -132.22499847412112 -139.82732142535502) s1) (* (- -126.07743434197691 -139.82732142535502) t1)))))) (and (= x1 (+ 134.13599546174152 (+ (* (- 142.6843592299386 134.13599546174152) s1) (* (- 148.94047023460607 134.13599546174152) t1)))) (= y1 (+ -126.07743434197691 (+ (* (- -117.61865674356305 -126.07743434197691) s1) (* (- -107.3479938306771 -126.07743434197691) t1)))))) (and (= x1 (+ 152.53502542822247 (+ (* (- 153.2818747444187 152.53502542822247) s1) (* (- 149.85033373996458 152.53502542822247) t1)))) (= y1 (+ -95.87173073971853 (+ (* (- -12.274123858269313 -95.87173073971853) s1) (* (- -86.8825364808799 -95.87173073971853) t1)))))) (and (= x1 (+ 81.63453659302337 (+ (* (- 75.13631492127433 81.63453659302337) s1) (* (- 42.70745114452926 81.63453659302337) t1)))) (= y1 (+ -139.85205636999763 (+ (* (- -140.3782688364202 -139.85205636999763) s1) (* (- -143.2454932952528 -139.85205636999763) t1)))))) (and (= x1 (+ 134.13599546174152 (+ (* (- 148.94047023460607 134.13599546174152) s1) (* (- 152.53502542822247 134.13599546174152) t1)))) (= y1 (+ -126.07743434197691 (+ (* (- -107.3479938306771 -126.07743434197691) s1) (* (- -95.87173073971853 -126.07743434197691) t1)))))) (and (= x1 (+ 152.53502542822247 (+ (* (- 149.85033373996458 152.53502542822247) s1) (* (- 149.77566074655047 152.53502542822247) t1)))) (= y1 (+ -95.87173073971853 (+ (* (- -86.8825364808799 -95.87173073971853) s1) (* (- -89.57546278711719 -95.87173073971853) t1)))))) (and (= x1 (+ 81.63453659302337 (+ (* (- 42.70745114452926 81.63453659302337) s1) (* (- 101.69250383229637 81.63453659302337) t1)))) (= y1 (+ -139.85205636999763 (+ (* (- -143.2454932952528 -139.85205636999763) s1) (* (- -139.82732142535502 -139.85205636999763) t1)))))) (and (= x1 (+ 152.53502542822247 (+ (* (- 149.77566074655047 152.53502542822247) s1) (* (- 149.52924742837794 152.53502542822247) t1)))) (= y1 (+ -95.87173073971853 (+ (* (- -89.57546278711719 -95.87173073971853) s1) (* (- -92.36510828352854 -95.87173073971853) t1)))))) (and (= x1 (+ 88.10022974630364 (+ (* (- 81.63453659302337 88.10022974630364) s1) (* (- 101.69250383229637 88.10022974630364) t1)))) (= y1 (+ -139.01623551441273 (+ (* (- -139.85205636999763 -139.01623551441273) s1) (* (- -139.82732142535502 -139.01623551441273) t1)))))) (and (= x1 (+ 152.53502542822247 (+ (* (- 149.52924742837794 152.53502542822247) s1) (* (- 149.11353137051336 152.53502542822247) t1)))) (= y1 (+ -95.87173073971853 (+ (* (- -92.36510828352854 -95.87173073971853) s1) (* (- -95.13458868213307 -95.87173073971853) t1)))))) (and (= x1 (+ 94.51865156165282 (+ (* (- 88.10022974630364 94.51865156165282) s1) (* (- 101.69250383229637 94.51865156165282) t1)))) (= y1 (+ -137.87271207553735 (+ (* (- -139.01623551441273 -137.87271207553735) s1) (* (- -139.82732142535502 -137.87271207553735) t1)))))) (and (= x1 (+ 152.53502542822247 (+ (* (- 149.11353137051336 152.53502542822247) s1) (* (- 148.53005345403605 152.53502542822247) t1)))) (= y1 (+ -95.87173073971853 (+ (* (- -95.13458868213307 -95.87173073971853) s1) (* (- -97.87363870723382 -95.87173073971853) t1)))))) (and (= x1 (+ 100.87516700585546 (+ (* (- 94.51865156165282 100.87516700585546) s1) (* (- 101.69250383229637 100.87516700585546) t1)))) (= y1 (+ -136.42409347058273 (+ (* (- -137.87271207553735 -136.42409347058273) s1) (* (- -139.82732142535502 -136.42409347058273) t1)))))) (and (= x1 (+ 152.53502542822247 (+ (* (- 148.53005345403605 152.53502542822247) s1) (* (- 147.78097638126326 152.53502542822247) t1)))) (= y1 (+ -95.87173073971853 (+ (* (- -97.87363870723382 -95.87173073971853) s1) (* (- -100.57210587547344 -95.87173073971853) t1)))))) (and (= x1 (+ 104.02567408217175 (+ (* (- 100.87516700585546 104.02567408217175) s1) (* (- 101.69250383229637 104.02567408217175) t1)))) (= y1 (+ -135.58637871504686 (+ (* (- -136.42409347058273 -135.58637871504686) s1) (* (- -139.82732142535502 -135.58637871504686) t1)))))) (and (= x1 (+ 152.53502542822247 (+ (* (- 147.78097638126326 152.53502542822247) s1) (* (- 146.86907665954058 152.53502542822247) t1)))) (= y1 (+ -95.87173073971853 (+ (* (- -100.57210587547344 -95.87173073971853) s1) (* (- -103.21998812673449 -95.87173073971853) t1)))))) (and (= x1 (+ 110.26220710917801 (+ (* (- 104.02567408217175 110.26220710917801) s1) (* (- 101.69250383229637 110.26220710917801) t1)))) (= y1 (+ -133.68652602126556 (+ (* (- -135.58637871504686 -133.68652602126556) s1) (* (- -139.82732142535502 -133.68652602126556) t1)))))) (and (= x1 (+ 152.53502542822247 (+ (* (- 146.86907665954058 152.53502542822247) s1) (* (- 145.79773430992043 152.53502542822247) t1)))) (= y1 (+ -95.87173073971853 (+ (* (- -103.21998812673449 -95.87173073971853) s1) (* (- -105.80747089748515 -95.87173073971853) t1)))))) (and (= x1 (+ 116.40093592831187 (+ (* (- 110.26220710917801 116.40093592831187) s1) (* (- 101.69250383229637 116.40093592831187) t1)))) (= y1 (+ -131.49112333835228 (+ (* (- -133.68652602126556 -131.49112333835228) s1) (* (- -139.82732142535502 -131.49112333835228) t1)))))) (and (= x1 (+ 152.53502542822247 (+ (* (- 145.79773430992043 152.53502542822247) s1) (* (- 144.57092033887395 152.53502542822247) t1)))) (= y1 (+ -95.87173073971853 (+ (* (- -105.80747089748515 -95.87173073971853) s1) (* (- -108.32496349915574 -95.87173073971853) t1)))))) (and (= x1 (+ 119.42924001954914 (+ (* (- 116.40093592831187 119.42924001954914) s1) (* (- 101.69250383229637 119.42924001954914) t1)))) (= y1 (+ -130.28412906307292 (+ (* (- -131.49112333835228 -130.28412906307292) s1) (* (- -139.82732142535502 -130.28412906307292) t1)))))) (and (= x1 (+ 152.53502542822247 (+ (* (- 144.57092033887395 152.53502542822247) s1) (* (- 143.1931820194737 152.53502542822247) t1)))) (= y1 (+ -95.87173073971853 (+ (* (- -108.32496349915574 -95.87173073971853) s1) (* (- -110.76313466670682 -95.87173073971853) t1)))))) (and (= x1 (+ 122.29266617055828 (+ (* (- 119.42924001954914 122.29266617055828) s1) (* (- 101.69250383229637 122.29266617055828) t1)))) (= y1 (+ -129.06620779940823 (+ (* (- -130.28412906307292 -129.06620779940823) s1) (* (- -139.82732142535502 -129.06620779940823) t1)))))) (and (= x1 (+ 134.13599546174152 (+ (* (- 152.53502542822247 134.13599546174152) s1) (* (- 143.1931820194737 134.13599546174152) t1)))) (= y1 (+ -126.07743434197691 (+ (* (- -95.87173073971853 -126.07743434197691) s1) (* (- -110.76313466670682 -126.07743434197691) t1)))))) (and (= x1 (+ 122.42786325133763 (+ (* (- 122.29266617055828 122.42786325133763) s1) (* (- 101.69250383229637 122.42786325133763) t1)))) (= y1 (+ -129.00517653723756 (+ (* (- -129.06620779940823 -129.00517653723756) s1) (* (- -139.82732142535502 -129.00517653723756) t1)))))) (and (= x1 (+ 134.13599546174152 (+ (* (- 143.1931820194737 134.13599546174152) s1) (* (- 141.6696260366033 134.13599546174152) t1)))) (= y1 (+ -126.07743434197691 (+ (* (- -110.76313466670682 -126.07743434197691) s1) (* (- -113.11294714562527 -126.07743434197691) t1)))))) (and (= x1 (+ 122.42786325133763 (+ (* (- 101.69250383229637 122.42786325133763) s1) (* (- 134.13599546174152 122.42786325133763) t1)))) (= y1 (+ -129.00517653723756 (+ (* (- -139.82732142535502 -129.00517653723756) s1) (* (- -126.07743434197691 -129.00517653723756) t1)))))) (and (= x1 (+ 134.13599546174152 (+ (* (- 141.6696260366033 134.13599546174152) s1) (* (- 140.0058995586672 134.13599546174152) t1)))) (= y1 (+ -126.07743434197691 (+ (* (- -113.11294714562527 -126.07743434197691) s1) (* (- -115.36569118914977 -126.07743434197691) t1)))))) (and (= x1 (+ 134.13599546174152 (+ (* (- 140.0058995586672 134.13599546174152) s1) (* (- 138.20816930596015 134.13599546174152) t1)))) (= y1 (+ -126.07743434197691 (+ (* (- -115.36569118914977 -126.07743434197691) s1) (* (- -117.51301684156564 -126.07743434197691) t1)))))) (and (= x1 (+ 134.13599546174152 (+ (* (- 138.20816930596015 134.13599546174152) s1) (* (- 136.28309869328098 134.13599546174152) t1)))) (= y1 (+ -126.07743434197691 (+ (* (- -117.51301684156564 -126.07743434197691) s1) (* (- -119.54696488790806 -126.07743434197691) t1)))))) (and (= x1 (+ 134.13599546174152 (+ (* (- 136.28309869328098 134.13599546174152) s1) (* (- 134.2378231315122 134.13599546174152) t1)))) (= y1 (+ -126.07743434197691 (+ (* (- -119.54696488790806 -126.07743434197691) s1) (* (- -121.45999635535767 -126.07743434197691) t1)))))) (and (= x1 (+ 134.13599546174152 (+ (* (- 134.2378231315122 134.13599546174152) s1) (* (- 132.07992357971324 134.13599546174152) t1)))) (= y1 (+ -126.07743434197691 (+ (* (- -121.45999635535767 -126.07743434197691) s1) (* (- -123.24502045697835 -126.07743434197691) t1)))))) (and (= x1 (+ 134.13599546174152 (+ (* (- 132.07992357971324 134.13599546174152) s1) (* (- 129.81739844575736 134.13599546174152) t1)))) (= y1 (+ -126.07743434197691 (+ (* (- -123.24502045697835 -126.07743434197691) s1) (* (- -124.89542087422244 -126.07743434197691) t1)))))) (and (= x1 (+ 134.13599546174152 (+ (* (- 129.81739844575736 134.13599546174152) s1) (* (- 127.45863393966566 134.13599546174152) t1)))) (= y1 (+ -126.07743434197691 (+ (* (- -124.89542087422244 -126.07743434197691) s1) (* (- -126.40508028078494 -126.07743434197691) t1)))))) (and (= x1 (+ 134.13599546174152 (+ (* (- 127.45863393966566 134.13599546174152) s1) (* (- 125.01237298952333 134.13599546174152) t1)))) (= y1 (+ -126.07743434197691 (+ (* (- -126.40508028078494 -126.07743434197691) s1) (* (- -127.76840301690802 -126.07743434197691) t1)))))) (and (= x1 (+ 122.42786325133763 (+ (* (- 134.13599546174152 122.42786325133763) s1) (* (- 125.01237298952333 122.42786325133763) t1)))) (= y1 (+ -129.00517653723756 (+ (* (- -126.07743434197691 -129.00517653723756) s1) (* (- -127.76840301690802 -129.00517653723756) t1)))))) (and (= x1 (+ 122.42786325133763 (+ (* (- 125.01237298952333 122.42786325133763) s1) (* (- 122.3591308163577 122.42786325133763) t1)))) (= y1 (+ -129.00517653723756 (+ (* (- -127.76840301690802 -129.00517653723756) s1) (* (- -129.03449183113395 -129.00517653723756) t1)))))) (and (= x1 (+ 119.42924001954914 (+ (* (- 122.29266617055828 119.42924001954914) s1) (* (- 122.3591308163577 119.42924001954914) t1)))) (= y1 (+ -130.28412906307292 (+ (* (- -129.06620779940823 -130.28412906307292) s1) (* (- -129.03449183113395 -130.28412906307292) t1)))))) (and (= x1 (+ 156.85033079302042 (+ (* (- 156.78187327094662 156.85033079302042) s1) (* (- 153.2818747444187 156.85033079302042) t1)))) (= y1 (+ -86.87611330332479 (+ (* (- -12.270912269491753 -86.87611330332479) s1) (* (- -12.274123858269313 -86.87611330332479) t1)))))) (and (= x1 (+ 65.26608637853778 (+ (* (- 42.70745114452926 65.26608637853778) s1) (* (- 42.57135872104522 65.26608637853778) t1)))) (= y1 (+ -144.08336950480034 (+ (* (- -143.2454932952528 -144.08336950480034) s1) (* (- -146.742846416153 -144.08336950480034) t1)))))) (and (= x1 (+ 42.57135872104522 (+ (* (- 65.17175718170904 42.57135872104522) s1) (* (- 72.02523144852738 42.57135872104522) t1)))) (= y1 (+ -146.742846416153 (+ (* (- -147.5820981314054 -146.742846416153) s1) (* (- -147.52335496256856 -146.742846416153) t1)))))) (and (= x1 (+ 72.02523144852738 (+ (* (- 75.44896308310436 72.02523144852738) s1) (* (- 82.28065675345823 72.02523144852738) t1)))) (= y1 (+ -147.52335496256856 (+ (* (- -147.37128328849337 -147.52335496256856) s1) (* (- -146.82217320820627 -147.52335496256856) t1)))))) (and (= x1 (+ 82.28065675345823 (+ (* (- 89.0783486475426 82.28065675345823) s1) (* (- 95.82653893541168 82.28065675345823) t1)))) (= y1 (+ -146.82217320820627 (+ (* (- -145.9475617522289 -146.82217320820627) s1) (* (- -144.74944317523594 -146.82217320820627) t1)))))) (and (= x1 (+ 95.82653893541168 (+ (* (- 102.50984065873728 95.82653893541168) s1) (* (- 109.11301481554618 95.82653893541168) t1)))) (= y1 (+ -144.74944317523594 (+ (* (- -143.23054938012731 -144.74944317523594) s1) (* (- -141.39434368885048 -144.74944317523594) t1)))))) (and (= x1 (+ 109.11301481554618 (+ (* (- 115.62100510759387 109.11301481554618) s1) (* (- 122.018972271144 109.11301481554618) t1)))) (= y1 (+ -141.39434368885048 (+ (* (- -139.24501294547017 -141.39434368885048) s1) (* (- -136.78745796949076 -141.39434368885048) t1)))))) (and (= x1 (+ 122.018972271144 (+ (* (- 125.17212759338888 122.018972271144) s1) (* (- 128.02703149313325 122.018972271144) t1)))) (= y1 (+ -136.78745796949076 (+ (* (- -135.44482041100463 -136.78745796949076) s1) (* (- -134.0859843663338 -136.78745796949076) t1)))))) (and (= x1 (+ 128.02703149313325 (+ (* (- 130.8521517268053 128.02703149313325) s1) (* (- 133.5771972018503 128.02703149313325) t1)))) (= y1 (+ -134.0859843663338 (+ (* (- -132.52750112783286 -134.0859843663338) s1) (* (- -130.79998803140523 -134.0859843663338) t1)))))) (and (= x1 (+ 133.5771972018503 (+ (* (- 136.1920673437698 133.5771972018503) s1) (* (- 138.68706995075877 133.5771972018503) t1)))) (= y1 (+ -130.79998803140523 (+ (* (- -128.90984822697547 -130.79998803140523) s1) (* (- -126.86408765190555 -130.79998803140523) t1)))))) (and (= x1 (+ 138.68706995075877 (+ (* (- 141.05295711853944 138.68706995075877) s1) (* (- 143.2809595183752 138.68706995075877) t1)))) (= y1 (+ -126.86408765190555 (+ (* (- -124.67028906299119 -126.86408765190555) s1) (* (- -122.33658393043524 -126.86408765190555) t1)))))) (and (= x1 (+ 143.2809595183752 (+ (* (- 145.36281890120998 143.2809595183752) s1) (* (- 147.29081870745455 143.2809595183752) t1)))) (= y1 (+ -122.33658393043524 (+ (* (- -119.87162229797633 -122.33658393043524) s1) (* (- -117.28454072088738 -122.33658393043524) t1)))))) (and (= x1 (+ 147.29081870745455 (+ (* (- 149.05781266896244 147.29081870745455) s1) (* (- 150.65725129718024 147.29081870745455) t1)))) (= y1 (+ -117.28454072088738 (+ (* (- -114.58492840068534 -117.28454072088738) s1) (* (- -111.78279164207474 -117.28454072088738) t1)))))) (and (= x1 (+ 150.65725129718024 (+ (* (- 152.0832061592917 150.65725129718024) s1) (* (- 153.33039185237496 150.65725129718024) t1)))) (= y1 (+ -111.78279164207474 (+ (* (- -108.88851676386905 -111.78279164207474) s1) (* (- -105.91283160136273 -111.78279164207474) t1)))))) (and (= x1 (+ 153.33039185237496 (+ (* (- 154.39418559412354 153.33039185237496) s1) (* (- 155.27064435751723 153.33039185237496) t1)))) (= y1 (+ -105.91283160136273 (+ (* (- -102.8667657428481 -105.91283160136273) s1) (* (- -99.76160964766345 -105.91283160136273) t1)))))) (and (= x1 (+ 155.27064435751723 (+ (* (- 155.95651948593158 155.27064435751723) s1) (* (- 156.44926873451428 155.27064435751723) t1)))) (= y1 (+ -99.76160964766345 (+ (* (- -96.60887279730399 -99.76160964766345) s1) (* (- -93.42024103471158 -99.76160964766345) t1)))))) (and (= x1 (+ 156.44926873451428 (+ (* (- 156.74706569319628 156.44926873451428) s1) (* (- 156.85033079302042 156.44926873451428) t1)))) (= y1 (+ -93.42024103471158 (+ (* (- -90.20753324986846 -93.42024103471158) s1) (* (- -86.87611330332479 -93.42024103471158) t1)))))) (and (= x1 (+ 156.85033079302042 (+ (* (- 153.2818747444187 156.85033079302042) s1) (* (- 153.35033226649253 156.85033079302042) t1)))) (= y1 (+ -86.87611330332479 (+ (* (- -12.274123858269313 -86.87611330332479) s1) (* (- -86.87932489210235 -86.87611330332479) t1)))))) (and (= x1 (+ 71.95243283725247 (+ (* (- 65.26608637853778 71.95243283725247) s1) (* (- 42.57135872104522 71.95243283725247) t1)))) (= y1 (+ -144.02411213558491 (+ (* (- -144.08336950480034 -144.02411213558491) s1) (* (- -146.742846416153 -144.02411213558491) t1)))))) (and (= x1 (+ 42.57135872104522 (+ (* (- 72.02523144852738 42.57135872104522) s1) (* (- 82.28065675345823 42.57135872104522) t1)))) (= y1 (+ -146.742846416153 (+ (* (- -147.52335496256856 -146.742846416153) s1) (* (- -146.82217320820627 -146.742846416153) t1)))))) (and (= x1 (+ 82.28065675345823 (+ (* (- 95.82653893541168 82.28065675345823) s1) (* (- 109.11301481554618 82.28065675345823) t1)))) (= y1 (+ -146.82217320820627 (+ (* (- -144.74944317523594 -146.82217320820627) s1) (* (- -141.39434368885048 -146.82217320820627) t1)))))) (and (= x1 (+ 109.11301481554618 (+ (* (- 122.018972271144 109.11301481554618) s1) (* (- 128.02703149313325 109.11301481554618) t1)))) (= y1 (+ -141.39434368885048 (+ (* (- -136.78745796949076 -141.39434368885048) s1) (* (- -134.0859843663338 -141.39434368885048) t1)))))) (and (= x1 (+ 128.02703149313325 (+ (* (- 133.5771972018503 128.02703149313325) s1) (* (- 138.68706995075877 128.02703149313325) t1)))) (= y1 (+ -134.0859843663338 (+ (* (- -130.79998803140523 -134.0859843663338) s1) (* (- -126.86408765190555 -134.0859843663338) t1)))))) (and (= x1 (+ 138.68706995075877 (+ (* (- 143.2809595183752 138.68706995075877) s1) (* (- 147.29081870745455 138.68706995075877) t1)))) (= y1 (+ -126.86408765190555 (+ (* (- -122.33658393043524 -126.86408765190555) s1) (* (- -117.28454072088738 -126.86408765190555) t1)))))) (and (= x1 (+ 147.29081870745455 (+ (* (- 150.65725129718024 147.29081870745455) s1) (* (- 153.33039185237496 147.29081870745455) t1)))) (= y1 (+ -117.28454072088738 (+ (* (- -111.78279164207474 -117.28454072088738) s1) (* (- -105.91283160136273 -117.28454072088738) t1)))))) (and (= x1 (+ 153.33039185237496 (+ (* (- 155.27064435751723 153.33039185237496) s1) (* (- 156.44926873451428 153.33039185237496) t1)))) (= y1 (+ -105.91283160136273 (+ (* (- -99.76160964766345 -105.91283160136273) s1) (* (- -93.42024103471158 -105.91283160136273) t1)))))) (and (= x1 (+ 156.44926873451428 (+ (* (- 156.85033079302042 156.44926873451428) s1) (* (- 153.35033226649253 156.44926873451428) t1)))) (= y1 (+ -93.42024103471158 (+ (* (- -86.87611330332479 -93.42024103471158) s1) (* (- -86.87932489210235 -93.42024103471158) t1)))))) (and (= x1 (+ 78.62832753002995 (+ (* (- 71.95243283725247 78.62832753002995) s1) (* (- 42.57135872104522 78.62832753002995) t1)))) (= y1 (+ -143.64573341958894 (+ (* (- -144.02411213558491 -143.64573341958894) s1) (* (- -146.742846416153 -143.64573341958894) t1)))))) (and (= x1 (+ 42.57135872104522 (+ (* (- 82.28065675345823 42.57135872104522) s1) (* (- 109.11301481554618 42.57135872104522) t1)))) (= y1 (+ -146.742846416153 (+ (* (- -146.82217320820627 -146.742846416153) s1) (* (- -141.39434368885048 -146.742846416153) t1)))))) (and (= x1 (+ 109.11301481554618 (+ (* (- 128.02703149313325 109.11301481554618) s1) (* (- 138.68706995075877 109.11301481554618) t1)))) (= y1 (+ -141.39434368885048 (+ (* (- -134.0859843663338 -141.39434368885048) s1) (* (- -126.86408765190555 -141.39434368885048) t1)))))) (and (= x1 (+ 138.68706995075877 (+ (* (- 147.29081870745455 138.68706995075877) s1) (* (- 153.33039185237496 138.68706995075877) t1)))) (= y1 (+ -126.86408765190555 (+ (* (- -117.28454072088738 -126.86408765190555) s1) (* (- -105.91283160136273 -126.86408765190555) t1)))))) (and (= x1 (+ 153.33039185237496 (+ (* (- 156.44926873451428 153.33039185237496) s1) (* (- 153.35033226649253 153.33039185237496) t1)))) (= y1 (+ -105.91283160136273 (+ (* (- -93.42024103471158 -105.91283160136273) s1) (* (- -86.87932489210235 -105.91283160136273) t1)))))) (and (= x1 (+ 78.62832753002995 (+ (* (- 42.57135872104522 78.62832753002995) s1) (* (- 109.11301481554618 78.62832753002995) t1)))) (= y1 (+ -143.64573341958894 (+ (* (- -146.742846416153 -143.64573341958894) s1) (* (- -141.39434368885048 -143.64573341958894) t1)))))) (and (= x1 (+ 153.33039185237496 (+ (* (- 153.35033226649253 153.33039185237496) s1) (* (- 153.26136321987337 153.33039185237496) t1)))) (= y1 (+ -105.91283160136273 (+ (* (- -86.87932489210235 -105.91283160136273) s1) (* (- -89.89149801849283 -105.91283160136273) t1)))))) (and (= x1 (+ 85.27854834411704 (+ (* (- 78.62832753002995 85.27854834411704) s1) (* (- 109.11301481554618 85.27854834411704) t1)))) (= y1 (+ -142.94909612109248 (+ (* (- -143.64573341958894 -142.94909612109248) s1) (* (- -141.39434368885048 -142.94909612109248) t1)))))) (and (= x1 (+ 153.33039185237496 (+ (* (- 153.26136321987337 153.33039185237496) s1) (* (- 152.9892580814461 153.33039185237496) t1)))) (= y1 (+ -105.91283160136273 (+ (* (- -89.89149801849283 -105.91283160136273) s1) (* (- -92.89267465912006 -105.91283160136273) t1)))))) (and (= x1 (+ 91.88793170732984 (+ (* (- 85.27854834411704 91.88793170732984) s1) (* (- 109.11301481554618 91.88793170732984) t1)))) (= y1 (+ -141.93578868508956 (+ (* (- -142.94909612109248 -141.93578868508956) s1) (* (- -141.39434368885048 -141.93578868508956) t1)))))) (and (= x1 (+ 153.33039185237496 (+ (* (- 152.9892580814461 153.33039185237496) s1) (* (- 152.53502542822247 153.33039185237496) t1)))) (= y1 (+ -105.91283160136273 (+ (* (- -92.89267465912006 -105.91283160136273) s1) (* (- -95.87173073971853 -105.91283160136273) t1)))))) (and (= x1 (+ 98.44140716343541 (+ (* (- 91.88793170732984 98.44140716343541) s1) (* (- 109.11301481554618 98.44140716343541) t1)))) (= y1 (+ -140.6081216153785 (+ (* (- -141.93578868508956 -140.6081216153785) s1) (* (- -141.39434368885048 -140.6081216153785) t1)))))) (and (= x1 (+ 153.33039185237496 (+ (* (- 152.53502542822247 153.33039185237496) s1) (* (- 151.90034890577664 153.33039185237496) t1)))) (= y1 (+ -105.91283160136273 (+ (* (- -95.87173073971853 -105.91283160136273) s1) (* (- -98.81762417744864 -105.91283160136273) t1)))))) (and (= x1 (+ 104.92403173521362 (+ (* (- 98.44140716343541 104.92403173521362) s1) (* (- 109.11301481554618 104.92403173521362) t1)))) (= y1 (+ -138.9691222062417 (+ (* (- -140.6081216153785 -138.9691222062417) s1) (* (- -141.39434368885048 -138.9691222062417) t1)))))) (and (= x1 (+ 153.33039185237496 (+ (* (- 151.90034890577664 153.33039185237496) s1) (* (- 151.0875809876934 153.33039185237496) t1)))) (= y1 (+ -105.91283160136273 (+ (* (- -98.81762417744864 -105.91283160136273) s1) (* (- -101.71943580916077 -105.91283160136273) t1)))))) (and (= x1 (+ 111.32102399684678 (+ (* (- 104.92403173521362 111.32102399684678) s1) (* (- 109.11301481554618 111.32102399684678) t1)))) (= y1 (+ -137.0225276397285 (+ (* (- -138.9691222062417 -137.0225276397285) s1) (* (- -141.39434368885048 -137.0225276397285) t1)))))) (and (= x1 (+ 153.33039185237496 (+ (* (- 151.0875809876934 153.33039185237496) s1) (* (- 150.09973425595777 153.33039185237496) t1)))) (= y1 (+ -105.91283160136273 (+ (* (- -101.71943580916077 -105.91283160136273) s1) (* (- -104.56640986404861 -105.91283160136273) t1)))))) (and (= x1 (+ 117.61779777794588 (+ (* (- 111.32102399684678 117.61779777794588) s1) (* (- 109.11301481554618 117.61779777794588) t1)))) (= y1 (+ -134.7727764642791 (+ (* (- -137.0225276397285 -134.7727764642791) s1) (* (- -141.39434368885048 -134.7727764642791) t1)))))) (and (= x1 (+ 153.33039185237496 (+ (* (- 150.09973425595777 153.33039185237496) s1) (* (- 148.94047023460607 153.33039185237496) t1)))) (= y1 (+ -105.91283160136273 (+ (* (- -104.56640986404861 -105.91283160136273) s1) (* (- -107.3479938306771 -105.91283160136273) t1)))))) (and (= x1 (+ 123.79999542236325 (+ (* (- 117.61779777794588 123.79999542236325) s1) (* (- 109.11301481554618 123.79999542236325) t1)))) (= y1 (+ -132.22499847412112 (+ (* (- -134.7727764642791 -132.22499847412112) s1) (* (- -141.39434368885048 -132.22499847412112) t1)))))) (and (= x1 (+ 153.33039185237496 (+ (* (- 148.94047023460607 153.33039185237496) s1) (* (- 147.6140858180271 153.33039185237496) t1)))) (= y1 (+ -105.91283160136273 (+ (* (- -107.3479938306771 -105.91283160136273) s1) (* (- -110.05387757061524 -105.91283160136273) t1)))))) (and (= x1 (+ 126.51970224132829 (+ (* (- 123.79999542236325 126.51970224132829) s1) (* (- 109.11301481554618 126.51970224132829) t1)))) (= y1 (+ -130.92719369162091 (+ (* (- -132.22499847412112 -130.92719369162091) s1) (* (- -141.39434368885048 -130.92719369162091) t1)))))) (and (= x1 (+ 138.68706995075877 (+ (* (- 153.33039185237496 138.68706995075877) s1) (* (- 147.6140858180271 138.68706995075877) t1)))) (= y1 (+ -126.86408765190555 (+ (* (- -105.91283160136273 -126.86408765190555) s1) (* (- -110.05387757061524 -126.86408765190555) t1)))))) (and (= x1 (+ 129.15539283323548 (+ (* (- 126.51970224132829 129.15539283323548) s1) (* (- 109.11301481554618 129.15539283323548) t1)))) (= y1 (+ -129.4662907043089 (+ (* (- -130.92719369162091 -129.4662907043089) s1) (* (- -141.39434368885048 -129.4662907043089) t1)))))) (and (= x1 (+ 138.68706995075877 (+ (* (- 147.6140858180271 138.68706995075877) s1) (* (- 146.12549734421808 138.68706995075877) t1)))) (= y1 (+ -126.86408765190555 (+ (* (- -110.05387757061524 -126.86408765190555) s1) (* (- -112.67403153369608 -126.86408765190555) t1)))))) (and (= x1 (+ 129.15539283323548 (+ (* (- 109.11301481554618 129.15539283323548) s1) (* (- 138.68706995075877 129.15539283323548) t1)))) (= y1 (+ -129.4662907043089 (+ (* (- -141.39434368885048 -129.4662907043089) s1) (* (- -126.86408765190555 -129.4662907043089) t1)))))) (and (= x1 (+ 138.68706995075877 (+ (* (- 146.12549734421808 138.68706995075877) s1) (* (- 144.48022237202892 138.68706995075877) t1)))) (= y1 (+ -126.86408765190555 (+ (* (- -112.67403153369608 -126.86408765190555) s1) (* (- -115.19874393325632 -126.86408765190555) t1)))))) (and (= x1 (+ 131.69729782380384 (+ (* (- 129.15539283323548 131.69729782380384) s1) (* (- 138.68706995075877 131.69729782380384) t1)))) (= y1 (+ -127.84770445281384 (+ (* (- -129.4662907043089 -127.84770445281384) s1) (* (- -126.86408765190555 -127.84770445281384) t1)))))) (and (= x1 (+ 138.68706995075877 (+ (* (- 144.48022237202892 138.68706995075877) s1) (* (- 142.6843592299386 138.68706995075877) t1)))) (= y1 (+ -126.86408765190555 (+ (* (- -115.19874393325632 -126.86408765190555) s1) (* (- -117.61865674356305 -126.86408765190555) t1)))))) (and (= x1 (+ 134.13599546174152 (+ (* (- 131.69729782380384 134.13599546174152) s1) (* (- 138.68706995075877 134.13599546174152) t1)))) (= y1 (+ -126.07743434197691 (+ (* (- -127.84770445281384 -126.07743434197691) s1) (* (- -126.86408765190555 -126.07743434197691) t1)))))) (and (= x1 (+ 138.68706995075877 (+ (* (- 142.6843592299386 138.68706995075877) s1) (* (- 140.74456441216768 138.68706995075877) t1)))) (= y1 (+ -126.86408765190555 (+ (* (- -117.61865674356305 -126.86408765190555) s1) (* (- -119.92480038600044 -126.86408765190555) t1)))))) (and (= x1 (+ 136.46244654113548 (+ (* (- 134.13599546174152 136.46244654113548) s1) (* (- 138.68706995075877 136.46244654113548) t1)))) (= y1 (+ -124.16204200363161 (+ (* (- -126.07743434197691 -124.16204200363161) s1) (* (- -126.86408765190555 -124.16204200363161) t1)))))) (and (= x1 (+ 138.68706995075877 (+ (* (- 140.74456441216768 138.68706995075877) s1) (* (- 138.6680279059102 138.68706995075877) t1)))) (= y1 (+ -126.86408765190555 (+ (* (- -119.92480038600044 -126.86408765190555) s1) (* (- -122.10862697544962 -126.86408765190555) t1)))))) (and (= x1 (+ 138.6680279059102 (+ (* (- 136.46244654113548 138.6680279059102) s1) (* (- 138.68706995075877 138.6680279059102) t1)))) (= y1 (+ -122.10862697544962 (+ (* (- -124.16204200363161 -122.10862697544962) s1) (* (- -126.86408765190555 -122.10862697544962) t1)))))) (and (= x1 (+ 55.91327302041808 (+ (* (- 45.69512516861101 55.91327302041808) s1) (* (- 45.72054840526782 55.91327302041808) t1)))) (= y1 (+ -93.70432956181328 (+ (* (- -93.7785539174087 -93.70432956181328) s1) (* (- -97.27846158176756 -93.70432956181328) t1)))))) (and (= x1 (+ 45.72054840526782 (+ (* (- 55.9386962570748 45.72054840526782) s1) (* (- 60.506536724970985 45.72054840526782) t1)))) (= y1 (+ -97.27846158176756 (+ (* (- -97.20423722617214 -97.27846158176756) s1) (* (- -96.96690023137296 -97.27846158176756) t1)))))) (and (= x1 (+ 60.506536724970985 (+ (* (- 64.75575751984232 60.506536724970985) s1) (* (- 68.94368873032327 60.506536724970985) t1)))) (= y1 (+ -96.96690023137296 (+ (* (- -96.38898644497307 -96.96690023137296) s1) (* (- -95.4664389478992 -96.96690023137296) t1)))))) (and (= x1 (+ 68.94368873032327 (+ (* (- 73.04242681771184 68.94368873032327) s1) (* (- 77.02466252330628 68.94368873032327) t1)))) (= y1 (+ -95.4664389478992 (+ (* (- -94.20540453160885 -95.4664389478992) s1) (* (- -92.61428527361267 -95.4664389478992) t1)))))) (and (= x1 (+ 77.02466252330628 (+ (* (- 80.86386282577777 77.02466252330628) s1) (* (- 84.53444772659205 77.02466252330628) t1)))) (= y1 (+ -92.61428527361267 (+ (* (- -90.70368255572991 -92.61428527361267) s1) (* (- -88.48632642871917 -92.61428527361267) t1)))))) (and (= x1 (+ 84.53444772659205 (+ (* (- 88.01196068558849 84.53444772659205) s1) (* (- 91.2732315711289 84.53444772659205) t1)))) (= y1 (+ -88.48632642871917 (+ (* (- -85.97699079391664 -88.48632642871917) s1) (* (- -83.19239496701381 -88.48632642871917) t1)))))) (and (= x1 (+ 91.2732315711289 (+ (* (- 94.29653103910533 91.2732315711289) s1) (* (- 97.06171531220318 91.2732315711289) t1)))) (= y1 (+ -83.19239496701381 (+ (* (- -80.15109227983987 -83.19239496701381) s1) (* (- -76.87334646237781 -83.19239496701381) t1)))))) (and (= x1 (+ 97.06171531220318 (+ (* (- 99.55036039477766 97.06171531220318) s1) (* (- 101.74588482909034 97.06171531220318) t1)))) (= y1 (+ -76.87334646237781 (+ (* (- -73.3809966286618 -76.87334646237781) s1) (* (- -69.69731176613439 -76.87334646237781) t1)))))) (and (= x1 (+ 101.74588482909034 (+ (* (- 103.63366017500103 101.74588482909034) s1) (* (- 105.20110847700418 101.74588482909034) t1)))) (= y1 (+ -69.69731176613439 (+ (* (- -65.8468356979774 -69.69731176613439) s1) (* (- -61.85522355140981 -69.69731176613439) t1)))))) (and (= x1 (+ 105.20110847700418 (+ (* (- 106.43778606920353 105.20110847700418) s1) (* (- 107.3354531598448 105.20110847700418) t1)))) (= y1 (+ -61.85522355140981 (+ (* (- -57.749070821538524 -61.85522355140981) s1) (* (- -53.555736169682305 -61.85522355140981) t1)))))) (and (= x1 (+ 107.3354531598448 (+ (* (- 107.88812873177496 107.3354531598448) s1) (* (- 108.0944762373411 107.3354531598448) t1)))) (= y1 (+ -53.555736169682305 (+ (* (- -49.303159136838644 -53.555736169682305) s1) (* (- -45.305415778929905 -53.555736169682305) t1)))))) (and (= x1 (+ 108.0944762373411 (+ (* (- 108.48815103659285 108.0944762373411) s1) (* (- 104.98841162092523 108.0944762373411) t1)))) (= y1 (+ -45.305415778929905 (+ (* (- -13.045870820989753 -45.305415778929905) s1) (* (- -13.003162245475377 -45.305415778929905) t1)))))) (and (= x1 (+ 60.05372912266254 (+ (* (- 55.91327302041808 60.05372912266254) s1) (* (- 45.72054840526782 60.05372912266254) t1)))) (= y1 (+ -93.49631450626954 (+ (* (- -93.70432956181328 -93.49631450626954) s1) (* (- -97.27846158176756 -93.49631450626954) t1)))))) (and (= x1 (+ 45.72054840526782 (+ (* (- 60.506536724970985 45.72054840526782) s1) (* (- 68.94368873032327 45.72054840526782) t1)))) (= y1 (+ -97.27846158176756 (+ (* (- -96.96690023137296 -97.27846158176756) s1) (* (- -95.4664389478992 -97.27846158176756) t1)))))) (and (= x1 (+ 68.94368873032327 (+ (* (- 77.02466252330628 68.94368873032327) s1) (* (- 84.53444772659205 68.94368873032327) t1)))) (= y1 (+ -95.4664389478992 (+ (* (- -92.61428527361267 -95.4664389478992) s1) (* (- -88.48632642871917 -95.4664389478992) t1)))))) (and (= x1 (+ 84.53444772659205 (+ (* (- 91.2732315711289 84.53444772659205) s1) (* (- 97.06171531220318 84.53444772659205) t1)))) (= y1 (+ -88.48632642871917 (+ (* (- -83.19239496701381 -88.48632642871917) s1) (* (- -76.87334646237781 -88.48632642871917) t1)))))) (and (= x1 (+ 97.06171531220318 (+ (* (- 101.74588482909034 97.06171531220318) s1) (* (- 105.20110847700418 97.06171531220318) t1)))) (= y1 (+ -76.87334646237781 (+ (* (- -69.69731176613439 -76.87334646237781) s1) (* (- -61.85522355140981 -76.87334646237781) t1)))))) (and (= x1 (+ 105.20110847700418 (+ (* (- 107.3354531598448 105.20110847700418) s1) (* (- 108.0944762373411 105.20110847700418) t1)))) (= y1 (+ -61.85522355140981 (+ (* (- -53.555736169682305 -61.85522355140981) s1) (* (- -45.305415778929905 -61.85522355140981) t1)))))) (and (= x1 (+ 108.0944762373411 (+ (* (- 104.98841162092523 108.0944762373411) s1) (* (- 104.5900777584415 108.0944762373411) t1)))) (= y1 (+ -45.305415778929905 (+ (* (- -13.003162245475377 -45.305415778929905) s1) (* (- -45.40550692965206 -45.305415778929905) t1)))))) (and (= x1 (+ 64.02140353417111 (+ (* (- 60.05372912266254 64.02140353417111) s1) (* (- 45.72054840526782 64.02140353417111) t1)))) (= y1 (+ -92.9668929009961 (+ (* (- -93.49631450626954 -92.9668929009961) s1) (* (- -97.27846158176756 -92.9668929009961) t1)))))) (and (= x1 (+ 45.72054840526782 (+ (* (- 68.94368873032327 45.72054840526782) s1) (* (- 84.53444772659205 45.72054840526782) t1)))) (= y1 (+ -97.27846158176756 (+ (* (- -95.4664389478992 -97.27846158176756) s1) (* (- -88.48632642871917 -97.27846158176756) t1)))))) (and (= x1 (+ 84.53444772659205 (+ (* (- 97.06171531220318 84.53444772659205) s1) (* (- 105.20110847700418 84.53444772659205) t1)))) (= y1 (+ -88.48632642871917 (+ (* (- -76.87334646237781 -88.48632642871917) s1) (* (- -61.85522355140981 -88.48632642871917) t1)))))) (and (= x1 (+ 105.20110847700418 (+ (* (- 108.0944762373411 105.20110847700418) s1) (* (- 104.5900777584415 105.20110847700418) t1)))) (= y1 (+ -61.85522355140981 (+ (* (- -45.305415778929905 -61.85522355140981) s1) (* (- -45.40550692965206 -61.85522355140981) t1)))))) (and (= x1 (+ 67.93268124845255 (+ (* (- 64.02140353417111 67.93268124845255) s1) (* (- 45.72054840526782 67.93268124845255) t1)))) (= y1 (+ -92.11563846568583 (+ (* (- -92.9668929009961 -92.11563846568583) s1) (* (- -97.27846158176756 -92.11563846568583) t1)))))) (and (= x1 (+ 105.20110847700418 (+ (* (- 104.5900777584415 105.20110847700418) s1) (* (- 104.39304837933935 105.20110847700418) t1)))) (= y1 (+ -61.85522355140981 (+ (* (- -45.40550692965206 -61.85522355140981) s1) (* (- -49.117650835087694 -61.85522355140981) t1)))))) (and (= x1 (+ 67.93268124845255 (+ (* (- 45.72054840526782 67.93268124845255) s1) (* (- 84.53444772659205 67.93268124845255) t1)))) (= y1 (+ -92.11563846568583 (+ (* (- -97.27846158176756 -92.11563846568583) s1) (* (- -88.48632642871917 -92.11563846568583) t1)))))) (and (= x1 (+ 105.20110847700418 (+ (* (- 104.39304837933935 105.20110847700418) s1) (* (- 103.8671461289554 105.20110847700418) t1)))) (= y1 (+ -61.85522355140981 (+ (* (- -49.117650835087694 -61.85522355140981) s1) (* (- -53.08579325880577 -61.85522355140981) t1)))))) (and (= x1 (+ 71.76150202631244 (+ (* (- 67.93268124845255 71.76150202631244) s1) (* (- 84.53444772659205 71.76150202631244) t1)))) (= y1 (+ -90.94822297713904 (+ (* (- -92.11563846568583 -90.94822297713904) s1) (* (- -88.48632642871917 -90.94822297713904) t1)))))) (and (= x1 (+ 105.20110847700418 (+ (* (- 103.8671461289554 105.20110847700418) s1) (* (- 103.01936115382168 105.20110847700418) t1)))) (= y1 (+ -61.85522355140981 (+ (* (- -53.08579325880577 -61.85522355140981) s1) (* (- -56.997824458554575 -61.85522355140981) t1)))))) (and (= x1 (+ 75.48235502638553 (+ (* (- 71.76150202631244 75.48235502638553) s1) (* (- 84.53444772659205 75.48235502638553) t1)))) (= y1 (+ -89.47242474441312 (+ (* (- -90.94822297713904 -89.47242474441312) s1) (* (- -88.48632642871917 -89.47242474441312) t1)))))) (and (= x1 (+ 105.20110847700418 (+ (* (- 103.01936115382168 105.20110847700418) s1) (* (- 101.85534211426142 105.20110847700418) t1)))) (= y1 (+ -61.85522355140981 (+ (* (- -56.997824458554575 -61.85522355140981) s1) (* (- -60.82767917478221 -61.85522355140981) t1)))))) (and (= x1 (+ 79.07044877993135 (+ (* (- 75.48235502638553 79.07044877993135) s1) (* (- 84.53444772659205 79.07044877993135) t1)))) (= y1 (+ -87.69807678315081 (+ (* (- -89.47242474441312 -87.69807678315081) s1) (* (- -88.48632642871917 -87.69807678315081) t1)))))) (and (= x1 (+ 105.20110847700418 (+ (* (- 101.85534211426142 105.20110847700418) s1) (* (- 100.38284468931695 105.20110847700418) t1)))) (= y1 (+ -61.85522355140981 (+ (* (- -60.82767917478221 -61.85522355140981) s1) (* (- -64.5498396771521 -61.85522355140981) t1)))))) (and (= x1 (+ 82.50187637256013 (+ (* (- 79.07044877993135 82.50187637256013) s1) (* (- 84.53444772659205 82.50187637256013) t1)))) (= y1 (+ -85.637001299716 (+ (* (- -87.69807678315081 -85.637001299716) s1) (* (- -88.48632642871917 -85.637001299716) t1)))))) (and (= x1 (+ 105.20110847700418 (+ (* (- 100.38284468931695 105.20110847700418) s1) (* (- 98.6116799018588 105.20110847700418) t1)))) (= y1 (+ -61.85522355140981 (+ (* (- -64.5498396771521 -61.85522355140981) s1) (* (- -68.1395057852377 -61.85522355140981) t1)))))) (and (= x1 (+ 85.75377473231055 (+ (* (- 82.50187637256013 85.75377473231055) s1) (* (- 84.53444772659205 85.75377473231055) t1)))) (= y1 (+ -83.30293092165907 (+ (* (- -85.637001299716 -83.30293092165907) s1) (* (- -88.48632642871917 -83.30293092165907) t1)))))) (and (= x1 (+ 105.20110847700418 (+ (* (- 98.6116799018588 105.20110847700418) s1) (* (- 96.55364874925553 105.20110847700418) t1)))) (= y1 (+ -61.85522355140981 (+ (* (- -68.1395057852377 -61.85522355140981) s1) (* (- -71.57276010829395 -61.85522355140981) t1)))))) (and (= x1 (+ 88.80447696276612 (+ (* (- 85.75377473231055 88.80447696276612) s1) (* (- 84.53444772659205 88.80447696276612) t1)))) (= y1 (+ -80.71141719934084 (+ (* (- -83.30293092165907 -80.71141719934084) s1) (* (- -88.48632642871917 -80.71141719934084) t1)))))) (and (= x1 (+ 84.53444772659205 (+ (* (- 105.20110847700418 84.53444772659205) s1) (* (- 96.55364874925553 84.53444772659205) t1)))) (= y1 (+ -88.48632642871917 (+ (* (- -61.85522355140981 -88.48632642871917) s1) (* (- -71.57276010829395 -88.48632642871917) t1)))))) (and (= x1 (+ 91.63365670623904 (+ (* (- 88.80447696276612 91.63365670623904) s1) (* (- 84.53444772659205 91.63365670623904) t1)))) (= y1 (+ -77.87972698835506 (+ (* (- -80.71141719934084 -77.87972698835506) s1) (* (- -88.48632642871917 -77.87972698835506) t1)))))) (and (= x1 (+ 84.53444772659205 (+ (* (- 96.55364874925553 84.53444772659205) s1) (* (- 94.22246357515137 84.53444772659205) t1)))) (= y1 (+ -88.48632642871917 (+ (* (- -71.57276010829395 -88.48632642871917) s1) (* (- -74.82672740313687 -88.48632642871917) t1)))))) (and (= x1 (+ 94.22246357515137 (+ (* (- 91.63365670623904 94.22246357515137) s1) (* (- 84.53444772659205 94.22246357515137) t1)))) (= y1 (+ -74.82672740313687 (+ (* (- -77.87972698835506 -74.82672740313687) s1) (* (- -88.48632642871917 -74.82672740313687) t1)))))) (and (= x1 (+ 55.88784978376137 (+ (* (- 45.6697019319542 55.88784978376137) s1) (* (- 45.69512516861101 55.88784978376137) t1)))) (= y1 (+ -90.20442189745442 (+ (* (- -90.27864625304984 -90.20442189745442) s1) (* (- -93.7785539174087 -90.20442189745442) t1)))))) (and (= x1 (+ 45.69512516861101 (+ (* (- 55.91327302041808 45.69512516861101) s1) (* (- 60.05372912266254 45.69512516861101) t1)))) (= y1 (+ -93.7785539174087 (+ (* (- -93.70432956181328 -93.7785539174087) s1) (* (- -93.49631450626954 -93.7785539174087) t1)))))) (and (= x1 (+ 60.05372912266254 (+ (* (- 64.02140353417111 60.05372912266254) s1) (* (- 67.93268124845255 60.05372912266254) t1)))) (= y1 (+ -93.49631450626954 (+ (* (- -92.9668929009961 -93.49631450626954) s1) (* (- -92.11563846568583 -93.49631450626954) t1)))))) (and (= x1 (+ 67.93268124845255 (+ (* (- 71.76150202631244 67.93268124845255) s1) (* (- 75.48235502638553 67.93268124845255) t1)))) (= y1 (+ -92.11563846568583 (+ (* (- -90.94822297713904 -92.11563846568583) s1) (* (- -89.47242474441312 -92.11563846568583) t1)))))) (and (= x1 (+ 75.48235502638553 (+ (* (- 79.07044877993135 75.48235502638553) s1) (* (- 82.50187637256013 75.48235502638553) t1)))) (= y1 (+ -89.47242474441312 (+ (* (- -87.69807678315081 -89.47242474441312) s1) (* (- -85.637001299716 -89.47242474441312) t1)))))) (and (= x1 (+ 82.50187637256013 (+ (* (- 85.75377473231055 82.50187637256013) s1) (* (- 88.80447696276612 82.50187637256013) t1)))) (= y1 (+ -85.637001299716 (+ (* (- -83.30293092165907 -85.637001299716) s1) (* (- -80.71141719934084 -85.637001299716) t1)))))) (and (= x1 (+ 88.80447696276612 (+ (* (- 91.63365670623904 88.80447696276612) s1) (* (- 94.22246357515137 88.80447696276612) t1)))) (= y1 (+ -80.71141719934084 (+ (* (- -77.87972698835506 -80.71141719934084) s1) (* (- -74.82672740313687 -80.71141719934084) t1)))))) (and (= x1 (+ 94.22246357515137 (+ (* (- 96.55364874925553 94.22246357515137) s1) (* (- 98.6116799018588 94.22246357515137) t1)))) (= y1 (+ -74.82672740313687 (+ (* (- -71.57276010829395 -74.82672740313687) s1) (* (- -68.1395057852377 -74.82672740313687) t1)))))) (and (= x1 (+ 98.6116799018588 (+ (* (- 100.38284468931695 98.6116799018588) s1) (* (- 101.85534211426142 98.6116799018588) t1)))) (= y1 (+ -68.1395057852377 (+ (* (- -64.5498396771521 -68.1395057852377) s1) (* (- -60.82767917478221 -68.1395057852377) t1)))))) (and (= x1 (+ 101.85534211426142 (+ (* (- 103.01936115382168 101.85534211426142) s1) (* (- 103.8671461289554 101.85534211426142) t1)))) (= y1 (+ -60.82767917478221 (+ (* (- -56.997824458554575 -60.82767917478221) s1) (* (- -53.08579325880577 -60.82767917478221) t1)))))) (and (= x1 (+ 103.8671461289554 (+ (* (- 104.39304837933935 103.8671461289554) s1) (* (- 104.59473682167348 103.8671461289554) t1)))) (= y1 (+ -53.08579325880577 (+ (* (- -49.117650835087694 -53.08579325880577) s1) (* (- -45.2627072034155 -53.08579325880577) t1)))))) (and (= x1 (+ 104.59473682167348 (+ (* (- 104.98841162092523 104.59473682167348) s1) (* (- 101.48867220525761 104.59473682167348) t1)))) (= y1 (+ -45.2627072034155 (+ (* (- -13.003162245475377 -45.2627072034155) s1) (* (- -12.960453669960998 -45.2627072034155) t1)))))) (and (= x1 (+ 59.60092152035409 (+ (* (- 55.88784978376137 59.60092152035409) s1) (* (- 45.69512516861101 59.60092152035409) t1)))) (= y1 (+ -90.02572878116611 (+ (* (- -90.20442189745442 -90.02572878116611) s1) (* (- -93.7785539174087 -90.02572878116611) t1)))))) (and (= x1 (+ 45.69512516861101 (+ (* (- 60.05372912266254 45.69512516861101) s1) (* (- 67.93268124845255 45.69512516861101) t1)))) (= y1 (+ -93.7785539174087 (+ (* (- -93.49631450626954 -93.7785539174087) s1) (* (- -92.11563846568583 -93.7785539174087) t1)))))) (and (= x1 (+ 67.93268124845255 (+ (* (- 75.48235502638553 67.93268124845255) s1) (* (- 82.50187637256013 67.93268124845255) t1)))) (= y1 (+ -92.11563846568583 (+ (* (- -89.47242474441312 -92.11563846568583) s1) (* (- -85.637001299716 -92.11563846568583) t1)))))) (and (= x1 (+ 82.50187637256013 (+ (* (- 88.80447696276612 82.50187637256013) s1) (* (- 94.22246357515137 82.50187637256013) t1)))) (= y1 (+ -85.637001299716 (+ (* (- -80.71141719934084 -85.637001299716) s1) (* (- -74.82672740313687 -85.637001299716) t1)))))) (and (= x1 (+ 94.22246357515137 (+ (* (- 98.6116799018588 94.22246357515137) s1) (* (- 101.85534211426142 94.22246357515137) t1)))) (= y1 (+ -74.82672740313687 (+ (* (- -68.1395057852377 -74.82672740313687) s1) (* (- -60.82767917478221 -74.82672740313687) t1)))))) (and (= x1 (+ 101.85534211426142 (+ (* (- 103.8671461289554 101.85534211426142) s1) (* (- 104.59473682167348 101.85534211426142) t1)))) (= y1 (+ -60.82767917478221 (+ (* (- -53.08579325880577 -60.82767917478221) s1) (* (- -45.2627072034155 -60.82767917478221) t1)))))) (and (= x1 (+ 104.59473682167348 (+ (* (- 101.48867220525761 104.59473682167348) s1) (* (- 101.09499740600587 104.59473682167348) t1)))) (= y1 (+ -45.2627072034155 (+ (* (- -12.960453669960998 -45.2627072034155) s1) (* (- -45.21999862790111 -45.2627072034155) t1)))))) (and (= x1 (+ 63.28704954849991 (+ (* (- 59.60092152035409 63.28704954849991) s1) (* (- 45.69512516861101 63.28704954849991) t1)))) (= y1 (+ -89.54479935701914 (+ (* (- -90.02572878116611 -89.54479935701914) s1) (* (- -93.7785539174087 -89.54479935701914) t1)))))) (and (= x1 (+ 45.69512516861101 (+ (* (- 67.93268124845255 45.69512516861101) s1) (* (- 82.50187637256013 45.69512516861101) t1)))) (= y1 (+ -93.7785539174087 (+ (* (- -92.11563846568583 -93.7785539174087) s1) (* (- -85.637001299716 -93.7785539174087) t1)))))) (and (= x1 (+ 82.50187637256013 (+ (* (- 94.22246357515137 82.50187637256013) s1) (* (- 101.85534211426142 82.50187637256013) t1)))) (= y1 (+ -85.637001299716 (+ (* (- -74.82672740313687 -85.637001299716) s1) (* (- -60.82767917478221 -85.637001299716) t1)))))) (and (= x1 (+ 101.85534211426142 (+ (* (- 104.59473682167348 101.85534211426142) s1) (* (- 101.09499740600587 101.85534211426142) t1)))) (= y1 (+ -60.82767917478221 (+ (* (- -45.2627072034155 -60.82767917478221) s1) (* (- -45.21999862790111 -60.82767917478221) t1)))))) (and (= x1 (+ 66.92167376658183 (+ (* (- 63.28704954849991 66.92167376658183) s1) (* (- 45.69512516861101 66.92167376658183) t1)))) (= y1 (+ -88.76483798347245 (+ (* (- -89.54479935701914 -88.76483798347245) s1) (* (- -93.7785539174087 -88.76483798347245) t1)))))) (and (= x1 (+ 101.85534211426142 (+ (* (- 101.09499740600587 101.85534211426142) s1) (* (- 100.89796802690373 101.85534211426142) t1)))) (= y1 (+ -60.82767917478221 (+ (* (- -45.21999862790111 -60.82767917478221) s1) (* (- -48.932142533336744 -60.82767917478221) t1)))))) (and (= x1 (+ 66.92167376658183 (+ (* (- 45.69512516861101 66.92167376658183) s1) (* (- 82.50187637256013 66.92167376658183) t1)))) (= y1 (+ -88.76483798347245 (+ (* (- -93.7785539174087 -88.76483798347245) s1) (* (- -85.637001299716 -88.76483798347245) t1)))))) (and (= x1 (+ 101.85534211426142 (+ (* (- 100.89796802690373 101.85534211426142) s1) (* (- 100.39883909806599 101.85534211426142) t1)))) (= y1 (+ -60.82767917478221 (+ (* (- -48.932142533336744 -60.82767917478221) s1) (* (- -52.615850347929246 -60.82767917478221) t1)))))) (and (= x1 (+ 70.48057723491303 (+ (* (- 66.92167376658183 70.48057723491303) s1) (* (- 82.50187637256013 70.48057723491303) t1)))) (= y1 (+ -87.69104142266923 (+ (* (- -88.76483798347245 -87.69104142266923) s1) (* (- -85.637001299716 -87.69104142266923) t1)))))) (and (= x1 (+ 101.85534211426142 (+ (* (- 100.39883909806599 101.85534211426142) s1) (* (- 99.60093623843983 101.85534211426142) t1)))) (= y1 (+ -60.82767917478221 (+ (* (- -52.615850347929246 -60.82767917478221) s1) (* (- -56.24657809557062 -60.82767917478221) t1)))))) (and (= x1 (+ 73.94004752946479 (+ (* (- 70.48057723491303 73.94004752946479) s1) (* (- 82.50187637256013 73.94004752946479) t1)))) (= y1 (+ -86.33056421521357 (+ (* (- -87.69104142266923 -86.33056421521357) s1) (* (- -85.637001299716 -86.33056421521357) t1)))))) (and (= x1 (+ 101.85534211426142 (+ (* (- 99.60093623843983 101.85534211426142) s1) (* (- 98.50957575151864 101.85534211426142) t1)))) (= y1 (+ -60.82767917478221 (+ (* (- -56.24657809557062 -60.82767917478221) s1) (* (- -59.800134798154616 -60.82767917478221) t1)))))) (and (= x1 (+ 77.27703473408495 (+ (* (- 73.94004752946479 77.27703473408495) s1) (* (- 82.50187637256013 77.27703473408495) t1)))) (= y1 (+ -84.69247101057171 (+ (* (- -86.33056421521357 -84.69247101057171) s1) (* (- -85.637001299716 -84.69247101057171) t1)))))) (and (= x1 (+ 101.85534211426142 (+ (* (- 98.50957575151864 101.85534211426142) s1) (* (- 97.1320292036329 101.85534211426142) t1)))) (= y1 (+ -60.82767917478221 (+ (* (- -59.800134798154616 -60.82767917478221) s1) (* (- -63.25284365632679 -60.82767917478221) t1)))))) (and (= x1 (+ 80.46930501852823 (+ (* (- 77.27703473408495 80.46930501852823) s1) (* (- 82.50187637256013 80.46930501852823) t1)))) (= y1 (+ -82.78767617071284 (+ (* (- -84.69247101057171 -82.78767617071284) s1) (* (- -85.637001299716 -82.78767617071284) t1)))))) (and (= x1 (+ 101.85534211426142 (+ (* (- 97.1320292036329 101.85534211426142) s1) (* (- 95.47747497462726 101.85534211426142) t1)))) (= y1 (+ -60.82767917478221 (+ (* (- -63.25284365632679 -60.82767917478221) s1) (* (- -66.58169980434101 -60.82767917478221) t1)))))) (and (= x1 (+ 83.4955887790326 (+ (* (- 80.46930501852823 83.4955887790326) s1) (* (- 82.50187637256013 83.4955887790326) t1)))) (= y1 (+ -80.6288710494015 (+ (* (- -82.78767617071284 -80.6288710494015) s1) (* (- -85.637001299716 -80.6288710494015) t1)))))) (and (= x1 (+ 101.85534211426142 (+ (* (- 95.47747497462726 101.85534211426142) s1) (* (- 93.55693710373339 101.85534211426142) t1)))) (= y1 (+ -60.82767917478221 (+ (* (- -66.58169980434101 -60.82767917478221) s1) (* (- -69.7645235879261 -60.82767917478221) t1)))))) (and (= x1 (+ 86.33572235440334 (+ (* (- 83.4955887790326 86.33572235440334) s1) (* (- 82.50187637256013 86.33572235440334) t1)))) (= y1 (+ -78.23043943166788 (+ (* (- -80.6288710494015 -78.23043943166788) s1) (* (- -85.637001299716 -78.23043943166788) t1)))))) (and (= x1 (+ 82.50187637256013 (+ (* (- 101.85534211426142 82.50187637256013) s1) (* (- 93.55693710373339 82.50187637256013) t1)))) (= y1 (+ -85.637001299716 (+ (* (- -60.82767917478221 -85.637001299716) s1) (* (- -69.7645235879261 -85.637001299716) t1)))))) (and (= x1 (+ 88.97078237337274 (+ (* (- 86.33572235440334 88.97078237337274) s1) (* (- 82.50187637256013 88.97078237337274) t1)))) (= y1 (+ -75.60836169687025 (+ (* (- -78.23043943166788 -75.60836169687025) s1) (* (- -85.637001299716 -75.60836169687025) t1)))))) (and (= x1 (+ 82.50187637256013 (+ (* (- 93.55693710373339 82.50187637256013) s1) (* (- 91.38321183809956 82.50187637256013) t1)))) (= y1 (+ -85.637001299716 (+ (* (- -69.7645235879261 -85.637001299716) s1) (* (- -72.78010834389593 -85.637001299716) t1)))))) (and (= x1 (+ 91.38321183809956 (+ (* (- 88.97078237337274 91.38321183809956) s1) (* (- 82.50187637256013 91.38321183809956) t1)))) (= y1 (+ -72.78010834389593 (+ (* (- -75.60836169687025 -72.78010834389593) s1) (* (- -85.637001299716 -72.78010834389593) t1)))))) (and (= x1 (+ 55.71960555191996 (+ (* (- 45.644278695297395 55.71960555191996) s1) (* (- 45.6697019319542 55.71960555191996) t1)))) (= y1 (+ -86.70846796777342 (+ (* (- -86.77873858869098 -86.70846796777342) s1) (* (- -90.27864625304984 -86.70846796777342) t1)))))) (and (= x1 (+ 45.6697019319542 (+ (* (- 55.88784978376137 45.6697019319542) s1) (* (- 59.60092152035409 45.6697019319542) t1)))) (= y1 (+ -90.27864625304984 (+ (* (- -90.20442189745442 -90.27864625304984) s1) (* (- -90.02572878116611 -90.27864625304984) t1)))))) (and (= x1 (+ 59.60092152035409 (+ (* (- 63.28704954849991 59.60092152035409) s1) (* (- 66.92167376658183 59.60092152035409) t1)))) (= y1 (+ -90.02572878116611 (+ (* (- -89.54479935701914 -90.02572878116611) s1) (* (- -88.76483798347245 -90.02572878116611) t1)))))) (and (= x1 (+ 66.92167376658183 (+ (* (- 70.48057723491303 66.92167376658183) s1) (* (- 73.94004752946479 66.92167376658183) t1)))) (= y1 (+ -88.76483798347245 (+ (* (- -87.69104142266923 -88.76483798347245) s1) (* (- -86.33056421521357 -88.76483798347245) t1)))))) (and (= x1 (+ 73.94004752946479 (+ (* (- 77.27703473408495 73.94004752946479) s1) (* (- 80.46930501852823 73.94004752946479) t1)))) (= y1 (+ -86.33056421521357 (+ (* (- -84.69247101057171 -86.33056421521357) s1) (* (- -82.78767617071284 -86.33056421521357) t1)))))) (and (= x1 (+ 80.46930501852823 (+ (* (- 83.4955887790326 80.46930501852823) s1) (* (- 86.33572235440334 80.46930501852823) t1)))) (= y1 (+ -82.78767617071284 (+ (* (- -80.6288710494015 -82.78767617071284) s1) (* (- -78.23043943166788 -82.78767617071284) t1)))))) (and (= x1 (+ 86.33572235440334 (+ (* (- 88.97078237337274 86.33572235440334) s1) (* (- 91.38321183809956 86.33572235440334) t1)))) (= y1 (+ -78.23043943166788 (+ (* (- -75.60836169687025 -78.23043943166788) s1) (* (- -72.78010834389593 -78.23043943166788) t1)))))) (and (= x1 (+ 91.38321183809956 (+ (* (- 93.55693710373339 91.38321183809956) s1) (* (- 95.47747497462726 91.38321183809956) t1)))) (= y1 (+ -72.78010834389593 (+ (* (- -69.7645235879261 -72.78010834389593) s1) (* (- -66.58169980434101 -72.78010834389593) t1)))))) (and (= x1 (+ 95.47747497462726 (+ (* (- 97.1320292036329 95.47747497462726) s1) (* (- 98.50957575151864 95.47747497462726) t1)))) (= y1 (+ -66.58169980434101 (+ (* (- -63.25284365632679 -66.58169980434101) s1) (* (- -59.800134798154616 -66.58169980434101) t1)))))) (and (= x1 (+ 98.50957575151864 (+ (* (- 99.60093623843983 98.50957575151864) s1) (* (- 100.39883909806599 98.50957575151864) t1)))) (= y1 (+ -59.800134798154616 (+ (* (- -56.24657809557062 -59.800134798154616) s1) (* (- -52.615850347929246 -59.800134798154616) t1)))))) (and (= x1 (+ 100.39883909806599 (+ (* (- 100.89796802690373 100.39883909806599) s1) (* (- 101.09499740600587 100.39883909806599) t1)))) (= y1 (+ -52.615850347929246 (+ (* (- -48.932142533336744 -52.615850347929246) s1) (* (- -45.21999862790111 -52.615850347929246) t1)))))) (and (= x1 (+ 101.09499740600587 (+ (* (- 101.48867220525761 101.09499740600587) s1) (* (- 97.98893278959 101.09499740600587) t1)))) (= y1 (+ -45.21999862790111 (+ (* (- -12.960453669960998 -45.21999862790111) s1) (* (- -12.91774509444662 -45.21999862790111) t1)))))) (and (= x1 (+ 55.862426547104654 (+ (* (- 55.71960555191996 55.862426547104654) s1) (* (- 45.6697019319542 55.862426547104654) t1)))) (= y1 (+ -86.70451423309557 (+ (* (- -86.70846796777342 -86.70451423309557) s1) (* (- -90.27864625304984 -86.70451423309557) t1)))))) (and (= x1 (+ 45.6697019319542 (+ (* (- 59.60092152035409 45.6697019319542) s1) (* (- 66.92167376658183 45.6697019319542) t1)))) (= y1 (+ -90.27864625304984 (+ (* (- -90.02572878116611 -90.27864625304984) s1) (* (- -88.76483798347245 -90.27864625304984) t1)))))) (and (= x1 (+ 66.92167376658183 (+ (* (- 73.94004752946479 66.92167376658183) s1) (* (- 80.46930501852823 66.92167376658183) t1)))) (= y1 (+ -88.76483798347245 (+ (* (- -86.33056421521357 -88.76483798347245) s1) (* (- -82.78767617071284 -88.76483798347245) t1)))))) (and (= x1 (+ 80.46930501852823 (+ (* (- 86.33572235440334 80.46930501852823) s1) (* (- 91.38321183809956 80.46930501852823) t1)))) (= y1 (+ -82.78767617071284 (+ (* (- -78.23043943166788 -82.78767617071284) s1) (* (- -72.78010834389593 -82.78767617071284) t1)))))) (and (= x1 (+ 91.38321183809956 (+ (* (- 95.47747497462726 91.38321183809956) s1) (* (- 98.50957575151864 91.38321183809956) t1)))) (= y1 (+ -72.78010834389593 (+ (* (- -66.58169980434101 -72.78010834389593) s1) (* (- -59.800134798154616 -72.78010834389593) t1)))))) (and (= x1 (+ 98.50957575151864 (+ (* (- 100.39883909806599 98.50957575151864) s1) (* (- 101.09499740600587 98.50957575151864) t1)))) (= y1 (+ -59.800134798154616 (+ (* (- -52.615850347929246 -59.800134798154616) s1) (* (- -45.21999862790111 -59.800134798154616) t1)))))) (and (= x1 (+ 55.862426547104654 (+ (* (- 45.6697019319542 55.862426547104654) s1) (* (- 66.92167376658183 55.862426547104654) t1)))) (= y1 (+ -86.70451423309557 (+ (* (- -90.27864625304984 -86.70451423309557) s1) (* (- -88.76483798347245 -86.70451423309557) t1)))))) (and (= x1 (+ 66.92167376658183 (+ (* (- 80.46930501852823 66.92167376658183) s1) (* (- 91.38321183809956 66.92167376658183) t1)))) (= y1 (+ -88.76483798347245 (+ (* (- -82.78767617071284 -88.76483798347245) s1) (* (- -72.78010834389593 -88.76483798347245) t1)))))) (and (= x1 (+ 91.38321183809956 (+ (* (- 98.50957575151864 91.38321183809956) s1) (* (- 101.09499740600587 91.38321183809956) t1)))) (= y1 (+ -72.78010834389593 (+ (* (- -59.800134798154616 -72.78010834389593) s1) (* (- -45.21999862790111 -72.78010834389593) t1)))))) (and (= x1 (+ 101.09499740600587 (+ (* (- 97.98893278959 101.09499740600587) s1) (* (- 97.59991705357025 101.09499740600587) t1)))) (= y1 (+ -45.21999862790111 (+ (* (- -12.91774509444662 -45.21999862790111) s1) (* (- -45.03449032615016 -45.21999862790111) t1)))))) (and (= x1 (+ 101.09499740600587 (+ (* (- 97.59991705357025 101.09499740600587) s1) (* (- 97.59525799033824 101.09499740600587) t1)))) (= y1 (+ -45.21999862790111 (+ (* (- -45.03449032615016 -45.21999862790111) s1) (* (- -45.17729005238668 -45.21999862790111) t1)))))) (and (= x1 (+ 101.09499740600587 (+ (* (- 97.59525799033824 101.09499740600587) s1) (* (- 97.4028876744681 101.09499740600587) t1)))) (= y1 (+ -45.21999862790111 (+ (* (- -45.17729005238668 -45.21999862790111) s1) (* (- -48.746634231585794 -45.21999862790111) t1)))))) (and (= x1 (+ 101.09499740600587 (+ (* (- 97.4028876744681 101.09499740600587) s1) (* (- 96.93053206717659 101.09499740600587) t1)))) (= y1 (+ -45.21999862790111 (+ (* (- -48.746634231585794 -45.21999862790111) s1) (* (- -52.14590743705272 -45.21999862790111) t1)))))) (and (= x1 (+ 101.09499740600587 (+ (* (- 96.93053206717659 101.09499740600587) s1) (* (- 96.18251132305798 101.09499740600587) t1)))) (= y1 (+ -45.21999862790111 (+ (* (- -52.14590743705272 -45.21999862790111) s1) (* (- -55.49533173258666 -45.21999862790111) t1)))))) (and (= x1 (+ 91.38321183809956 (+ (* (- 101.09499740600587 91.38321183809956) s1) (* (- 96.18251132305798 91.38321183809956) t1)))) (= y1 (+ -72.78010834389593 (+ (* (- -45.21999862790111 -72.78010834389593) s1) (* (- -55.49533173258666 -72.78010834389593) t1)))))) (and (= x1 (+ 91.38321183809956 (+ (* (- 96.18251132305798 91.38321183809956) s1) (* (- 95.16380938877586 91.38321183809956) t1)))) (= y1 (+ -72.78010834389593 (+ (* (- -55.49533173258666 -72.78010834389593) s1) (* (- -58.77259042152702 -72.78010834389593) t1)))))) (and (= x1 (+ 91.38321183809956 (+ (* (- 95.16380938877586 91.38321183809956) s1) (* (- 93.88121371794884 91.38321183809956) t1)))) (= y1 (+ -72.78010834389593 (+ (* (- -58.77259042152702 -72.78010834389593) s1) (* (- -61.955847635501485 -72.78010834389593) t1)))))) (and (= x1 (+ 91.38321183809956 (+ (* (- 93.88121371794884 91.38321183809956) s1) (* (- 92.3432700473957 91.38321183809956) t1)))) (= y1 (+ -72.78010834389593 (+ (* (- -61.955847635501485 -72.78010834389593) s1) (* (- -65.02389382344433 -72.78010834389593) t1)))))) (and (= x1 (+ 91.38321183809956 (+ (* (- 92.3432700473957 91.38321183809956) s1) (* (- 90.56022545821125 91.38321183809956) t1)))) (= y1 (+ -72.78010834389593 (+ (* (- -65.02389382344433 -72.78010834389593) s1) (* (- -67.95628706755826 -72.78010834389593) t1)))))) (and (= x1 (+ 91.38321183809956 (+ (* (- 90.56022545821125 91.38321183809956) s1) (* (- 88.54396010104774 91.38321183809956) t1)))) (= y1 (+ -72.78010834389593 (+ (* (- -67.95628706755826 -72.78010834389593) s1) (* (- -70.733489284655 -72.78010834389593) t1)))))) (and (= x1 (+ 91.38321183809956 (+ (* (- 88.54396010104774 91.38321183809956) s1) (* (- 86.30790804050645 91.38321183809956) t1)))) (= y1 (+ -72.78010834389593 (+ (* (- -70.733489284655 -72.78010834389593) s1) (* (- -73.33699640538543 -72.78010834389593) t1)))))) (and (= x1 (+ 91.38321183809956 (+ (* (- 86.30790804050645 91.38321183809956) s1) (* (- 83.86696774604057 91.38321183809956) t1)))) (= y1 (+ -72.78010834389593 (+ (* (- -73.33699640538543 -72.78010834389593) s1) (* (- -75.74946166399491 -72.78010834389593) t1)))))) (and (= x1 (+ 91.38321183809956 (+ (* (- 83.86696774604057 91.38321183809956) s1) (* (- 81.23740282575466 91.38321183809956) t1)))) (= y1 (+ -72.78010834389593 (+ (* (- -75.74946166399491 -72.78010834389593) s1) (* (- -77.95481117714392 -72.78010834389593) t1)))))) (and (= x1 (+ 66.92167376658183 (+ (* (- 91.38321183809956 66.92167376658183) s1) (* (- 81.23740282575466 66.92167376658183) t1)))) (= y1 (+ -88.76483798347245 (+ (* (- -72.78010834389593 -88.76483798347245) s1) (* (- -77.95481117714392 -88.76483798347245) t1)))))) (and (= x1 (+ 66.92167376658183 (+ (* (- 81.23740282575466 66.92167376658183) s1) (* (- 78.43673366449633 66.92167376658183) t1)))) (= y1 (+ -88.76483798347245 (+ (* (- -77.95481117714392 -88.76483798347245) s1) (* (- -79.93835104170968 -88.76483798347245) t1)))))) (and (= x1 (+ 66.92167376658183 (+ (* (- 78.43673366449633 66.92167376658183) s1) (* (- 75.48362068823855 66.92167376658183) t1)))) (= y1 (+ -88.76483798347245 (+ (* (- -79.93835104170968 -88.76483798347245) s1) (* (- -81.6868652379926 -88.76483798347245) t1)))))) (and (= x1 (+ 66.92167376658183 (+ (* (- 75.48362068823855 66.92167376658183) s1) (* (- 72.39774003254405 66.92167376658183) t1)))) (= y1 (+ -88.76483798347245 (+ (* (- -81.6868652379926 -88.76483798347245) s1) (* (- -83.18870368601402 -88.76483798347245) t1)))))) (and (= x1 (+ 66.92167376658183 (+ (* (- 72.39774003254405 66.92167376658183) s1) (* (- 69.19965244351361 66.92167376658183) t1)))) (= y1 (+ -88.76483798347245 (+ (* (- -83.18870368601402 -88.76483798347245) s1) (* (- -84.43385986819942 -88.76483798347245) t1)))))) (and (= x1 (+ 66.92167376658183 (+ (* (- 69.19965244351361 66.92167376658183) s1) (* (- 65.91066628471111 66.92167376658183) t1)))) (= y1 (+ -88.76483798347245 (+ (* (- -84.43385986819942 -88.76483798347245) s1) (* (- -85.41403750125906 -88.76483798347245) t1)))))) (and (= x1 (+ 66.92167376658183 (+ (* (- 65.91066628471111 66.92167376658183) s1) (* (- 62.5526955628287 66.92167376658183) t1)))) (= y1 (+ -88.76483798347245 (+ (* (- -85.41403750125906 -88.76483798347245) s1) (* (- -86.12270581304219 -88.76483798347245) t1)))))) (and (= x1 (+ 66.92167376658183 (+ (* (- 62.5526955628287 66.92167376658183) s1) (* (- 59.148113918045645 66.92167376658183) t1)))) (= y1 (+ -88.76483798347245 (+ (* (- -86.12270581304219 -88.76483798347245) s1) (* (- -86.55514305606268 -88.76483798347245) t1)))))) (and (= x1 (+ 55.862426547104654 (+ (* (- 66.92167376658183 55.862426547104654) s1) (* (- 59.148113918045645 55.862426547104654) t1)))) (= y1 (+ -86.70451423309557 (+ (* (- -88.76483798347245 -86.70451423309557) s1) (* (- -86.55514305606268 -86.70451423309557) t1)))))) (and (= x1 (+ 55.862426547104654 (+ (* (- 59.148113918045645 55.862426547104654) s1) (* (- 55.79746327487291 55.862426547104654) t1)))) (= y1 (+ -86.70451423309557 (+ (* (- -86.55514305606268 -86.70451423309557) s1) (* (- -86.70498612458596 -86.70451423309557) t1)))))) (and (= x1 (+ 45.644278695297395 (+ (* (- 55.71960555191996 45.644278695297395) s1) (* (- 55.79746327487291 45.644278695297395) t1)))) (= y1 (+ -86.77873858869098 (+ (* (- -86.70846796777342 -86.77873858869098) s1) (* (- -86.70498612458596 -86.77873858869098) t1)))))) (and (= x1 (+ 97.59991705357025 (+ (* (- 97.98893278959 97.59991705357025) s1) (* (- 97.59612988884221 97.59991705357025) t1)))) (= y1 (+ -45.03449032615016 (+ (* (- -12.91774509444662 -45.03449032615016) s1) (* (- -45.105842631720655 -45.03449032615016) t1)))))) (and (= x1 (+ 97.4028876744681 (+ (* (- 97.59525799033824 97.4028876744681) s1) (* (- 97.59612988884221 97.4028876744681) t1)))) (= y1 (+ -48.746634231585794 (+ (* (- -45.17729005238668 -48.746634231585794) s1) (* (- -45.105842631720655 -48.746634231585794) t1)))))) (and (= x1 (+ 55.551361320078556 (+ (* (- 45.61885545864058 55.551361320078556) s1) (* (- 45.644278695297395 55.551361320078556) t1)))) (= y1 (+ -83.21251403809241 (+ (* (- -83.27883092433213 -83.21251403809241) s1) (* (- -86.77873858869098 -83.21251403809241) t1)))))) (and (= x1 (+ 45.644278695297395 (+ (* (- 55.79746327487291 45.644278695297395) s1) (* (- 59.148113918045645 45.644278695297395) t1)))) (= y1 (+ -86.77873858869098 (+ (* (- -86.70498612458596 -86.77873858869098) s1) (* (- -86.55514305606268 -86.77873858869098) t1)))))) (and (= x1 (+ 59.148113918045645 (+ (* (- 62.5526955628287 59.148113918045645) s1) (* (- 65.91066628471111 59.148113918045645) t1)))) (= y1 (+ -86.55514305606268 (+ (* (- -86.12270581304219 -86.55514305606268) s1) (* (- -85.41403750125906 -86.55514305606268) t1)))))) (and (= x1 (+ 65.91066628471111 (+ (* (- 69.19965244351361 65.91066628471111) s1) (* (- 72.39774003254405 65.91066628471111) t1)))) (= y1 (+ -85.41403750125906 (+ (* (- -84.43385986819942 -85.41403750125906) s1) (* (- -83.18870368601402 -85.41403750125906) t1)))))) (and (= x1 (+ 72.39774003254405 (+ (* (- 75.48362068823855 72.39774003254405) s1) (* (- 78.43673366449633 72.39774003254405) t1)))) (= y1 (+ -83.18870368601402 (+ (* (- -81.6868652379926 -83.18870368601402) s1) (* (- -79.93835104170968 -83.18870368601402) t1)))))) (and (= x1 (+ 78.43673366449633 (+ (* (- 81.23740282575466 78.43673366449633) s1) (* (- 83.86696774604057 78.43673366449633) t1)))) (= y1 (+ -79.93835104170968 (+ (* (- -77.95481117714392 -79.93835104170968) s1) (* (- -75.74946166399491 -79.93835104170968) t1)))))) (and (= x1 (+ 83.86696774604057 (+ (* (- 86.30790804050645 83.86696774604057) s1) (* (- 88.54396010104774 83.86696774604057) t1)))) (= y1 (+ -75.74946166399491 (+ (* (- -73.33699640538543 -75.74946166399491) s1) (* (- -70.733489284655 -75.74946166399491) t1)))))) (and (= x1 (+ 88.54396010104774 (+ (* (- 90.56022545821125 88.54396010104774) s1) (* (- 92.3432700473957 88.54396010104774) t1)))) (= y1 (+ -70.733489284655 (+ (* (- -67.95628706755826 -70.733489284655) s1) (* (- -65.02389382344433 -70.733489284655) t1)))))) (and (= x1 (+ 92.3432700473957 (+ (* (- 93.88121371794884 92.3432700473957) s1) (* (- 95.16380938877586 92.3432700473957) t1)))) (= y1 (+ -65.02389382344433 (+ (* (- -61.955847635501485 -65.02389382344433) s1) (* (- -58.77259042152702 -65.02389382344433) t1)))))) (and (= x1 (+ 95.16380938877586 (+ (* (- 96.18251132305798 95.16380938877586) s1) (* (- 96.93053206717659 95.16380938877586) t1)))) (= y1 (+ -58.77259042152702 (+ (* (- -55.49533173258666 -58.77259042152702) s1) (* (- -52.14590743705272 -58.77259042152702) t1)))))) (and (= x1 (+ 96.93053206717659 (+ (* (- 97.4028876744681 96.93053206717659) s1) (* (- 97.59612988884221 96.93053206717659) t1)))) (= y1 (+ -52.14590743705272 (+ (* (- -48.746634231585794 -52.14590743705272) s1) (* (- -45.105842631720655 -52.14590743705272) t1)))))) (and (= x1 (+ 97.59612988884221 (+ (* (- 97.98893278959 97.59612988884221) s1) (* (- 94.48919337392238 97.59612988884221) t1)))) (= y1 (+ -45.105842631720655 (+ (* (- -12.91774509444662 -45.105842631720655) s1) (* (- -12.875036518932243 -45.105842631720655) t1)))))) (and (= x1 (+ 55.83700331044793 (+ (* (- 55.551361320078556 55.83700331044793) s1) (* (- 45.644278695297395 55.83700331044793) t1)))) (= y1 (+ -83.20460656873671 (+ (* (- -83.21251403809241 -83.20460656873671) s1) (* (- -86.77873858869098 -83.20460656873671) t1)))))) (and (= x1 (+ 45.644278695297395 (+ (* (- 59.148113918045645 45.644278695297395) s1) (* (- 65.91066628471111 45.644278695297395) t1)))) (= y1 (+ -86.77873858869098 (+ (* (- -86.55514305606268 -86.77873858869098) s1) (* (- -85.41403750125906 -86.77873858869098) t1)))))) (and (= x1 (+ 65.91066628471111 (+ (* (- 72.39774003254405 65.91066628471111) s1) (* (- 78.43673366449633 65.91066628471111) t1)))) (= y1 (+ -85.41403750125906 (+ (* (- -83.18870368601402 -85.41403750125906) s1) (* (- -79.93835104170968 -85.41403750125906) t1)))))) (and (= x1 (+ 78.43673366449633 (+ (* (- 83.86696774604057 78.43673366449633) s1) (* (- 88.54396010104774 78.43673366449633) t1)))) (= y1 (+ -79.93835104170968 (+ (* (- -75.74946166399491 -79.93835104170968) s1) (* (- -70.733489284655 -79.93835104170968) t1)))))) (and (= x1 (+ 88.54396010104774 (+ (* (- 92.3432700473957 88.54396010104774) s1) (* (- 95.16380938877586 88.54396010104774) t1)))) (= y1 (+ -70.733489284655 (+ (* (- -65.02389382344433 -70.733489284655) s1) (* (- -58.77259042152702 -70.733489284655) t1)))))) (and (= x1 (+ 95.16380938877586 (+ (* (- 96.93053206717659 95.16380938877586) s1) (* (- 97.59612988884221 95.16380938877586) t1)))) (= y1 (+ -58.77259042152702 (+ (* (- -52.14590743705272 -58.77259042152702) s1) (* (- -45.105842631720655 -58.77259042152702) t1)))))) (and (= x1 (+ 55.83700331044793 (+ (* (- 45.644278695297395 55.83700331044793) s1) (* (- 65.91066628471111 55.83700331044793) t1)))) (= y1 (+ -83.20460656873671 (+ (* (- -86.77873858869098 -83.20460656873671) s1) (* (- -85.41403750125906 -83.20460656873671) t1)))))) (and (= x1 (+ 65.91066628471111 (+ (* (- 78.43673366449633 65.91066628471111) s1) (* (- 88.54396010104774 65.91066628471111) t1)))) (= y1 (+ -85.41403750125906 (+ (* (- -79.93835104170968 -85.41403750125906) s1) (* (- -70.733489284655 -85.41403750125906) t1)))))) (and (= x1 (+ 88.54396010104774 (+ (* (- 95.16380938877586 88.54396010104774) s1) (* (- 97.59612988884221 88.54396010104774) t1)))) (= y1 (+ -70.733489284655 (+ (* (- -58.77259042152702 -70.733489284655) s1) (* (- -45.105842631720655 -70.733489284655) t1)))))) (and (= x1 (+ 97.59612988884221 (+ (* (- 94.48919337392238 97.59612988884221) s1) (* (- 94.10483670113464 97.59612988884221) t1)))) (= y1 (+ -45.105842631720655 (+ (* (- -12.875036518932243 -45.105842631720655) s1) (* (- -44.84898202439921 -45.105842631720655) t1)))))) (and (= x1 (+ 97.59612988884221 (+ (* (- 94.10483670113464 97.59612988884221) s1) (* (- 94.09551857467062 97.59612988884221) t1)))) (= y1 (+ -45.105842631720655 (+ (* (- -44.84898202439921 -45.105842631720655) s1) (* (- -45.13458147687228 -45.105842631720655) t1)))))) (and (= x1 (+ 97.59612988884221 (+ (* (- 94.09551857467062 97.59612988884221) s1) (* (- 93.9078073220325 97.59612988884221) t1)))) (= y1 (+ -45.105842631720655 (+ (* (- -45.13458147687228 -45.105842631720655) s1) (* (- -48.561125929834844 -45.105842631720655) t1)))))) (and (= x1 (+ 97.59612988884221 (+ (* (- 93.9078073220325 97.59612988884221) s1) (* (- 93.46222503628718 97.59612988884221) t1)))) (= y1 (+ -45.105842631720655 (+ (* (- -48.561125929834844 -45.105842631720655) s1) (* (- -51.67596452617619 -45.105842631720655) t1)))))) (and (= x1 (+ 97.59612988884221 (+ (* (- 93.46222503628718 97.59612988884221) s1) (* (- 92.76408640767613 97.59612988884221) t1)))) (= y1 (+ -45.105842631720655 (+ (* (- -51.67596452617619 -45.105842631720655) s1) (* (- -54.744085369602715 -45.105842631720655) t1)))))) (and (= x1 (+ 88.54396010104774 (+ (* (- 97.59612988884221 88.54396010104774) s1) (* (- 92.76408640767613 88.54396010104774) t1)))) (= y1 (+ -70.733489284655 (+ (* (- -45.105842631720655 -70.733489284655) s1) (* (- -54.744085369602715 -70.733489284655) t1)))))) (and (= x1 (+ 88.54396010104774 (+ (* (- 92.76408640767613 88.54396010104774) s1) (* (- 91.8180430260331 88.54396010104774) t1)))) (= y1 (+ -70.733489284655 (+ (* (- -54.744085369602715 -70.733489284655) s1) (* (- -57.745046044899425 -70.733489284655) t1)))))) (and (= x1 (+ 88.54396010104774 (+ (* (- 91.8180430260331 88.54396010104774) s1) (* (- 90.63039823226477 88.54396010104774) t1)))) (= y1 (+ -70.733489284655 (+ (* (- -57.745046044899425 -70.733489284655) s1) (* (- -60.65885161467617 -70.733489284655) t1)))))) (and (= x1 (+ 88.54396010104774 (+ (* (- 90.63039823226477 88.54396010104774) s1) (* (- 89.20906512016417 88.54396010104774) t1)))) (= y1 (+ -70.733489284655 (+ (* (- -60.65885161467617 -70.733489284655) s1) (* (- -63.46608784254764 -70.733489284655) t1)))))) (and (= x1 (+ 88.54396010104774 (+ (* (- 89.20906512016417 88.54396010104774) s1) (* (- 87.56351381268912 88.54396010104774) t1)))) (= y1 (+ -70.733489284655 (+ (* (- -63.46608784254764 -70.733489284655) s1) (* (- -66.14805054719041 -70.733489284655) t1)))))) (and (= x1 (+ 88.54396010104774 (+ (* (- 87.56351381268912 88.54396010104774) s1) (* (- 85.70470836399593 88.54396010104774) t1)))) (= y1 (+ -70.733489284655 (+ (* (- -66.14805054719041 -70.733489284655) s1) (* (- -68.68687022541405 -70.733489284655) t1)))))) (and (= x1 (+ 88.54396010104774 (+ (* (- 85.70470836399593 88.54396010104774) s1) (* (- 83.64503370764015 88.54396010104774) t1)))) (= y1 (+ -70.733489284655 (+ (* (- -68.68687022541405 -70.733489284655) s1) (* (- -71.06563111390062 -70.733489284655) t1)))))) (and (= x1 (+ 88.54396010104774 (+ (* (- 83.64503370764015 88.54396010104774) s1) (* (- 81.39821313767779 88.54396010104774) t1)))) (= y1 (+ -70.733489284655 (+ (* (- -71.06563111390062 -70.733489284655) s1) (* (- -73.26848389632194 -70.733489284655) t1)))))) (and (= x1 (+ 88.54396010104774 (+ (* (- 81.39821313767779 88.54396010104774) s1) (* (- 78.97921687247671 88.54396010104774) t1)))) (= y1 (+ -70.733489284655 (+ (* (- -73.26848389632194 -70.733489284655) s1) (* (- -75.28075130488635 -70.733489284655) t1)))))) (and (= x1 (+ 65.91066628471111 (+ (* (- 88.54396010104774 65.91066628471111) s1) (* (- 78.97921687247671 65.91066628471111) t1)))) (= y1 (+ -85.41403750125906 (+ (* (- -70.733489284655 -85.41403750125906) s1) (* (- -75.28075130488635 -85.41403750125906) t1)))))) (and (= x1 (+ 65.91066628471111 (+ (* (- 78.97921687247671 65.91066628471111) s1) (* (- 76.40416231046441 65.91066628471111) t1)))) (= y1 (+ -85.41403750125906 (+ (* (- -75.28075130488635 -85.41403750125906) s1) (* (- -77.08902591270652 -85.41403750125906) t1)))))) (and (= x1 (+ 65.91066628471111 (+ (* (- 76.40416231046441 65.91066628471111) s1) (* (- 73.69020664239213 65.91066628471111) t1)))) (= y1 (+ -85.41403750125906 (+ (* (- -77.08902591270652 -85.41403750125906) s1) (* (- -78.6812594654135 -85.41403750125906) t1)))))) (and (= x1 (+ 65.91066628471111 (+ (* (- 73.69020664239213 65.91066628471111) s1) (* (- 70.85543253562331 65.91066628471111) t1)))) (= y1 (+ -85.41403750125906 (+ (* (- -78.6812594654135 -85.41403750125906) s1) (* (- -80.04684315681448 -85.41403750125906) t1)))))) (and (= x1 (+ 65.91066628471111 (+ (* (- 70.85543253562331 65.91066628471111) s1) (* (- 67.91872765211421 65.91066628471111) t1)))) (= y1 (+ -85.41403750125906 (+ (* (- -80.04684315681448 -85.41403750125906) s1) (* (- -81.17667831372961 -85.41403750125906) t1)))))) (and (= x1 (+ 65.91066628471111 (+ (* (- 67.91872765211421 65.91066628471111) s1) (* (- 64.89965880284039 65.91066628471111) t1)))) (= y1 (+ -85.41403750125906 (+ (* (- -81.17667831372961 -85.41403750125906) s1) (* (- -82.06323701904569 -85.41403750125906) t1)))))) (and (= x1 (+ 65.91066628471111 (+ (* (- 64.89965880284039 65.91066628471111) s1) (* (- 61.81834157715749 65.91066628471111) t1)))) (= y1 (+ -85.41403750125906 (+ (* (- -82.06323701904569 -85.41403750125906) s1) (* (- -82.70061226906522 -85.41403750125906) t1)))))) (and (= x1 (+ 65.91066628471111 (+ (* (- 61.81834157715749 65.91066628471111) s1) (* (- 58.6953063157372 65.91066628471111) t1)))) (= y1 (+ -85.41403750125906 (+ (* (- -82.70061226906522 -85.41403750125906) s1) (* (- -83.08455733095926 -85.41403750125906) t1)))))) (and (= x1 (+ 55.83700331044793 (+ (* (- 65.91066628471111 55.83700331044793) s1) (* (- 58.6953063157372 55.83700331044793) t1)))) (= y1 (+ -83.20460656873671 (+ (* (- -85.41403750125906 -83.20460656873671) s1) (* (- -83.08455733095926 -83.20460656873671) t1)))))) (and (= x1 (+ 55.83700331044793 (+ (* (- 58.6953063157372 55.83700331044793) s1) (* (- 55.72580418886274 55.83700331044793) t1)))) (= y1 (+ -83.20460656873671 (+ (* (- -83.08455733095926 -83.20460656873671) s1) (* (- -83.20541431621326 -83.20460656873671) t1)))))) (and (= x1 (+ 45.61885545864058 (+ (* (- 55.551361320078556 45.61885545864058) s1) (* (- 55.72580418886274 45.61885545864058) t1)))) (= y1 (+ -83.27883092433213 (+ (* (- -83.21251403809241 -83.27883092433213) s1) (* (- -83.20541431621326 -83.27883092433213) t1)))))) (and (= x1 (+ 94.10483670113464 (+ (* (- 94.48919337392238 94.10483670113464) s1) (* (- 94.09726237167857 94.10483670113464) t1)))) (= y1 (+ -44.84898202439921 (+ (* (- -12.875036518932243 -44.84898202439921) s1) (* (- -44.9916866355402 -44.84898202439921) t1)))))) (and (= x1 (+ 93.9078073220325 (+ (* (- 94.09551857467062 93.9078073220325) s1) (* (- 94.09726237167857 93.9078073220325) t1)))) (= y1 (+ -48.561125929834844 (+ (* (- -45.13458147687228 -48.561125929834844) s1) (* (- -44.9916866355402 -48.561125929834844) t1)))))) (and (= x1 (+ 104.98975389044138 (+ (* (- 104.9884116209252 104.98975389044138) s1) (* (- 108.48815103659281 104.98975389044138) t1)))) (= y1 (+ -12.893170435270688 (+ (* (- -13.003162245477371 -12.893170435270688) s1) (* (- -13.045870820993745 -12.893170435270688) t1)))))) (and (= x1 (+ 108.48815103659281 (+ (* (- 108.48949330610898 108.48815103659281) s1) (* (- 104.98975389044138 108.48815103659281) t1)))) (= y1 (+ -13.045870820993745 (+ (* (- -12.935879010787076 -13.045870820993745) s1) (* (- -12.893170435270688 -13.045870820993745) t1)))))) (and (= x1 (+ 101.49001447477379 (+ (* (- 101.48867220525761 101.49001447477379) s1) (* (- 104.9884116209252 101.49001447477379) t1)))) (= y1 (+ -12.850461859754303 (+ (* (- -12.960453669960998 -12.850461859754303) s1) (* (- -13.003162245477371 -12.850461859754303) t1)))))) (and (= x1 (+ 104.9884116209252 (+ (* (- 104.98975389044138 104.9884116209252) s1) (* (- 101.49001447477379 104.9884116209252) t1)))) (= y1 (+ -13.003162245477371 (+ (* (- -12.893170435270688 -13.003162245477371) s1) (* (- -12.850461859754303 -13.003162245477371) t1)))))) (and (= x1 (+ 97.9902750591062 (+ (* (- 97.98893278959002 97.9902750591062) s1) (* (- 101.48867220525761 97.9902750591062) t1)))) (= y1 (+ -12.807753284237917 (+ (* (- -12.917745094444625 -12.807753284237917) s1) (* (- -12.960453669960998 -12.807753284237917) t1)))))) (and (= x1 (+ 101.48867220525761 (+ (* (- 101.49001447477379 101.48867220525761) s1) (* (- 97.9902750591062 101.48867220525761) t1)))) (= y1 (+ -12.960453669960998 (+ (* (- -12.850461859754303 -12.960453669960998) s1) (* (- -12.807753284237917 -12.960453669960998) t1)))))) (and (= x1 (+ 94.49053564343859 (+ (* (- 94.48919337392242 94.49053564343859) s1) (* (- 97.98893278959002 94.49053564343859) t1)))) (= y1 (+ -12.765044708721529 (+ (* (- -12.875036518928251 -12.765044708721529) s1) (* (- -12.917745094444625 -12.765044708721529) t1)))))) (and (= x1 (+ 97.98893278959002 (+ (* (- 97.9902750591062 97.98893278959002) s1) (* (- 94.49053564343859 97.98893278959002) t1)))) (= y1 (+ -12.917745094444625 (+ (* (- -12.807753284237917 -12.917745094444625) s1) (* (- -12.765044708721529 -12.917745094444625) t1)))))) (and (= x1 (+ 105.13547341712741 (+ (* (- 104.9897538904414 105.13547341712741) s1) (* (- 108.48949330610901 105.13547341712741) t1)))) (= y1 (+ -0.4630989481849563 (+ (* (- -12.893170435269049 -0.4630989481849563) s1) (* (- -12.935879010783799 -0.4630989481849563) t1)))))) (and (= x1 (+ 108.48949330610901 (+ (* (- 108.63538539970507 108.48949330610901) s1) (* (- 108.67784341336434 108.48949330610901) t1)))) (= y1 (+ -12.935879010783799 (+ (* (- -0.4879205961839243 -12.935879010783799) s1) (* (- 12.237917503169554 -12.935879010783799) t1)))))) (and (= x1 (+ 108.67784341336434 (+ (* (- 105.17785869077068 108.67784341336434) s1) (* (- 105.13547341712741 108.67784341336434) t1)))) (= y1 (+ 12.237917503169554 (+ (* (- 12.248258760876139 12.237917503169554) s1) (* (- -0.4630989481849563 12.237917503169554) t1)))))) (and (= x1 (+ 105.13547341712741 (+ (* (- 108.48949330610901 105.13547341712741) s1) (* (- 108.67784341336434 105.13547341712741) t1)))) (= y1 (+ -0.4630989481849563 (+ (* (- -12.935879010783799 -0.4630989481849563) s1) (* (- 12.237917503169554 -0.4630989481849563) t1)))))) (and (= x1 (+ 101.63556143454977 (+ (* (- 101.49001447477379 101.63556143454977) s1) (* (- 104.9897538904414 101.63556143454977) t1)))) (= y1 (+ -0.43827730018598826 (+ (* (- -12.850461859754297 -0.43827730018598826) s1) (* (- -12.893170435269049 -0.43827730018598826) t1)))))) (and (= x1 (+ 104.9897538904414 (+ (* (- 105.13547341712741 104.9897538904414) s1) (* (- 105.17785869077068 104.9897538904414) t1)))) (= y1 (+ -12.893170435269049 (+ (* (- -0.4630989481849563 -12.893170435269049) s1) (* (- 12.248258760876139 -12.893170435269049) t1)))))) (and (= x1 (+ 105.17785869077068 (+ (* (- 101.67787396817701 105.17785869077068) s1) (* (- 101.63556143454977 105.17785869077068) t1)))) (= y1 (+ 12.248258760876139 (+ (* (- 12.258600018582724 12.248258760876139) s1) (* (- -0.43827730018598826 12.248258760876139) t1)))))) (and (= x1 (+ 101.63556143454977 (+ (* (- 104.9897538904414 101.63556143454977) s1) (* (- 105.17785869077068 101.63556143454977) t1)))) (= y1 (+ -0.43827730018598826 (+ (* (- -12.893170435269049 -0.43827730018598826) s1) (* (- 12.248258760876139 -0.43827730018598826) t1)))))) (and (= x1 (+ 98.13564945197213 (+ (* (- 97.99027505910617 98.13564945197213) s1) (* (- 101.49001447477379 98.13564945197213) t1)))) (= y1 (+ -0.41345565218702024 (+ (* (- -12.807753284239546 -0.41345565218702024) s1) (* (- -12.850461859754297 -0.41345565218702024) t1)))))) (and (= x1 (+ 101.49001447477379 (+ (* (- 101.63556143454977 101.49001447477379) s1) (* (- 101.67787396817701 101.49001447477379) t1)))) (= y1 (+ -12.850461859754297 (+ (* (- -0.43827730018598826 -12.850461859754297) s1) (* (- 12.258600018582724 -12.850461859754297) t1)))))) (and (= x1 (+ 101.67787396817701 (+ (* (- 98.17788924558334 101.67787396817701) s1) (* (- 98.13564945197213 101.67787396817701) t1)))) (= y1 (+ 12.258600018582724 (+ (* (- 12.26894127628931 12.258600018582724) s1) (* (- -0.41345565218702024 12.258600018582724) t1)))))) (and (= x1 (+ 98.13564945197213 (+ (* (- 101.49001447477379 98.13564945197213) s1) (* (- 101.67787396817701 98.13564945197213) t1)))) (= y1 (+ -0.41345565218702024 (+ (* (- -12.850461859754297 -0.41345565218702024) s1) (* (- 12.258600018582724 -0.41345565218702024) t1)))))) (and (= x1 (+ 94.63573746939447 (+ (* (- 94.49053564343856 94.63573746939447) s1) (* (- 97.99027505910617 94.63573746939447) t1)))) (= y1 (+ -0.3886340041880522 (+ (* (- -12.765044708724796 -0.3886340041880522) s1) (* (- -12.807753284239546 -0.3886340041880522) t1)))))) (and (= x1 (+ 97.99027505910617 (+ (* (- 98.13564945197213 97.99027505910617) s1) (* (- 98.17788924558334 97.99027505910617) t1)))) (= y1 (+ -12.807753284239546 (+ (* (- -0.41345565218702024 -12.807753284239546) s1) (* (- 12.26894127628931 -12.807753284239546) t1)))))) (and (= x1 (+ 98.17788924558334 (+ (* (- 94.67790452298968 98.17788924558334) s1) (* (- 94.63573746939447 98.17788924558334) t1)))) (= y1 (+ 12.26894127628931 (+ (* (- 12.279282533995895 12.26894127628931) s1) (* (- -0.3886340041880522 12.26894127628931) t1)))))) (and (= x1 (+ 94.63573746939447 (+ (* (- 97.99027505910617 94.63573746939447) s1) (* (- 98.17788924558334 94.63573746939447) t1)))) (= y1 (+ -0.3886340041880522 (+ (* (- -12.807753284239546 -0.3886340041880522) s1) (* (- 12.26894127628931 -0.3886340041880522) t1)))))) (and (= x1 (+ 98.02746918417344 (+ (* (- 97.99027505910617 98.02746918417344) s1) (* (- 101.49001447477379 98.02746918417344) t1)))) (= y1 (+ -10.922173920685275 (+ (* (- -12.807753284239546 -10.922173920685275) s1) (* (- -12.850461859754297 -10.922173920685275) t1)))))) (and (= x1 (+ 112.09851019032018 (+ (* (- 114.1299219312768 112.09851019032018) s1) (* (- 114.14550157048227 112.09851019032018) t1)))) (= y1 (+ 0.3432541513138667 (+ (* (- 0.34492355039193306 0.3432541513138667) s1) (* (- 3.844888875197627 0.3432541513138667) t1)))))) (and (= x1 (+ 114.14550157048227 (+ (* (- 112.03447287864199 114.14550157048227) s1) (* (- 110.77868042263302 114.14550157048227) t1)))) (= y1 (+ 3.844888875197627 (+ (* (- 3.8426682769516187 3.844888875197627) s1) (* (- 3.740984475976613 3.844888875197627) t1)))))) (and (= x1 (+ 110.77868042263302 (+ (* (- 108.92527492601968 110.77868042263302) s1) (* (- 107.72476930432906 110.77868042263302) t1)))) (= y1 (+ 3.740984475976613 (+ (* (- 3.375805942151222 3.740984475976613) s1) (* (- 2.993522617588124 3.740984475976613) t1)))))) (and (= x1 (+ 107.72476930432906 (+ (* (- 106.00147351157678 107.72476930432906) s1) (* (- 104.91811402615511 107.72476930432906) t1)))) (= y1 (+ 2.993522617588124 (+ (* (- 2.2197533321252934 2.993522617588124) s1) (* (- 1.5765686671209003 2.993522617588124) t1)))))) (and (= x1 (+ 104.91811402615511 (+ (* (- 103.89768241664662 104.91811402615511) s1) (* (- 102.5033350989918 104.91811402615511) t1)))) (= y1 (+ 1.5765686671209003 (+ (* (- 0.8376007258232283 1.5765686671209003) s1) (* (- -0.4368649874041939 1.5765686671209003) t1)))))) (and (= x1 (+ 102.5033350989918 (+ (* (- 101.67690813179387 102.5033350989918) s1) (* (- 100.60880978846063 102.5033350989918) t1)))) (= y1 (+ -0.4368649874041939 (+ (* (- -1.3823890173419082 -0.4368649874041939) s1) (* (- -2.8698512649413344 -0.4368649874041939) t1)))))) (and (= x1 (+ 100.60880978846063 (+ (* (- 99.71094338646769 100.60880978846063) s1) (* (- 98.99422219936004 100.60880978846063) t1)))) (= y1 (+ -2.8698512649413344 (+ (* (- -4.465850617459069 -2.8698512649413344) s1) (* (- -6.150988222824229 -2.8698512649413344) t1)))))) (and (= x1 (+ 98.99422219936004 (+ (* (- 98.62144027515232 98.99422219936004) s1) (* (- 98.22485063565 98.99422219936004) t1)))) (= y1 (+ -6.150988222824229 (+ (* (- -7.313856977518615 -6.150988222824229) s1) (* (- -9.101619452486805 -6.150988222824229) t1)))))) (and (= x1 (+ 98.22485063565 (+ (* (- 98.02746918417344 98.22485063565) s1) (* (- 101.49001447477379 98.22485063565) t1)))) (= y1 (+ -9.101619452486805 (+ (* (- -10.922173920685275 -9.101619452486805) s1) (* (- -12.850461859754297 -9.101619452486805) t1)))))) (and (= x1 (+ 111.16044253701085 (+ (* (- 112.09851019032018 111.16044253701085) s1) (* (- 114.14550157048227 111.16044253701085) t1)))) (= y1 (+ 0.26186710399478197 (+ (* (- 0.3432541513138667 0.26186710399478197) s1) (* (- 3.844888875197627 0.26186710399478197) t1)))))) (and (= x1 (+ 114.14550157048227 (+ (* (- 110.77868042263302 114.14550157048227) s1) (* (- 107.72476930432906 114.14550157048227) t1)))) (= y1 (+ 3.844888875197627 (+ (* (- 3.740984475976613 3.844888875197627) s1) (* (- 2.993522617588124 3.844888875197627) t1)))))) (and (= x1 (+ 107.72476930432906 (+ (* (- 104.91811402615511 107.72476930432906) s1) (* (- 102.5033350989918 107.72476930432906) t1)))) (= y1 (+ 2.993522617588124 (+ (* (- 1.5765686671209003 2.993522617588124) s1) (* (- -0.4368649874041939 2.993522617588124) t1)))))) (and (= x1 (+ 102.5033350989918 (+ (* (- 100.60880978846063 102.5033350989918) s1) (* (- 98.99422219936004 102.5033350989918) t1)))) (= y1 (+ -0.4368649874041939 (+ (* (- -2.8698512649413344 -0.4368649874041939) s1) (* (- -6.150988222824229 -0.4368649874041939) t1)))))) (and (= x1 (+ 98.99422219936004 (+ (* (- 98.22485063565 98.99422219936004) s1) (* (- 101.49001447477379 98.99422219936004) t1)))) (= y1 (+ -6.150988222824229 (+ (* (- -9.101619452486805 -6.150988222824229) s1) (* (- -12.850461859754297 -6.150988222824229) t1)))))) (and (= x1 (+ 109.77688642105203 (+ (* (- 111.16044253701085 109.77688642105203) s1) (* (- 114.14550157048227 109.77688642105203) t1)))) (= y1 (+ -0.019007434387873445 (+ (* (- 0.26186710399478197 -0.019007434387873445) s1) (* (- 3.844888875197627 -0.019007434387873445) t1)))))) (and (= x1 (+ 114.14550157048227 (+ (* (- 107.72476930432906 114.14550157048227) s1) (* (- 102.5033350989918 114.14550157048227) t1)))) (= y1 (+ 3.844888875197627 (+ (* (- 2.993522617588124 3.844888875197627) s1) (* (- -0.4368649874041939 3.844888875197627) t1)))))) (and (= x1 (+ 98.99422219936004 (+ (* (- 101.49001447477379 98.99422219936004) s1) (* (- 101.60207335444123 98.99422219936004) t1)))) (= y1 (+ -6.150988222824229 (+ (* (- -12.850461859754297 -6.150988222824229) s1) (* (- -10.197402952947323 -6.150988222824229) t1)))))) (and (= x1 (+ 108.4444165749019 (+ (* (- 109.77688642105203 108.4444165749019) s1) (* (- 114.14550157048227 108.4444165749019) t1)))) (= y1 (+ -0.48552875374996907 (+ (* (- -0.019007434387873445 -0.48552875374996907) s1) (* (- 3.844888875197627 -0.48552875374996907) t1)))))) (and (= x1 (+ 114.14550157048227 (+ (* (- 102.5033350989918 114.14550157048227) s1) (* (- 98.99422219936004 114.14550157048227) t1)))) (= y1 (+ 3.844888875197627 (+ (* (- -0.4368649874041939 3.844888875197627) s1) (* (- -6.150988222824229 3.844888875197627) t1)))))) (and (= x1 (+ 98.99422219936004 (+ (* (- 101.60207335444123 98.99422219936004) s1) (* (- 101.97732544930749 98.99422219936004) t1)))) (= y1 (+ -6.150988222824229 (+ (* (- -10.197402952947323 -6.150988222824229) s1) (* (- -8.307856322531281 -6.150988222824229) t1)))))) (and (= x1 (+ 107.18781863500969 (+ (* (- 108.4444165749019 107.18781863500969) s1) (* (- 114.14550157048227 107.18781863500969) t1)))) (= y1 (+ -1.1290189632927408 (+ (* (- -0.48552875374996907 -1.1290189632927408) s1) (* (- 3.844888875197627 -1.1290189632927408) t1)))))) (and (= x1 (+ 98.99422219936004 (+ (* (- 101.97732544930749 98.99422219936004) s1) (* (- 102.43848796197088 98.99422219936004) t1)))) (= y1 (+ -6.150988222824229 (+ (* (- -8.307856322531281 -6.150988222824229) s1) (* (- -6.937992520348997 -6.150988222824229) t1)))))) (and (= x1 (+ 106.03046692372205 (+ (* (- 107.18781863500969 106.03046692372205) s1) (* (- 114.14550157048227 106.03046692372205) t1)))) (= y1 (+ -1.937508325435663 (+ (* (- -1.1290189632927408 -1.937508325435663) s1) (* (- 3.844888875197627 -1.937508325435663) t1)))))) (and (= x1 (+ 98.99422219936004 (+ (* (- 102.43848796197088 98.99422219936004) s1) (* (- 102.82856878523434 98.99422219936004) t1)))) (= y1 (+ -6.150988222824229 (+ (* (- -6.937992520348997 -6.150988222824229) s1) (* (- -6.0565774554061385 -6.150988222824229) t1)))))) (and (= x1 (+ 106.03046692372205 (+ (* (- 114.14550157048227 106.03046692372205) s1) (* (- 98.99422219936004 106.03046692372205) t1)))) (= y1 (+ -1.937508325435663 (+ (* (- 3.844888875197627 -1.937508325435663) s1) (* (- -6.150988222824229 -1.937508325435663) t1)))))) (and (= x1 (+ 98.99422219936004 (+ (* (- 102.82856878523434 98.99422219936004) s1) (* (- 103.5323801503015 98.99422219936004) t1)))) (= y1 (+ -6.150988222824229 (+ (* (- -6.0565774554061385 -6.150988222824229) s1) (* (- -4.794100817199472 -6.150988222824229) t1)))))) (and (= x1 (+ 104.99388965711286 (+ (* (- 106.03046692372205 104.99388965711286) s1) (* (- 98.99422219936004 104.99388965711286) t1)))) (= y1 (+ -2.8959579081825884 (+ (* (- -1.937508325435663 -2.8959579081825884) s1) (* (- -6.150988222824229 -2.8959579081825884) t1)))))) (and (= x1 (+ 98.99422219936004 (+ (* (- 103.5323801503015 98.99422219936004) s1) (* (- 104.07701604963982 98.99422219936004) t1)))) (= y1 (+ -6.150988222824229 (+ (* (- -4.794100817199472 -6.150988222824229) s1) (* (- -3.99884783698621 -6.150988222824229) t1)))))) (and (= x1 (+ 104.07701604963982 (+ (* (- 104.99388965711286 104.07701604963982) s1) (* (- 98.99422219936004 104.07701604963982) t1)))) (= y1 (+ -3.99884783698621 (+ (* (- -2.8959579081825884 -3.99884783698621) s1) (* (- -6.150988222824229 -3.99884783698621) t1)))))) (and (= x1 (+ 105.09756588452436 (+ (* (- 104.9897538904414 105.09756588452436) s1) (* (- 108.48949330610903 105.09756588452436) t1)))) (= y1 (+ -9.983675796716971 (+ (* (- -12.893170435268699 -9.983675796716971) s1) (* (- -12.93587901078345 -9.983675796716971) t1)))))) (and (= x1 (+ 112.3382277746068 (+ (* (- 114.11434229207133 112.3382277746068) s1) (* (- 114.1299219312768 112.3382277746068) t1)))) (= y1 (+ -3.15771071491215 (+ (* (- -3.155041774413761 -3.15771071491215) s1) (* (- 0.34492355039193306 -3.15771071491215) t1)))))) (and (= x1 (+ 114.1299219312768 (+ (* (- 111.85105615394548 114.1299219312768) s1) (* (- 110.31716276599153 114.1299219312768) t1)))) (= y1 (+ 0.34492355039193306 (+ (* (- 0.306115398043739 0.34492355039193306) s1) (* (- -0.07419416813184332 0.34492355039193306) t1)))))) (and (= x1 (+ 110.31716276599153 (+ (* (- 109.59710570149842 110.31716276599153) s1) (* (- 108.60675008062235 110.31716276599153) t1)))) (= y1 (+ -0.07419416813184332 (+ (* (- -0.4032536912761806 -0.07419416813184332) s1) (* (- -1.0568303958568728 -0.07419416813184332) t1)))))) (and (= x1 (+ 108.60675008062235 (+ (* (- 107.75402480464172 108.60675008062235) s1) (* (- 107.27669540815313 108.60675008062235) t1)))) (= y1 (+ -1.0568303958568728 (+ (* (- -1.8819524282103552 -1.0568303958568728) s1) (* (- -2.5135527711062706 -1.0568303958568728) t1)))))) (and (= x1 (+ 107.27669540815313 (+ (* (- 106.88097329898329 107.27669540815313) s1) (* (- 106.3873306074779 107.27669540815313) t1)))) (= y1 (+ -2.5135527711062706 (+ (* (- -3.1992395496083676 -2.5135527711062706) s1) (* (- -4.38284527958578 -2.5135527711062706) t1)))))) (and (= x1 (+ 106.3873306074779 (+ (* (- 105.95848535851763 106.3873306074779) s1) (* (- 105.5079174168341 106.3873306074779) t1)))) (= y1 (+ -4.38284527958578 (+ (* (- -5.641822183344919 -4.38284527958578) s1) (* (- -7.356754251809786 -4.38284527958578) t1)))))) (and (= x1 (+ 105.5079174168341 (+ (* (- 105.09756588452436 105.5079174168341) s1) (* (- 108.48949330610903 105.5079174168341) t1)))) (= y1 (+ -7.356754251809786 (+ (* (- -9.983675796716971 -7.356754251809786) s1) (* (- -12.93587901078345 -7.356754251809786) t1)))))) (and (= x1 (+ 111.47064555357898 (+ (* (- 112.3382277746068 111.47064555357898) s1) (* (- 114.1299219312768 111.47064555357898) t1)))) (= y1 (+ -3.3786574314681914 (+ (* (- -3.15771071491215 -3.3786574314681914) s1) (* (- 0.34492355039193306 -3.3786574314681914) t1)))))) (and (= x1 (+ 114.1299219312768 (+ (* (- 110.31716276599153 114.1299219312768) s1) (* (- 108.60675008062235 114.1299219312768) t1)))) (= y1 (+ 0.34492355039193306 (+ (* (- -0.07419416813184332 0.34492355039193306) s1) (* (- -1.0568303958568728 0.34492355039193306) t1)))))) (and (= x1 (+ 108.60675008062235 (+ (* (- 107.27669540815313 108.60675008062235) s1) (* (- 106.3873306074779 108.60675008062235) t1)))) (= y1 (+ -1.0568303958568728 (+ (* (- -2.5135527711062706 -1.0568303958568728) s1) (* (- -4.38284527958578 -1.0568303958568728) t1)))))) (and (= x1 (+ 106.3873306074779 (+ (* (- 105.5079174168341 106.3873306074779) s1) (* (- 108.48949330610903 106.3873306074779) t1)))) (= y1 (+ -4.38284527958578 (+ (* (- -7.356754251809786 -4.38284527958578) s1) (* (- -12.93587901078345 -4.38284527958578) t1)))))) (and (= x1 (+ 110.57930935872709 (+ (* (- 111.47064555357898 110.57930935872709) s1) (* (- 114.1299219312768 110.57930935872709) t1)))) (= y1 (+ -3.9750234214949423 (+ (* (- -3.3786574314681914 -3.9750234214949423) s1) (* (- 0.34492355039193306 -3.9750234214949423) t1)))))) (and (= x1 (+ 114.1299219312768 (+ (* (- 108.60675008062235 114.1299219312768) s1) (* (- 106.3873306074779 114.1299219312768) t1)))) (= y1 (+ 0.34492355039193306 (+ (* (- -1.0568303958568728 0.34492355039193306) s1) (* (- -4.38284527958578 0.34492355039193306) t1)))))) (and (= x1 (+ 106.3873306074779 (+ (* (- 108.48949330610903 106.3873306074779) s1) (* (- 108.54833185900023 106.3873306074779) t1)))) (= y1 (+ -4.38284527958578 (+ (* (- -12.93587901078345 -4.38284527958578) s1) (* (- -10.717717071989876 -4.38284527958578) t1)))))) (and (= x1 (+ 110.57930935872709 (+ (* (- 114.1299219312768 110.57930935872709) s1) (* (- 106.3873306074779 110.57930935872709) t1)))) (= y1 (+ -3.9750234214949423 (+ (* (- 0.34492355039193306 -3.9750234214949423) s1) (* (- -4.38284527958578 -3.9750234214949423) t1)))))) (and (= x1 (+ 106.3873306074779 (+ (* (- 108.54833185900023 106.3873306074779) s1) (* (- 108.77537022789542 106.3873306074779) t1)))) (= y1 (+ -4.38284527958578 (+ (* (- -10.717717071989876 -4.38284527958578) s1) (* (- -8.872269673786107 -4.38284527958578) t1)))))) (and (= x1 (+ 109.96502971250244 (+ (* (- 110.57930935872709 109.96502971250244) s1) (* (- 106.3873306074779 109.96502971250244) t1)))) (= y1 (+ -4.854109948833457 (+ (* (- -3.9750234214949423 -4.854109948833457) s1) (* (- -4.38284527958578 -4.854109948833457) t1)))))) (and (= x1 (+ 106.3873306074779 (+ (* (- 108.77537022789542 106.3873306074779) s1) (* (- 109.29387759623648 106.3873306074779) t1)))) (= y1 (+ -4.38284527958578 (+ (* (- -8.872269673786107 -4.38284527958578) s1) (* (- -6.702557126940577 -4.38284527958578) t1)))))) (and (= x1 (+ 109.29387759623648 (+ (* (- 109.96502971250244 109.29387759623648) s1) (* (- 106.3873306074779 109.29387759623648) t1)))) (= y1 (+ -6.702557126940577 (+ (* (- -4.854109948833457 -6.702557126940577) s1) (* (- -4.38284527958578 -6.702557126940577) t1)))))) (and (= x1 (+ 101.43597234893603 (+ (* (- 101.49001447477379 101.43597234893603) s1) (* (- 104.9897538904414 101.43597234893603) t1)))) (= y1 (+ -10.18417599528176 (+ (* (- -12.850461859754297 -10.18417599528176) s1) (* (- -12.893170435269049 -10.18417599528176) t1)))))) (and (= x1 (+ 104.9897538904414 (+ (* (- 104.99723944763284 104.9897538904414) s1) (* (- 104.90529503121816 104.9897538904414) t1)))) (= y1 (+ -12.893170435269049 (+ (* (- -10.939203359834574 -12.893170435269049) s1) (* (- -9.721790737944616 -12.893170435269049) t1)))))) (and (= x1 (+ 104.90529503121816 (+ (* (- 104.71311666374356 104.90529503121816) s1) (* (- 104.42201750930153 104.90529503121816) t1)))) (= y1 (+ -9.721790737944616 (+ (* (- -8.516131274115125 -9.721790737944616) s1) (* (- -7.330463297854697 -9.721790737944616) t1)))))) (and (= x1 (+ 104.42201750930153 (+ (* (- 104.03398666251266 104.42201750930153) s1) (* (- 103.27617022075643 104.42201750930153) t1)))) (= y1 (+ -7.330463297854697 (+ (* (- -6.172888535868456 -7.330463297854697) s1) (* (- -4.506437955905646 -7.330463297854697) t1)))))) (and (= x1 (+ 103.27617022075643 (+ (* (- 102.65881335935944 103.27617022075643) s1) (* (- 101.95657286496711 103.27617022075643) t1)))) (= y1 (+ -4.506437955905646 (+ (* (- -3.453148929411577 -4.506437955905646) s1) (* (- -2.45444699405624 -4.506437955905646) t1)))))) (and (= x1 (+ 101.95657286496711 (+ (* (- 100.75420320817366 101.95657286496711) s1) (* (- 99.38790560786593 101.95657286496711) t1)))) (= y1 (+ -2.45444699405624 (+ (* (- -1.0730685485359652 -2.45444699405624) s1) (* (- 0.14936797439231686 -2.45444699405624) t1)))))) (and (= x1 (+ 99.38790560786593 (+ (* (- 97.87962283943862 99.38790560786593) s1) (* (- 96.25297729014139 99.38790560786593) t1)))) (= y1 (+ 0.14936797439231686 (+ (* (- 1.1915787379432876 0.14936797439231686) s1) (* (- 2.0372408703267566 0.14936797439231686) t1)))))) (and (= x1 (+ 96.25297729014139 (+ (* (- 94.53344511861452 96.25297729014139) s1) (* (- 92.74795725299305 96.25297729014139) t1)))) (= y1 (+ 2.0372408703267566 (+ (* (- 2.6731098004374934 2.0372408703267566) s1) (* (- 3.0892266913641127 2.0372408703267566) t1)))))) (and (= x1 (+ 92.74795725299305 (+ (* (- 90.92447760473557 92.74795725299305) s1) (* (- 89.06543115521448 92.74795725299305) t1)))) (= y1 (+ 3.0892266913641127 (+ (* (- 3.279074413464716 3.0892266913641127) s1) (* (- 3.297670050976409 3.0892266913641127) t1)))))) (and (= x1 (+ 89.06543115521448 (+ (* (- 89.05014328607324 89.06543115521448) s1) (* (- 90.83614891456068 89.06543115521448) t1)))) (= y1 (+ 3.297670050976409 (+ (* (- -0.202296560443923 3.297670050976409) s1) (* (- -0.21981084365532721 3.297670050976409) t1)))))) (and (= x1 (+ 101.07614328174905 (+ (* (- 101.43597234893603 101.07614328174905) s1) (* (- 104.9897538904414 101.07614328174905) t1)))) (= y1 (+ -8.357656392360362 (+ (* (- -10.18417599528176 -8.357656392360362) s1) (* (- -12.893170435269049 -8.357656392360362) t1)))))) (and (= x1 (+ 104.9897538904414 (+ (* (- 104.90529503121816 104.9897538904414) s1) (* (- 104.42201750930153 104.9897538904414) t1)))) (= y1 (+ -12.893170435269049 (+ (* (- -9.721790737944616 -12.893170435269049) s1) (* (- -7.330463297854697 -12.893170435269049) t1)))))) (and (= x1 (+ 104.42201750930153 (+ (* (- 103.27617022075643 104.42201750930153) s1) (* (- 101.95657286496711 104.42201750930153) t1)))) (= y1 (+ -7.330463297854697 (+ (* (- -4.506437955905646 -7.330463297854697) s1) (* (- -2.45444699405624 -7.330463297854697) t1)))))) (and (= x1 (+ 101.95657286496711 (+ (* (- 99.38790560786593 101.95657286496711) s1) (* (- 96.25297729014139 101.95657286496711) t1)))) (= y1 (+ -2.45444699405624 (+ (* (- 0.14936797439231686 -2.45444699405624) s1) (* (- 2.0372408703267566 -2.45444699405624) t1)))))) (and (= x1 (+ 96.25297729014139 (+ (* (- 92.74795725299305 96.25297729014139) s1) (* (- 89.06543115521448 96.25297729014139) t1)))) (= y1 (+ 2.0372408703267566 (+ (* (- 3.0892266913641127 2.0372408703267566) s1) (* (- 3.297670050976409 2.0372408703267566) t1)))))) (and (= x1 (+ 89.06543115521448 (+ (* (- 90.83614891456068 89.06543115521448) s1) (* (- 92.22330327509185 89.06543115521448) t1)))) (= y1 (+ 3.297670050976409 (+ (* (- -0.21981084365532721 3.297670050976409) s1) (* (- -0.3712267765317434 3.297670050976409) t1)))))) (and (= x1 (+ 100.78438123762979 (+ (* (- 101.07614328174905 100.78438123762979) s1) (* (- 104.9897538904414 100.78438123762979) t1)))) (= y1 (+ -7.472913375081864 (+ (* (- -8.357656392360362 -7.472913375081864) s1) (* (- -12.893170435269049 -7.472913375081864) t1)))))) (and (= x1 (+ 104.9897538904414 (+ (* (- 104.42201750930153 104.9897538904414) s1) (* (- 101.95657286496711 104.9897538904414) t1)))) (= y1 (+ -12.893170435269049 (+ (* (- -7.330463297854697 -12.893170435269049) s1) (* (- -2.45444699405624 -12.893170435269049) t1)))))) (and (= x1 (+ 101.95657286496711 (+ (* (- 96.25297729014139 101.95657286496711) s1) (* (- 89.06543115521448 101.95657286496711) t1)))) (= y1 (+ -2.45444699405624 (+ (* (- 2.0372408703267566 -2.45444699405624) s1) (* (- 3.297670050976409 -2.45444699405624) t1)))))) (and (= x1 (+ 89.06543115521448 (+ (* (- 92.22330327509185 89.06543115521448) s1) (* (- 93.5806828662006 89.06543115521448) t1)))) (= y1 (+ 3.297670050976409 (+ (* (- -0.3712267765317434 3.297670050976409) s1) (* (- -0.6947150302767103 3.297670050976409) t1)))))) (and (= x1 (+ 100.21235463617471 (+ (* (- 100.78438123762979 100.21235463617471) s1) (* (- 104.9897538904414 100.21235463617471) t1)))) (= y1 (+ -6.198488210382214 (+ (* (- -7.472913375081864 -6.198488210382214) s1) (* (- -12.893170435269049 -6.198488210382214) t1)))))) (and (= x1 (+ 101.95657286496711 (+ (* (- 89.06543115521448 101.95657286496711) s1) (* (- 93.5806828662006 101.95657286496711) t1)))) (= y1 (+ -2.45444699405624 (+ (* (- 3.297670050976409 -2.45444699405624) s1) (* (- -0.6947150302767103 -2.45444699405624) t1)))))) (and (= x1 (+ 99.2130995877716 (+ (* (- 100.21235463617471 99.2130995877716) s1) (* (- 104.9897538904414 99.2130995877716) t1)))) (= y1 (+ -4.627774943840651 (+ (* (- -6.198488210382214 -4.627774943840651) s1) (* (- -12.893170435269049 -4.627774943840651) t1)))))) (and (= x1 (+ 101.95657286496711 (+ (* (- 93.5806828662006 101.95657286496711) s1) (* (- 94.88702871243689 101.95657286496711) t1)))) (= y1 (+ -2.45444699405624 (+ (* (- -0.6947150302767103 -2.45444699405624) s1) (* (- -1.1852092042387237 -2.45444699405624) t1)))))) (and (= x1 (+ 99.2130995877716 (+ (* (- 104.9897538904414 99.2130995877716) s1) (* (- 101.95657286496711 99.2130995877716) t1)))) (= y1 (+ -4.627774943840651 (+ (* (- -12.893170435269049 -4.627774943840651) s1) (* (- -2.45444699405624 -4.627774943840651) t1)))))) (and (= x1 (+ 101.95657286496711 (+ (* (- 94.88702871243689 101.95657286496711) s1) (* (- 96.12188111744442 101.95657286496711) t1)))) (= y1 (+ -2.45444699405624 (+ (* (- -1.1852092042387237 -2.45444699405624) s1) (* (- -1.8350272884104637 -2.45444699405624) t1)))))) (and (= x1 (+ 98.30116828822132 (+ (* (- 99.2130995877716 98.30116828822132) s1) (* (- 101.95657286496711 98.30116828822132) t1)))) (= y1 (+ -3.5695900648650944 (+ (* (- -4.627774943840651 -3.5695900648650944) s1) (* (- -2.45444699405624 -3.5695900648650944) t1)))))) (and (= x1 (+ 101.95657286496711 (+ (* (- 96.12188111744442 101.95657286496711) s1) (* (- 97.26590009914712 101.95657286496711) t1)))) (= y1 (+ -2.45444699405624 (+ (* (- -1.8350272884104637 -2.45444699405624) s1) (* (- -2.6339919773507203 -2.45444699405624) t1)))))) (and (= x1 (+ 97.26590009914712 (+ (* (- 98.30116828822132 97.26590009914712) s1) (* (- 101.95657286496711 97.26590009914712) t1)))) (= y1 (+ -2.6339919773507203 (+ (* (- -3.5695900648650944 -2.6339919773507203) s1) (* (- -2.45444699405624 -2.6339919773507203) t1)))))) (and (= x1 (+ 94.48534847179553 (+ (* (- 94.49053564343855 94.48534847179553) s1) (* (- 97.99027505910617 94.48534847179553) t1)))) (= y1 (+ -11.202890379219154 (+ (* (- -12.765044708725144 -11.202890379219154) s1) (* (- -12.807753284239896 -11.202890379219154) t1)))))) (and (= x1 (+ 97.99027505910617 (+ (* (- 97.98522879131576 97.99027505910617) s1) (* (- 97.79280860007505 97.99027505910617) t1)))) (= y1 (+ -12.807753284239896 (+ (* (- -11.07911450806662 -12.807753284239896) s1) (* (- -9.792495140677582 -12.807753284239896) t1)))))) (and (= x1 (+ 97.79280860007505 (+ (* (- 97.39704954449051 97.79280860007505) s1) (* (- 96.80814452217733 97.79280860007505) t1)))) (= y1 (+ -9.792495140677582 (+ (* (- -8.553225316764921 -9.792495140677582) s1) (* (- -7.3932228162365865 -9.792495140677582) t1)))))) (and (= x1 (+ 96.80814452217733 (+ (* (- 96.04126096522026 96.80814452217733) s1) (* (- 95.36321567651396 96.80814452217733) t1)))) (= y1 (+ -7.3932228162365865 (+ (* (- -6.342363864423102 -7.3932228162365865) s1) (* (- -5.64692561652307 -7.3932228162365865) t1)))))) (and (= x1 (+ 95.36321567651396 (+ (* (- 94.60360187086741 95.36321567651396) s1) (* (- 93.48278971385733 95.36321567651396) t1)))) (= y1 (+ -5.64692561652307 (+ (* (- -5.045549254550145 -5.64692561652307) s1) (* (- -4.4046687618899085 -5.64692561652307) t1)))))) (and (= x1 (+ 93.48278971385733 (+ (* (- 92.57922642872484 93.48278971385733) s1) (* (- 91.6382480350505 93.48278971385733) t1)))) (= y1 (+ -4.4046687618899085 (+ (* (- -4.055040313062836 -4.4046687618899085) s1) (* (- -3.824332001321212 -4.4046687618899085) t1)))))) (and (= x1 (+ 91.6382480350505 (+ (* (- 90.67543469846866 91.6382480350505) s1) (* (- 89.034855416932 91.6382480350505) t1)))) (= y1 (+ -3.824332001321212 (+ (* (- -3.716363758912506 -3.824332001321212) s1) (* (- -3.702263171864255 -3.824332001321212) t1)))))) (and (= x1 (+ 89.034855416932 (+ (* (- 89.01956754779103 89.034855416932) s1) (* (- 90.58504418328275 89.034855416932) t1)))) (= y1 (+ -3.702263171864255 (+ (* (- -7.202229783284588 -3.702263171864255) s1) (* (- -7.215196357760931 -3.702263171864255) t1)))))) (and (= x1 (+ 94.30776853340008 (+ (* (- 94.48534847179553 94.30776853340008) s1) (* (- 97.99027505910617 94.30776853340008) t1)))) (= y1 (+ -10.296389986917577 (+ (* (- -11.202890379219154 -10.296389986917577) s1) (* (- -12.807753284239896 -10.296389986917577) t1)))))) (and (= x1 (+ 97.99027505910617 (+ (* (- 97.79280860007505 97.99027505910617) s1) (* (- 96.80814452217733 97.99027505910617) t1)))) (= y1 (+ -12.807753284239896 (+ (* (- -9.792495140677582 -12.807753284239896) s1) (* (- -7.3932228162365865 -12.807753284239896) t1)))))) (and (= x1 (+ 96.80814452217733 (+ (* (- 95.36321567651396 96.80814452217733) s1) (* (- 93.48278971385733 96.80814452217733) t1)))) (= y1 (+ -7.3932228162365865 (+ (* (- -5.64692561652307 -7.3932228162365865) s1) (* (- -4.4046687618899085 -7.3932228162365865) t1)))))) (and (= x1 (+ 93.48278971385733 (+ (* (- 91.6382480350505 93.48278971385733) s1) (* (- 89.034855416932 93.48278971385733) t1)))) (= y1 (+ -4.4046687618899085 (+ (* (- -3.824332001321212 -4.4046687618899085) s1) (* (- -3.702263171864255 -4.4046687618899085) t1)))))) (and (= x1 (+ 89.034855416932 (+ (* (- 90.58504418328275 89.034855416932) s1) (* (- 91.43552271659922 89.034855416932) t1)))) (= y1 (+ -3.702263171864255 (+ (* (- -7.215196357760931 -3.702263171864255) s1) (* (- -7.364013895952624 -3.702263171864255) t1)))))) (and (= x1 (+ 93.86183129839569 (+ (* (- 94.30776853340008 93.86183129839569) s1) (* (- 97.99027505910617 93.86183129839569) t1)))) (= y1 (+ -9.282465624180936 (+ (* (- -10.296389986917577 -9.282465624180936) s1) (* (- -12.807753284239896 -9.282465624180936) t1)))))) (and (= x1 (+ 97.99027505910617 (+ (* (- 96.80814452217733 97.99027505910617) s1) (* (- 93.48278971385733 97.99027505910617) t1)))) (= y1 (+ -12.807753284239896 (+ (* (- -7.3932228162365865 -12.807753284239896) s1) (* (- -4.4046687618899085 -12.807753284239896) t1)))))) (and (= x1 (+ 93.48278971385733 (+ (* (- 89.034855416932 93.48278971385733) s1) (* (- 91.43552271659922 93.48278971385733) t1)))) (= y1 (+ -4.4046687618899085 (+ (* (- -3.702263171864255 -4.4046687618899085) s1) (* (- -7.364013895952624 -4.4046687618899085) t1)))))) (and (= x1 (+ 93.19867507761492 (+ (* (- 93.86183129839569 93.19867507761492) s1) (* (- 97.99027505910617 93.19867507761492) t1)))) (= y1 (+ -8.416255586679725 (+ (* (- -9.282465624180936 -8.416255586679725) s1) (* (- -12.807753284239896 -8.416255586679725) t1)))))) (and (= x1 (+ 93.48278971385733 (+ (* (- 91.43552271659922 93.48278971385733) s1) (* (- 92.38522152070426 93.48278971385733) t1)))) (= y1 (+ -4.4046687618899085 (+ (* (- -7.364013895952624 -4.4046687618899085) s1) (* (- -7.775987425454858 -4.4046687618899085) t1)))))) (and (= x1 (+ 93.19867507761492 (+ (* (- 97.99027505910617 93.19867507761492) s1) (* (- 93.48278971385733 93.19867507761492) t1)))) (= y1 (+ -8.416255586679725 (+ (* (- -12.807753284239896 -8.416255586679725) s1) (* (- -4.4046687618899085 -8.416255586679725) t1)))))) (and (= x1 (+ 93.48278971385733 (+ (* (- 92.38522152070426 93.48278971385733) s1) (* (- 93.19867507761492 93.48278971385733) t1)))) (= y1 (+ -4.4046687618899085 (+ (* (- -7.775987425454858 -4.4046687618899085) s1) (* (- -8.416255586679725 -4.4046687618899085) t1)))))))
(assert (and (= 103.42607059136343 x1) (= -55.33521489578369 y1)))
(check-sat)
(exit)
(declare-fun opdist1 () Real)
(declare-fun opdist2 () Real)
(declare-fun range1 () Real)
(assert (and (<= -10.0 range1) (<= range1 10.0)))
(assert (= opdist2 (* range1 0.01745329252)))
(assert (= opdist1 (+ opdist2 -0.21210613608586693)))
(assert (= -0.353150119338974 opdist1))
(check-sat)
(exit)
(declare-fun x1 () Real)
(declare-fun y1 () Real)
(declare-fun opdist1 () Real)
(declare-fun range1 () Real)
(assert (and (<= 3.0 range1) (<= range1 5.0)))
(assert (= opdist1 (+ range1 2.25)))
(declare-fun x2 () Real)
(declare-fun y2 () Real)
(assert (= x2 (- (* (cos Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) 0) (* (sin Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) opdist1))))
(assert (= y2 (+ (* (sin Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) 0) (* (cos Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) opdist1))))
(declare-fun x3 () Real)
(declare-fun y3 () Real)
(assert (= x3 (+ x2 103.42607059136343)))
(assert (= y3 (+ y2 -55.33521489578369)))
(assert (and (= 105.51044366346459 x3) (= -49.68041546068383 y3)))
(check-sat)
(exit)
(declare-fun opdist1 () Real)
(declare-fun opdist2 () Real)
(declare-fun range1 () Real)
(assert (and (<= -10.0 range1) (<= range1 10.0)))
(assert (= opdist2 (* range1 0.01745329252)))
(assert (= opdist1 (+ opdist2 -0.21210613608586693)))
(assert (= -0.353150119338974 opdist1))
(check-sat)
(exit)
(declare-fun x1 () Real)
(declare-fun y1 () Real)
(declare-fun opdist1 () Real)
(declare-fun x2 () Real)
(declare-fun y2 () Real)
(assert (<= (+ (* (- x2 103.42607059136343) (- x2 103.42607059136343)) (* (- y2 -55.33521489578369) (- y2 -55.33521489578369))) (* 50 50)))
(declare-fun x3 () Real)
(declare-fun y3 () Real)
(assert (= x3 (- (* (cos -3.4947427729287672) 0) (* (sin -3.4947427729287672) 50))))
(assert (= y3 (+ (* (sin -3.4947427729287672) 0) (* (cos -3.4947427729287672) 50))))
(declare-fun x4 () Real)
(declare-fun y4 () Real)
(assert (= x4 (+ x3 103.42607059136343)))
(assert (= y4 (+ y3 -55.33521489578369)))
(declare-fun x5 () Real)
(declare-fun y5 () Real)
(assert (= x5 (- (* (cos 2.788442534250819) 0) (* (sin 2.788442534250819) 50))))
(assert (= y5 (+ (* (sin 2.788442534250819) 0) (* (cos 2.788442534250819) 50))))
(declare-fun x6 () Real)
(declare-fun y6 () Real)
(assert (= x6 (+ x5 103.42607059136343)))
(assert (= y6 (+ y5 -55.33521489578369)))
(assert (<= (- (* (- x6 103.42607059136343) (- y2 -55.33521489578369)) (* (- y6 -55.33521489578369) (- x2 103.42607059136343))) 0))
(assert (<= 0 (- (* (- x4 103.42607059136343) (- y2 -55.33521489578369)) (* (- y4 -55.33521489578369) (- x2 103.42607059136343)))))
(declare-fun s1 () Real)
(declare-fun t1 () Real)
(assert (and (<= 0 s1) (<= s1 1)))
(assert (and (<= 0 t1) (<= t1 1)))
(assert (<= (+ s1 t1) 1))
(assert (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (and (= x2 (+ 42.8435986534356 (+ (* (- 42.57141851962325 42.8435986534356) s1) (* (- 65.17118644512314 42.8435986534356) t1)))) (= y2 (+ -139.74819961538017 (+ (* (- -146.7427909985157 -139.74819961538017) s1) (* (- -147.58207693745788 -139.74819961538017) t1))))) (and (= x2 (+ 65.17118644512314 (+ (* (- 72.02478374457434 65.17118644512314) s1) (* (- 75.44851580370022 65.17118644512314) t1)))) (= y2 (+ -147.58207693745788 (+ (* (- -147.52335879997247 -147.58207693745788) s1) (* (- -147.37130315527472 -147.58207693745788) t1)))))) (and (= x2 (+ 75.44851580370022 (+ (* (- 82.28006169957821 75.44851580370022) s1) (* (- 89.077756555284 75.44851580370022) t1)))) (= y2 (+ -147.37130315527472 (+ (* (- -146.8222210367682 -147.37130315527472) s1) (* (- -145.94763793259725 -147.37130315527472) t1)))))) (and (= x2 (+ 89.077756555284 (+ (* (- 95.82595115483932 89.077756555284) s1) (* (- 102.5092585300856 89.077756555284) t1)))) (= y2 (+ -145.94763793259725 (+ (* (- -144.7495475337073 -145.94763793259725) s1) (* (- -143.2306816787476 -145.94763793259725) t1)))))) (and (= x2 (+ 102.5092585300856 (+ (* (- 109.11358167422877 102.5092585300856) s1) (* (- 115.62156238304782 102.5092585300856) t1)))) (= y2 (+ -143.2306816787476 (+ (* (- -141.39415647793913 -143.2306816787476) s1) (* (- -139.24479888762494 -143.2306816787476) t1)))))) (and (= x2 (+ 115.62156238304782 (+ (* (- 122.01938420221379 115.62156238304782) s1) (* (- 125.17164820728841 115.62156238304782) t1)))) (= y2 (+ -139.24479888762494 (+ (* (- -136.78728256610296 -139.24479888762494) s1) (* (- -135.4450245372584 -139.24479888762494) t1)))))) (and (= x2 (+ 125.17164820728841 (+ (* (- 128.02635565153892 125.17164820728841) s1) (* (- 130.8514852197482 125.17164820728841) t1)))) (= y2 (+ -135.4450245372584 (+ (* (- -134.08630604368307 -135.4450245372584) s1) (* (- -132.52786880778658 -135.4450245372584) t1)))))) (and (= x2 (+ 130.8514852197482 (+ (* (- 133.5765543045964 130.8514852197482) s1) (* (- 136.19265596892797 130.8514852197482) t1)))) (= y2 (+ -132.52786880778658 (+ (* (- -130.8003955891638 -132.52786880778658) s1) (* (- -128.90936558774348 -132.52786880778658) t1)))))) (and (= x2 (+ 136.19265596892797 (+ (* (- 138.68762811478857 136.19265596892797) s1) (* (- 141.05239895450936 136.19265596892797) t1)))) (= y2 (+ -128.90936558774348 (+ (* (- -126.86357008729908 -128.90936558774348) s1) (* (- -124.67080662759791 -128.90936558774348) t1)))))) (and (= x2 (+ 141.05239895450936 (+ (* (- 143.28145067409804 141.05239895450936) s1) (* (- 145.36327375812613 141.05239895450936) t1)))) (= y2 (+ -124.67080662759791 (+ (* (- -122.33600239259346 -124.67080662759791) s1) (* (- -119.87101194939427 -124.67080662759791) t1)))))) (and (= x2 (+ 145.36327375812613 (+ (* (- 147.29036385053843 145.36327375812613) s1) (* (- 149.05739579681267 145.36327375812613) t1)))) (= y2 (+ -119.87101194939427 (+ (* (- -117.28515106946942 -119.87101194939427) s1) (* (- -114.58556529770705 -119.87101194939427) t1)))))) (and (= x2 (+ 149.05739579681267 (+ (* (- 150.65758771081929 149.05739579681267) s1) (* (- 152.08350039741165 149.05739579681267) t1)))) (= y2 (+ -114.58556529770705 (+ (* (- -111.78210881993918 -114.58556529770705) s1) (* (- -108.88781473528374 -114.58556529770705) t1)))))) (and (= x2 (+ 152.08350039741165 (+ (* (- 153.33064282436118 152.08350039741165) s1) (* (- 154.3939346221375 152.08350039741165) t1)))) (= y2 (+ -108.88781473528374 (+ (* (- -105.91211296844675 -108.88781473528374) s1) (* (- -102.86748437576362 -108.88781473528374) t1)))))) (and (= x2 (+ 154.3939346221375 (+ (* (- 155.27043758191041 154.3939346221375) s1) (* (- 155.95663573615266 154.3939346221375) t1)))) (= y2 (+ -102.86748437576362 (+ (* (- -99.76234222124549 -102.86748437576362) s1) (* (- -96.60812053000296 -102.86748437576362) t1)))))) (and (= x2 (+ 155.95663573615266 (+ (* (- 156.44933899126738 155.95663573615266) s1) (* (- 156.7470894903308 155.95663573615266) t1)))) (= y2 (+ -96.60812053000296 (+ (* (- -93.41948308735498 -96.60812053000296) s1) (* (- -90.20676553406958 -96.60812053000296) t1)))))) (and (= x2 (+ 156.7470894903308 (+ (* (- 156.85033042706362 156.7470894903308) s1) (* (- 156.7818158475119 156.7470894903308) t1)))) (= y2 (+ -90.20676553406958 (+ (* (- -86.87571448256242 -90.20676553406958) s1) (* (- -12.27096979840646 -90.20676553406958) t1)))))) (and (= x2 (+ 156.7818158475119 (+ (* (- 149.78193374680546 156.7818158475119) s1) (* (- 149.85028822804486 156.7818158475119) t1)))) (= y2 (+ -12.27096979840646 (+ (* (- -12.27739287048163 -12.27096979840646) s1) (* (- -86.83293746213597 -12.27096979840646) t1)))))) (and (= x2 (+ 65.35955702696896 (+ (* (- 42.8435986534356 65.35955702696896) s1) (* (- 65.17118644512314 65.35955702696896) t1)))) (= y2 (+ -140.58460898316395 (+ (* (- -139.74819961538017 -140.58460898316395) s1) (* (- -147.58207693745788 -140.58460898316395) t1)))))) (and (= x2 (+ 65.17118644512314 (+ (* (- 75.44851580370022 65.17118644512314) s1) (* (- 89.077756555284 65.17118644512314) t1)))) (= y2 (+ -147.58207693745788 (+ (* (- -147.37130315527472 -147.58207693745788) s1) (* (- -145.94763793259725 -147.58207693745788) t1)))))) (and (= x2 (+ 89.077756555284 (+ (* (- 102.5092585300856 89.077756555284) s1) (* (- 115.62156238304782 89.077756555284) t1)))) (= y2 (+ -145.94763793259725 (+ (* (- -143.2306816787476 -145.94763793259725) s1) (* (- -139.24479888762494 -145.94763793259725) t1)))))) (and (= x2 (+ 115.62156238304782 (+ (* (- 125.17164820728841 115.62156238304782) s1) (* (- 130.8514852197482 115.62156238304782) t1)))) (= y2 (+ -139.24479888762494 (+ (* (- -135.4450245372584 -139.24479888762494) s1) (* (- -132.52786880778658 -139.24479888762494) t1)))))) (and (= x2 (+ 130.8514852197482 (+ (* (- 136.19265596892797 130.8514852197482) s1) (* (- 141.05239895450936 130.8514852197482) t1)))) (= y2 (+ -132.52786880778658 (+ (* (- -128.90936558774348 -132.52786880778658) s1) (* (- -124.67080662759791 -132.52786880778658) t1)))))) (and (= x2 (+ 141.05239895450936 (+ (* (- 145.36327375812613 141.05239895450936) s1) (* (- 149.05739579681267 141.05239895450936) t1)))) (= y2 (+ -124.67080662759791 (+ (* (- -119.87101194939427 -124.67080662759791) s1) (* (- -114.58556529770705 -124.67080662759791) t1)))))) (and (= x2 (+ 149.05739579681267 (+ (* (- 152.08350039741165 149.05739579681267) s1) (* (- 154.3939346221375 149.05739579681267) t1)))) (= y2 (+ -114.58556529770705 (+ (* (- -108.88781473528374 -114.58556529770705) s1) (* (- -102.86748437576362 -114.58556529770705) t1)))))) (and (= x2 (+ 154.3939346221375 (+ (* (- 155.95663573615266 154.3939346221375) s1) (* (- 156.7470894903308 154.3939346221375) t1)))) (= y2 (+ -102.86748437576362 (+ (* (- -96.60812053000296 -102.86748437576362) s1) (* (- -90.20676553406958 -102.86748437576362) t1)))))) (and (= x2 (+ 156.7470894903308 (+ (* (- 156.7818158475119 156.7470894903308) s1) (* (- 149.85028822804486 156.7470894903308) t1)))) (= y2 (+ -90.20676553406958 (+ (* (- -12.27096979840646 -90.20676553406958) s1) (* (- -86.83293746213597 -90.20676553406958) t1)))))) (and (= x2 (+ 68.61948621160549 (+ (* (- 65.35955702696896 68.61948621160549) s1) (* (- 65.17118644512314 68.61948621160549) t1)))) (= y2 (+ -140.59367058355988 (+ (* (- -140.58460898316395 -140.59367058355988) s1) (* (- -147.58207693745788 -140.59367058355988) t1)))))) (and (= x2 (+ 65.17118644512314 (+ (* (- 89.077756555284 65.17118644512314) s1) (* (- 115.62156238304782 65.17118644512314) t1)))) (= y2 (+ -147.58207693745788 (+ (* (- -145.94763793259725 -147.58207693745788) s1) (* (- -139.24479888762494 -147.58207693745788) t1)))))) (and (= x2 (+ 115.62156238304782 (+ (* (- 130.8514852197482 115.62156238304782) s1) (* (- 141.05239895450936 115.62156238304782) t1)))) (= y2 (+ -139.24479888762494 (+ (* (- -132.52786880778658 -139.24479888762494) s1) (* (- -124.67080662759791 -139.24479888762494) t1)))))) (and (= x2 (+ 141.05239895450936 (+ (* (- 149.05739579681267 141.05239895450936) s1) (* (- 154.3939346221375 141.05239895450936) t1)))) (= y2 (+ -124.67080662759791 (+ (* (- -114.58556529770705 -124.67080662759791) s1) (* (- -102.86748437576362 -124.67080662759791) t1)))))) (and (= x2 (+ 154.3939346221375 (+ (* (- 156.7470894903308 154.3939346221375) s1) (* (- 149.85028822804486 154.3939346221375) t1)))) (= y2 (+ -102.86748437576362 (+ (* (- -90.20676553406958 -102.86748437576362) s1) (* (- -86.83293746213597 -102.86748437576362) t1)))))) (and (= x2 (+ 75.13512145712346 (+ (* (- 68.61948621160549 75.13512145712346) s1) (* (- 65.17118644512314 75.13512145712346) t1)))) (= y2 (+ -140.37830829005125 (+ (* (- -140.59367058355988 -140.37830829005125) s1) (* (- -147.58207693745788 -140.37830829005125) t1)))))) (and (= x2 (+ 65.17118644512314 (+ (* (- 115.62156238304782 65.17118644512314) s1) (* (- 141.05239895450936 65.17118644512314) t1)))) (= y2 (+ -147.58207693745788 (+ (* (- -139.24479888762494 -147.58207693745788) s1) (* (- -124.67080662759791 -147.58207693745788) t1)))))) (and (= x2 (+ 154.3939346221375 (+ (* (- 149.85028822804486 154.3939346221375) s1) (* (- 149.77552676193375 154.3939346221375) t1)))) (= y2 (+ -102.86748437576362 (+ (* (- -86.83293746213597 -102.86748437576362) s1) (* (- -89.57697962713793 -102.86748437576362) t1)))))) (and (= x2 (+ 81.6333463729313 (+ (* (- 75.13512145712346 81.6333463729313) s1) (* (- 65.17118644512314 81.6333463729313) t1)))) (= y2 (+ -139.8521527515435 (+ (* (- -140.37830829005125 -139.8521527515435) s1) (* (- -147.58207693745788 -139.8521527515435) t1)))))) (and (= x2 (+ 154.3939346221375 (+ (* (- 149.77552676193375 154.3939346221375) s1) (* (- 149.52938141299464 154.3939346221375) t1)))) (= y2 (+ -102.86748437576362 (+ (* (- -89.57697962713793 -102.86748437576362) s1) (* (- -92.36359144350808 -102.86748437576362) t1)))))) (and (= x2 (+ 88.09904548416489 (+ (* (- 81.6333463729313 88.09904548416489) s1) (* (- 65.17118644512314 88.09904548416489) t1)))) (= y2 (+ -139.01638860410793 (+ (* (- -139.8521527515435 -139.01638860410793) s1) (* (- -147.58207693745788 -139.01638860410793) t1)))))) (and (= x2 (+ 154.3939346221375 (+ (* (- 149.52938141299464 154.3939346221375) s1) (* (- 149.11375741169118 154.3939346221375) t1)))) (= y2 (+ -102.86748437576362 (+ (* (- -92.36359144350808 -102.86748437576362) s1) (* (- -95.1330828066697 -102.86748437576362) t1)))))) (and (= x2 (+ 94.51981582670484 (+ (* (- 88.09904548416489 94.51981582670484) s1) (* (- 65.17118644512314 94.51981582670484) t1)))) (= y2 (+ -137.8724467452585 (+ (* (- -139.01638860410793 -137.8724467452585) s1) (* (- -147.58207693745788 -137.8724467452585) t1)))))) (and (= x2 (+ 154.3939346221375 (+ (* (- 149.11375741169118 154.3939346221375) s1) (* (- 148.52964615135764 154.3939346221375) t1)))) (= y2 (+ -102.86748437576362 (+ (* (- -95.1330828066697 -102.86748437576362) s1) (* (- -97.87510597000981 -102.86748437576362) t1)))))) (and (= x2 (+ 100.87603244673164 (+ (* (- 94.51981582670484 100.87603244673164) s1) (* (- 65.17118644512314 100.87603244673164) t1)))) (= y2 (+ -136.42386335124814 (+ (* (- -137.8724467452585 -136.42386335124814) s1) (* (- -147.58207693745788 -136.42386335124814) t1)))))) (and (= x2 (+ 154.3939346221375 (+ (* (- 148.52964615135764 154.3939346221375) s1) (* (- 147.78048054550408 154.3939346221375) t1)))) (= y2 (+ -102.86748437576362 (+ (* (- -97.87510597000981 -102.86748437576362) s1) (* (- -100.57354563323959 -102.86748437576362) t1)))))) (and (= x2 (+ 104.02653072765051 (+ (* (- 100.87603244673164 104.02653072765051) s1) (* (- 65.17118644512314 104.02653072765051) t1)))) (= y2 (+ -135.58611775271197 (+ (* (- -136.42386335124814 -135.58611775271197) s1) (* (- -147.58207693745788 -135.58611775271197) t1)))))) (and (= x2 (+ 141.05239895450936 (+ (* (- 154.3939346221375 141.05239895450936) s1) (* (- 147.78048054550408 141.05239895450936) t1)))) (= y2 (+ -124.67080662759791 (+ (* (- -102.86748437576362 -124.67080662759791) s1) (* (- -100.57354563323959 -124.67080662759791) t1)))))) (and (= x2 (+ 110.26106482021231 (+ (* (- 104.02653072765051 110.26106482021231) s1) (* (- 65.17118644512314 110.26106482021231) t1)))) (= y2 (+ -133.68687399998373 (+ (* (- -135.58611775271197 -133.68687399998373) s1) (* (- -147.58207693745788 -133.68687399998373) t1)))))) (and (= x2 (+ 141.05239895450936 (+ (* (- 147.78048054550408 141.05239895450936) s1) (* (- 146.86849412855105 141.05239895450936) t1)))) (= y2 (+ -124.67080662759791 (+ (* (- -100.57354563323959 -124.67080662759791) s1) (* (- -103.22139504292652 -124.67080662759791) t1)))))) (and (= x2 (+ 110.26106482021231 (+ (* (- 65.17118644512314 110.26106482021231) s1) (* (- 141.05239895450936 110.26106482021231) t1)))) (= y2 (+ -133.68687399998373 (+ (* (- -147.58207693745788 -133.68687399998373) s1) (* (- -124.67080662759791 -133.68687399998373) t1)))))) (and (= x2 (+ 141.05239895450936 (+ (* (- 146.86849412855105 141.05239895450936) s1) (* (- 145.79831684091 141.05239895450936) t1)))) (= y2 (+ -124.67080662759791 (+ (* (- -103.22139504292652 -124.67080662759791) s1) (* (- -105.80606398129311 -124.67080662759791) t1)))))) (and (= x2 (+ 116.40009271714536 (+ (* (- 110.26106482021231 116.40009271714536) s1) (* (- 141.05239895450936 116.40009271714536) t1)))) (= y2 (+ -131.4914248972111 (+ (* (- -133.68687399998373 -131.4914248972111) s1) (* (- -124.67080662759791 -131.4914248972111) t1)))))) (and (= x2 (+ 141.05239895450936 (+ (* (- 145.79831684091 141.05239895450936) s1) (* (- 144.57017120833993 141.05239895450936) t1)))) (= y2 (+ -124.67080662759791 (+ (* (- -105.80606398129311 -124.67080662759791) s1) (* (- -108.32628922875409 -124.67080662759791) t1)))))) (and (= x2 (+ 119.42978913263138 (+ (* (- 116.40009271714536 119.42978913263138) s1) (* (- 141.05239895450936 119.42978913263138) t1)))) (= y2 (+ -130.28389485907022 (+ (* (- -131.4914248972111 -130.28389485907022) s1) (* (- -124.67080662759791 -130.28389485907022) t1)))))) (and (= x2 (+ 141.05239895450936 (+ (* (- 144.57017120833993 141.05239895450936) s1) (* (- 143.1923536021385 141.05239895450936) t1)))) (= y2 (+ -124.67080662759791 (+ (* (- -108.32628922875409 -124.67080662759791) s1) (* (- -110.76441235220962 -124.67080662759791) t1)))))) (and (= x2 (+ 122.35816305121612 (+ (* (- 119.42978913263138 122.35816305121612) s1) (* (- 141.05239895450936 122.35816305121612) t1)))) (= y2 (+ -129.03490459578512 (+ (* (- -130.28389485907022 -129.03490459578512) s1) (* (- -124.67080662759791 -129.03490459578512) t1)))))) (and (= x2 (+ 141.05239895450936 (+ (* (- 143.1923536021385 141.05239895450936) s1) (* (- 141.67045445393845 141.05239895450936) t1)))) (= y2 (+ -124.67080662759791 (+ (* (- -110.76441235220962 -124.67080662759791) s1) (* (- -113.11166946012253 -124.67080662759791) t1)))))) (and (= x2 (+ 125.01094638348705 (+ (* (- 122.35816305121612 125.01094638348705) s1) (* (- 141.05239895450936 125.01094638348705) t1)))) (= y2 (+ -127.76908377268792 (+ (* (- -129.03490459578512 -127.76908377268792) s1) (* (- -124.67080662759791 -127.76908377268792) t1)))))) (and (= x2 (+ 141.05239895450936 (+ (* (- 141.67045445393845 141.05239895450936) s1) (* (- 140.00680419221587 141.05239895450936) t1)))) (= y2 (+ -124.67080662759791 (+ (* (- -113.11166946012253 -124.67080662759791) s1) (* (- -115.36446628357466 -124.67080662759791) t1)))))) (and (= x2 (+ 127.45730381133421 (+ (* (- 125.01094638348705 127.45730381133421) s1) (* (- 141.05239895450936 127.45730381133421) t1)))) (= y2 (+ -126.40582157299914 (+ (* (- -127.76908377268792 -126.40582157299914) s1) (* (- -124.67080662759791 -126.40582157299914) t1)))))) (and (= x2 (+ 141.05239895450936 (+ (* (- 140.00680419221587 141.05239895450936) s1) (* (- 138.20914680263377 141.05239895450936) t1)))) (= y2 (+ -124.67080662759791 (+ (* (- -115.36446628357466 -124.67080662759791) s1) (* (- -117.51184925611769 -124.67080662759791) t1)))))) (and (= x2 (+ 129.81862866969612 (+ (* (- 127.45730381133421 129.81862866969612) s1) (* (- 141.05239895450936 129.81862866969612) t1)))) (= y2 (+ -124.89452348657738 (+ (* (- -126.40582157299914 -124.89452348657738) s1) (* (- -124.67080662759791 -124.89452348657738) t1)))))) (and (= x2 (+ 141.05239895450936 (+ (* (- 138.20914680263377 141.05239895450936) s1) (* (- 136.28198659648257 141.05239895450936) t1)))) (= y2 (+ -124.67080662759791 (+ (* (- -117.51184925611769 -124.67080662759791) s1) (* (- -119.54800507838897 -124.67080662759791) t1)))))) (and (= x2 (+ 132.08109691460646 (+ (* (- 129.81862866969612 132.08109691460646) s1) (* (- 141.05239895450936 132.08109691460646) t1)))) (= y2 (+ -123.24404986913892 (+ (* (- -124.89452348657738 -123.24404986913892) s1) (* (- -124.67080662759791 -123.24404986913892) t1)))))) (and (= x2 (+ 141.05239895450936 (+ (* (- 136.28198659648257 141.05239895450936) s1) (* (- 134.2366497966191 141.05239895450936) t1)))) (= y2 (+ -124.67080662759791 (+ (* (- -119.54800507838897 -124.67080662759791) s1) (* (- -121.46096694319698 -124.67080662759791) t1)))))) (and (= x2 (+ 134.2366497966191 (+ (* (- 132.08109691460646 134.2366497966191) s1) (* (- 141.05239895450936 134.2366497966191) t1)))) (= y2 (+ -121.46096694319698 (+ (* (- -123.24404986913892 -121.46096694319698) s1) (* (- -124.67080662759791 -121.46096694319698) t1)))))))
(declare-fun s2 () Real)
(declare-fun t2 () Real)
(assert (and (<= 0 s2) (<= s2 1)))
(assert (and (<= 0 t2) (<= t2 1)))
(assert (<= (+ s2 t2) 1))
(assert (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (or (and (= x2 (+ 55.72496880531045 (+ (* (- 45.61891335081776 55.72496880531045) s2) (* (- 45.72060546245586 55.72496880531045) t2)))) (= y2 (+ -83.20542038441728 (+ (* (- -83.27888798152016 -83.20542038441728) s2) (* (- -97.27840368959036 -83.20542038441728) t2))))) (and (= x2 (+ 45.72060546245586 (+ (* (- 55.938138152085436 45.72060546245586) s2) (* (- 60.50549718068678 45.72060546245586) t2)))) (= y2 (+ -97.27840368959036 (+ (* (- -97.20424128023201 -97.27840368959036) s2) (* (- -96.96695424427426 -97.27840368959036) t2)))))) (and (= x2 (+ 60.50549718068678 (+ (* (- 64.75474607799765 60.50549718068678) s2) (* (- 68.94269187723597 60.50549718068678) t2)))) (= y2 (+ -96.96695424427426 (+ (* (- -96.38912400576702 -96.96695424427426) s2) (* (- -95.46665854184056 -96.96695424427426) t2)))))) (and (= x2 (+ 68.94269187723597 (+ (* (- 73.04145119525991 68.94269187723597) s2) (* (- 77.0255763679904 68.94269187723597) t2)))) (= y2 (+ -95.46665854184056 (+ (* (- -94.20570469557711 -95.46665854184056) s2) (* (- -92.61383049292928 -95.46665854184056) t2)))))) (and (= x2 (+ 77.0255763679904 (+ (* (- 80.86473653494524 77.0255763679904) s2) (* (- 84.53357401742471 77.0255763679904) t2)))) (= y2 (+ -92.61383049292928 (+ (* (- -90.70315475854552 -92.61383049292928) s2) (* (- -88.48685422590349 -92.61383049292928) t2)))))) (and (= x2 (+ 84.53357401742471 (+ (* (- 88.01113293332729 84.53357401742471) s2) (* (- 91.27395120697244 84.53357401742471) t2)))) (= y2 (+ -88.48685422590349 (+ (* (- -85.97758809097068 -88.48685422590349) s2) (* (- -83.19167104586478 -88.48685422590349) t2)))))) (and (= x2 (+ 91.27395120697244 (+ (* (- 94.29718923579993 91.27395120697244) s2) (* (- 97.0610571155087 91.27395120697244) t2)))) (= y2 (+ -83.19167104586478 (+ (* (- -80.15031207814272 -83.19167104586478) s2) (* (- -76.87412666407481 -83.19167104586478) t2)))))) (and (= x2 (+ 97.0610571155087 (+ (* (- 99.54976802269475 97.0610571155087) s2) (* (- 101.74536222850283 97.0610571155087) t2)))) (= y2 (+ -76.87412666407481 (+ (* (- -73.38182791254384 -76.87412666407481) s2) (* (- -69.69818859348521 -76.87412666407481) t2)))))) (and (= x2 (+ 101.74536222850283 (+ (* (- 103.63321082791595 101.74536222850283) s2) (* (- 105.20140284331868 101.74536222850283) t2)))) (= y2 (+ -69.69818859348521 (+ (* (- -65.8477522266317 -69.69818859348521) s2) (* (- -61.85424616405077 -69.69818859348521) t2)))))) (and (= x2 (+ 105.20140284331868 (+ (* (- 106.4379997408628 105.20140284331868) s2) (* (- 107.33523948818554 105.20140284331868) t2)))) (= y2 (+ -61.85424616405077 (+ (* (- -57.74807268227036 -61.85424616405077) s2) (* (- -53.55673430895046 -61.85424616405077) t2)))))) (and (= x2 (+ 107.33523948818554 (+ (* (- 107.88800359434953 107.33523948818554) s2) (* (- 108.09448224228102 107.33523948818554) t2)))) (= y2 (+ -53.55673430895046 (+ (* (- -49.30412201011979 -53.55673430895046) s2) (* (- -45.30492370620955 -53.55673430895046) t2)))))) (and (= x2 (+ 108.09448224228102 (+ (* (- 108.48809286332272 108.09448224228102) s2) (* (- 94.4892501444916 108.09448224228102) t2)))) (= y2 (+ -45.30492370620955 (+ (* (- -13.045927591558973 -45.30492370620955) s2) (* (- -12.875094692202369 -45.30492370620955) t2)))))) (and (= x2 (+ 58.697333412318336 (+ (* (- 55.72496880531045 58.697333412318336) s2) (* (- 45.72060546245586 58.697333412318336) t2)))) (= y2 (+ -83.0843081202853 (+ (* (- -83.20542038441728 -83.0843081202853) s2) (* (- -97.27840368959036 -83.0843081202853) t2)))))) (and (= x2 (+ 45.72060546245586 (+ (* (- 60.50549718068678 45.72060546245586) s2) (* (- 68.94269187723597 45.72060546245586) t2)))) (= y2 (+ -97.27840368959036 (+ (* (- -96.96695424427426 -97.27840368959036) s2) (* (- -95.46665854184056 -97.27840368959036) t2)))))) (and (= x2 (+ 68.94269187723597 (+ (* (- 77.0255763679904 68.94269187723597) s2) (* (- 84.53357401742471 68.94269187723597) t2)))) (= y2 (+ -95.46665854184056 (+ (* (- -92.61383049292928 -95.46665854184056) s2) (* (- -88.48685422590349 -95.46665854184056) t2)))))) (and (= x2 (+ 84.53357401742471 (+ (* (- 91.27395120697244 84.53357401742471) s2) (* (- 97.0610571155087 84.53357401742471) t2)))) (= y2 (+ -88.48685422590349 (+ (* (- -83.19167104586478 -88.48685422590349) s2) (* (- -76.87412666407481 -88.48685422590349) t2)))))) (and (= x2 (+ 97.0610571155087 (+ (* (- 101.74536222850283 97.0610571155087) s2) (* (- 105.20140284331868 97.0610571155087) t2)))) (= y2 (+ -76.87412666407481 (+ (* (- -69.69818859348521 -76.87412666407481) s2) (* (- -61.85424616405077 -76.87412666407481) t2)))))) (and (= x2 (+ 105.20140284331868 (+ (* (- 107.33523948818554 105.20140284331868) s2) (* (- 108.09448224228102 105.20140284331868) t2)))) (= y2 (+ -61.85424616405077 (+ (* (- -53.55673430895046 -61.85424616405077) s2) (* (- -45.30492370620955 -61.85424616405077) t2)))))) (and (= x2 (+ 108.09448224228102 (+ (* (- 94.4892501444916 108.09448224228102) s2) (* (- 94.09727482737148 108.09448224228102) t2)))) (= y2 (+ -45.30492370620955 (+ (* (- -12.875094692202369 -45.30492370620955) s2) (* (- -44.990665958102106 -45.30492370620955) t2)))))) (and (= x2 (+ 61.820341595437874 (+ (* (- 58.697333412318336 61.820341595437874) s2) (* (- 45.72060546245586 61.820341595437874) t2)))) (= y2 (+ -82.70019856218009 (+ (* (- -83.0843081202853 -82.70019856218009) s2) (* (- -97.27840368959036 -82.70019856218009) t2)))))) (and (= x2 (+ 45.72060546245586 (+ (* (- 68.94269187723597 45.72060546245586) s2) (* (- 84.53357401742471 45.72060546245586) t2)))) (= y2 (+ -97.27840368959036 (+ (* (- -95.46665854184056 -97.27840368959036) s2) (* (- -88.48685422590349 -97.27840368959036) t2)))))) (and (= x2 (+ 84.53357401742471 (+ (* (- 97.0610571155087 84.53357401742471) s2) (* (- 105.20140284331868 84.53357401742471) t2)))) (= y2 (+ -88.48685422590349 (+ (* (- -76.87412666407481 -88.48685422590349) s2) (* (- -61.85424616405077 -88.48685422590349) t2)))))) (and (= x2 (+ 105.20140284331868 (+ (* (- 108.09448224228102 105.20140284331868) s2) (* (- 94.09727482737148 105.20140284331868) t2)))) (= y2 (+ -61.85424616405077 (+ (* (- -45.30492370620955 -61.85424616405077) s2) (* (- -44.990665958102106 -61.85424616405077) t2)))))) (and (= x2 (+ 64.89765878455987 (+ (* (- 61.820341595437874 64.89765878455987) s2) (* (- 45.72060546245586 64.89765878455987) t2)))) (= y2 (+ -82.06365072593084 (+ (* (- -82.70019856218009 -82.06365072593084) s2) (* (- -97.27840368959036 -82.06365072593084) t2)))))) (and (= x2 (+ 45.72060546245586 (+ (* (- 84.53357401742471 45.72060546245586) s2) (* (- 105.20140284331868 45.72060546245586) t2)))) (= y2 (+ -97.27840368959036 (+ (* (- -88.48685422590349 -97.27840368959036) s2) (* (- -61.85424616405077 -97.27840368959036) t2)))))) (and (= x2 (+ 105.20140284331868 (+ (* (- 94.09727482737148 105.20140284331868) s2) (* (- 93.90792541025512 105.20140284331868) t2)))) (= y2 (+ -61.85424616405077 (+ (* (- -44.990665958102106 -61.85424616405077) s2) (* (- -48.55890108155135 -61.85424616405077) t2)))))) (and (= x2 (+ 67.91676803794718 (+ (* (- 64.89765878455987 67.91676803794718) s2) (* (- 45.72060546245586 67.91676803794718) t2)))) (= y2 (+ -81.17725376036087 (+ (* (- -82.06365072593084 -81.17725376036087) s2) (* (- -97.27840368959036 -81.17725376036087) t2)))))) (and (= x2 (+ 105.20140284331868 (+ (* (- 93.90792541025512 105.20140284331868) s2) (* (- 93.46177188916947 105.20140284331868) t2)))) (= y2 (+ -61.85424616405077 (+ (* (- -48.55890108155135 -61.85424616405077) s2) (* (- -51.677955978962196 -61.85424616405077) t2)))))) (and (= x2 (+ 70.8572725279445 (+ (* (- 67.91676803794718 70.8572725279445) s2) (* (- 45.72060546245586 70.8572725279445) t2)))) (= y2 (+ -80.04595678512788 (+ (* (- -81.17725376036087 -80.04595678512788) s2) (* (- -97.27840368959036 -80.04595678512788) t2)))))) (and (= x2 (+ 105.20140284331868 (+ (* (- 93.46177188916947 105.20140284331868) s2) (* (- 92.76347235079109 105.20140284331868) t2)))) (= y2 (+ -61.85424616405077 (+ (* (- -51.677955978962196 -61.85424616405077) s2) (* (- -54.74603323013443 -61.85424616405077) t2)))))) (and (= x2 (+ 73.68836665007099 (+ (* (- 70.8572725279445 73.68836665007099) s2) (* (- 45.72060546245586 73.68836665007099) t2)))) (= y2 (+ -78.68214583710007 (+ (* (- -80.04595678512788 -78.68214583710007) s2) (* (- -97.27840368959036 -78.68214583710007) t2)))))) (and (= x2 (+ 105.20140284331868 (+ (* (- 92.76347235079109 105.20140284331868) s2) (* (- 91.81865708291812 105.20140284331868) t2)))) (= y2 (+ -61.85424616405077 (+ (* (- -54.74603323013443 -61.85424616405077) s2) (* (- -57.74309818436773 -61.85424616405077) t2)))))) (and (= x2 (+ 76.40240073885361 (+ (* (- 73.68836665007099 76.40240073885361) s2) (* (- 45.72060546245586 76.40240073885361) t2)))) (= y2 (+ -77.09005939805678 (+ (* (- -78.68214583710007 -77.09005939805678) s2) (* (- -97.27840368959036 -77.09005939805678) t2)))))) (and (= x2 (+ 105.20140284331868 (+ (* (- 91.81865708291812 105.20140284331868) s2) (* (- 90.63116910755102 105.20140284331868) t2)))) (= y2 (+ -61.85424616405077 (+ (* (- -57.74309818436773 -61.85424616405077) s2) (* (- -60.65696032469244 -61.85424616405077) t2)))))) (and (= x2 (+ 76.40240073885361 (+ (* (- 45.72060546245586 76.40240073885361) s2) (* (- 105.20140284331868 76.40240073885361) t2)))) (= y2 (+ -77.09005939805678 (+ (* (- -97.27840368959036 -77.09005939805678) s2) (* (- -61.85424616405077 -77.09005939805678) t2)))))) (and (= x2 (+ 105.20140284331868 (+ (* (- 90.63116910755102 105.20140284331868) s2) (* (- 89.20998767762862 105.20140284331868) t2)))) (= y2 (+ -61.85424616405077 (+ (* (- -60.65696032469244 -61.85424616405077) s2) (* (- -63.46426572448506 -61.85424616405077) t2)))))) (and (= x2 (+ 78.97754545865584 (+ (* (- 76.40240073885361 78.97754545865584) s2) (* (- 105.20140284331868 78.97754545865584) t2)))) (= y2 (+ -75.28192501794705 (+ (* (- -77.09005939805678 -75.28192501794705) s2) (* (- -61.85424616405077 -75.28192501794705) t2)))))) (and (= x2 (+ 105.20140284331868 (+ (* (- 89.20998767762862 105.20140284331868) s2) (* (- 87.56230730112118 105.20140284331868) t2)))) (= y2 (+ -61.85424616405077 (+ (* (- -63.46426572448506 -61.85424616405077) s2) (* (- -66.14969844170936 -61.85424616405077) t2)))))) (and (= x2 (+ 81.39664301801905 (+ (* (- 78.97754545865584 81.39664301801905) s2) (* (- 105.20140284331868 81.39664301801905) t2)))) (= y2 (+ -73.26979001682417 (+ (* (- -75.28192501794705 -73.26979001682417) s2) (* (- -61.85424616405077 -73.26979001682417) t2)))))) (and (= x2 (+ 105.20140284331868 (+ (* (- 87.56230730112118 105.20140284331868) s2) (* (- 85.70337147244507 105.20140284331868) t2)))) (= y2 (+ -61.85424616405077 (+ (* (- -66.14969844170936 -61.85424616405077) s2) (* (- -68.68841422913499 -61.85424616405077) t2)))))) (and (= x2 (+ 83.64637059919103 (+ (* (- 81.39664301801905 83.64637059919103) s2) (* (- 105.20140284331868 83.64637059919103) t2)))) (= y2 (+ -71.06408711017967 (+ (* (- -73.26979001682417 -71.06408711017967) s2) (* (- -61.85424616405077 -71.06408711017967) t2)))))) (and (= x2 (+ 105.20140284331868 (+ (* (- 85.70337147244507 105.20140284331868) s2) (* (- 83.64637059919103 105.20140284331868) t2)))) (= y2 (+ -61.85424616405077 (+ (* (- -68.68841422913499 -61.85424616405077) s2) (* (- -71.06408711017967 -61.85424616405077) t2)))))))
(declare-fun s3 () Real)
(declare-fun t3 () Real)
(assert (and (<= 0 s3) (<= s3 1)))
(assert (and (<= 0 t3) (<= t3 1)))
(assert (<= (+ s3 t3) 1))
(assert (or (and (= x2 (+ 94.49176298315855 (+ (* (- 94.48925154719255 94.49176298315855) s3) (* (- 108.48692369687285 94.49176298315855) t3)))) (= y2 (+ -12.765059686388403 (+ (* (- -12.87497974835903 -12.765059686388403) s3) (* (- -13.045855843326871 -12.765059686388403) t3))))) (and (= x2 (+ 108.48692369687285 (+ (* (- 108.4894783284421 108.48692369687285) s3) (* (- 94.49176298315855 108.48692369687285) t3)))) (= y2 (+ -13.045855843326871 (+ (* (- -12.937106350507015 -13.045855843326871) s3) (* (- -12.765059686388403 -13.045855843326871) t3)))))))
(declare-fun x7 () Real)
(declare-fun y7 () Real)
(declare-fun x8 () Real)
(declare-fun y8 () Real)
(assert (= x8 (- (* (cos Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) 0) (* (sin Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) 0))))
(assert (= y8 (+ (* (sin Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) 0) (* (cos Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) 0))))
(declare-fun x9 () Real)
(declare-fun y9 () Real)
(assert (= x9 (+ x8 103.42607059136343)))
(assert (= y9 (+ y8 -55.33521489578369)))
(assert (<= (+ (* (- x2 x9) (- x2 x9)) (* (- y2 y9) (- y2 y9))) (* 50 50)))
(declare-fun opdist2 () Real)
(declare-fun opdist3 () Real)
(declare-fun opdist4 () Real)
(declare-fun range1 () Real)
(assert (and (<= -10.0 range1) (<= range1 10.0)))
(assert (= opdist4 (* range1 0.01745329252)))
(assert (= opdist3 (+ opdist4 -0.21210613608586693)))
(assert (= opdist2 (- opdist3 0.7853981634)))
(declare-fun x10 () Real)
(declare-fun y10 () Real)
(assert (= x10 (- (* (cos opdist2) 0) (* (sin opdist2) 50))))
(assert (= y10 (+ (* (sin opdist2) 0) (* (cos opdist2) 50))))
(declare-fun x11 () Real)
(declare-fun y11 () Real)
(assert (= x11 (+ x10 x9)))
(assert (= y11 (+ y10 y9)))
(declare-fun opdist5 () Real)
(assert (= opdist5 (+ opdist3 0.7853981634)))
(declare-fun x12 () Real)
(declare-fun y12 () Real)
(assert (= x12 (- (* (cos opdist5) 0) (* (sin opdist5) 50))))
(assert (= y12 (+ (* (sin opdist5) 0) (* (cos opdist5) 50))))
(declare-fun x13 () Real)
(declare-fun y13 () Real)
(assert (= x13 (+ x12 x9)))
(assert (= y13 (+ y12 y9)))
(assert (<= (- (* (- x13 x9) (- y2 y9)) (* (- y13 y9) (- x2 x9))) 0))
(assert (<= 0 (- (* (- x11 x9) (- y2 y9)) (* (- y11 y9) (- x2 x9)))))
(assert (and (= x2 x1) (= y2 y1)))
(assert (and (= 104.08125424613664 x1) (= -47.22454983051734 y1)))
(check-sat)
(exit)
(declare-fun opdist1 () Real)
(declare-fun opdist2 () Real)
(declare-fun x1 () Real)
(declare-fun y1 () Real)
(declare-fun opdist3 () Real)
(declare-fun range1 () Real)
(assert (and (<= 3.0 range1) (<= range1 5.0)))
(assert (= opdist3 (+ range1 2.25)))
(declare-fun x2 () Real)
(declare-fun y2 () Real)
(assert (= x2 (- (* (cos Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) 0) (* (sin Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) opdist3))))
(assert (= y2 (+ (* (sin Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) 0) (* (cos Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) opdist3))))
(declare-fun x3 () Real)
(declare-fun y3 () Real)
(assert (= x3 (+ x2 103.42607059136343)))
(assert (= y3 (+ y2 -55.33521489578369)))
(declare-fun angle1 () Real)
(assert (= angle1 (ite (< 0 (- (arctan (div (assert (- -47.22454983051734 y3)) (assert (- 104.08125424613664 x3)))) (div 3.1416 2))) (mod (- (arctan (div (assert (- -47.22454983051734 y3)) (assert (- 104.08125424613664 x3)))) (div 3.1416 2)) 6.2832) (- (arctan (div (assert (- -47.22454983051734 y3)) (assert (- 104.08125424613664 x3)))) (div 3.1416 2)))))
(assert (= angle1 (ite (< (- (arctan (div (assert (- -47.22454983051734 y3)) (assert (- 104.08125424613664 x3)))) (div 3.1416 2)) 0) (mod (- (arctan (div (assert (- -47.22454983051734 y3)) (assert (- 104.08125424613664 x3)))) (div 3.1416 2)) -6.2832) (- (arctan (div (assert (- -47.22454983051734 y3)) (assert (- 104.08125424613664 x3)))) (div 3.1416 2)))))
(declare-fun theta1 () Real)
(assert (= theta1 angle1))
(assert (= theta1 (ite (<= 3.1416 angle1) (- angle1 6.2832) angle1)))
(assert (= theta1 (ite (<= angle1 -3.1416) (+ angle1 6.2832) angle1)))
(declare-fun opdist4 () Real)
(declare-fun range2 () Real)
(assert (and (<= -10.0 range2) (<= range2 10.0)))
(assert (= opdist4 (* range2 0.01745329252)))
(assert (= opdist1 (+ theta1 opdist4)))
(assert (= 6.035821238496393 opdist1))
(check-sat)
(exit)
(declare-fun x1 () Real)
(declare-fun y1 () Real)
(declare-fun opdist1 () Real)
(declare-fun range1 () Real)
(assert (and (<= 4.0 range1) (<= range1 10.0)))
(assert (= opdist1 (- -2.25 range1)))
(declare-fun x2 () Real)
(declare-fun y2 () Real)
(assert (= x2 (- (* (cos Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) 0) (* (sin Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) opdist1))))
(assert (= y2 (+ (* (sin Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) 0) (* (cos Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) opdist1))))
(declare-fun x3 () Real)
(declare-fun y3 () Real)
(assert (= x3 (+ x2 103.42607059136343)))
(assert (= y3 (+ y2 -55.33521489578369)))
(assert (and (= 101.08924838302674 x3) (= -61.67489615558352 y3)))
(check-sat)
(exit)
(declare-fun opdist1 () Real)
(declare-fun opdist2 () Real)
(declare-fun range1 () Real)
(assert (and (<= -10.0 range1) (<= range1 10.0)))
(assert (= opdist2 (* range1 0.01745329252)))
(assert (= opdist1 (+ opdist2 -0.21210613608586693)))
(assert (= -0.353150119338974 opdist1))
(check-sat)
(exit)
(declare-fun x1 () Real)
(declare-fun y1 () Real)
(declare-fun opdist1 () Real)
(declare-fun range1 () Real)
(assert (and (<= 4.0 range1) (<= range1 6.0)))
(assert (= opdist1 (- -1.0 range1)))
(declare-fun x2 () Real)
(declare-fun y2 () Real)
(assert (= x2 (- (* (cos Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) opdist1) (* (sin Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) 0))))
(assert (= y2 (+ (* (sin Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) opdist1) (* (cos Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) 0))))
(declare-fun x3 () Real)
(declare-fun y3 () Real)
(assert (= x3 (+ x2 103.42607059136343)))
(assert (= y3 (+ y2 -55.33521489578369)))
(assert (and (= 98.37023793715753 x3) (= -53.47162246206011 y3)))
(check-sat)
(exit)
(declare-fun opdist1 () Real)
(declare-fun x1 () Real)
(declare-fun y1 () Real)
(declare-fun opdist2 () Real)
(declare-fun range1 () Real)
(assert (and (<= 4.0 range1) (<= range1 6.0)))
(assert (= opdist2 (- -1.0 range1)))
(declare-fun x2 () Real)
(declare-fun y2 () Real)
(assert (= x2 (- (* (cos Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) opdist2) (* (sin Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) 0))))
(assert (= y2 (+ (* (sin Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) opdist2) (* (cos Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) 0))))
(declare-fun x3 () Real)
(declare-fun y3 () Real)
(assert (= x3 (+ x2 103.42607059136343)))
(assert (= y3 (+ y2 -55.33521489578369)))
(declare-fun opdist3 () Real)
(declare-fun range2 () Real)
(assert (and (<= 3.0 range2) (<= range2 5.0)))
(assert (= opdist3 (+ range2 2.25)))
(declare-fun x4 () Real)
(declare-fun y4 () Real)
(assert (= x4 (- (* (cos Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) 0) (* (sin Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) opdist3))))
(assert (= y4 (+ (* (sin Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) 0) (* (cos Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) opdist3))))
(declare-fun x5 () Real)
(declare-fun y5 () Real)
(assert (= x5 (+ x4 103.42607059136343)))
(assert (= y5 (+ y4 -55.33521489578369)))
(declare-fun angle1 () Real)
(assert (= angle1 (ite (< 0 (- (arctan (div (assert (- y5 y3)) (assert (- x5 x3)))) (div 3.1416 2))) (mod (- (arctan (div (assert (- y5 y3)) (assert (- x5 x3)))) (div 3.1416 2)) 6.2832) (- (arctan (div (assert (- y5 y3)) (assert (- x5 x3)))) (div 3.1416 2)))))
(assert (= angle1 (ite (< (- (arctan (div (assert (- y5 y3)) (assert (- x5 x3)))) (div 3.1416 2)) 0) (mod (- (arctan (div (assert (- y5 y3)) (assert (- x5 x3)))) (div 3.1416 2)) -6.2832) (- (arctan (div (assert (- y5 y3)) (assert (- x5 x3)))) (div 3.1416 2)))))
(declare-fun theta1 () Real)
(assert (= theta1 angle1))
(assert (= theta1 (ite (<= 3.1416 angle1) (- angle1 6.2832) angle1)))
(assert (= theta1 (ite (<= angle1 -3.1416) (+ angle1 6.2832) angle1)))
(assert (= -1.0826838338659077 theta1))
(check-sat)
(exit)
(declare-fun x1 () Real)
(declare-fun y1 () Real)
(declare-fun opdist1 () Real)
(declare-fun range1 () Real)
(assert (and (<= 4.0 range1) (<= range1 6.0)))
(assert (= opdist1 (- -1.0 range1)))
(declare-fun x2 () Real)
(declare-fun y2 () Real)
(assert (= x2 (- (* (cos Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) opdist1) (* (sin Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) 0))))
(assert (= y2 (+ (* (sin Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) opdist1) (* (cos Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) 0))))
(declare-fun x3 () Real)
(declare-fun y3 () Real)
(assert (= x3 (+ x2 103.42607059136343)))
(assert (= y3 (+ y2 -55.33521489578369)))
(declare-fun opdist2 () Real)
(declare-fun opdist3 () Real)
(declare-fun range2 () Real)
(assert (and (<= 3.0 range2) (<= range2 5.0)))
(assert (= opdist3 (+ range2 2.25)))
(declare-fun x4 () Real)
(declare-fun y4 () Real)
(assert (= x4 (- (* (cos Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) 0) (* (sin Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) opdist3))))
(assert (= y4 (+ (* (sin Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) 0) (* (cos Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) opdist3))))
(declare-fun x5 () Real)
(declare-fun y5 () Real)
(assert (= x5 (+ x4 103.42607059136343)))
(assert (= y5 (+ y4 -55.33521489578369)))
(declare-fun angle1 () Real)
(assert (= angle1 (ite (< 0 (- (arctan (div (assert (- y5 y3)) (assert (- x5 x3)))) (div 3.1416 2))) (mod (- (arctan (div (assert (- y5 y3)) (assert (- x5 x3)))) (div 3.1416 2)) 6.2832) (- (arctan (div (assert (- y5 y3)) (assert (- x5 x3)))) (div 3.1416 2)))))
(assert (= angle1 (ite (< (- (arctan (div (assert (- y5 y3)) (assert (- x5 x3)))) (div 3.1416 2)) 0) (mod (- (arctan (div (assert (- y5 y3)) (assert (- x5 x3)))) (div 3.1416 2)) -6.2832) (- (arctan (div (assert (- y5 y3)) (assert (- x5 x3)))) (div 3.1416 2)))))
(declare-fun theta1 () Real)
(assert (= theta1 angle1))
(assert (= theta1 (ite (<= 3.1416 angle1) (- angle1 6.2832) angle1)))
(assert (= theta1 (ite (<= angle1 -3.1416) (+ angle1 6.2832) angle1)))
(declare-fun opdist4 () Real)
(declare-fun range3 () Real)
(assert (and (<= 2.0 range3) (<= range3 3.0)))
(assert (= opdist4 (+ range3 0.25)))
(declare-fun x6 () Real)
(declare-fun y6 () Real)
(assert (= x6 (- (* (cos theta1) opdist4) (* (sin theta1) 0))))
(assert (= y6 (+ (* (sin theta1) opdist4) (* (cos theta1) 0))))
(declare-fun x7 () Real)
(declare-fun y7 () Real)
(assert (= x7 (+ x6 x3)))
(assert (= y7 (+ y6 y3)))
(assert (and (= 99.51717003646368 x7) (= -55.63170792829245 y7)))
(check-sat)
(exit)
(declare-fun opdist1 () Real)
(declare-fun x1 () Real)
(declare-fun y1 () Real)
(declare-fun opdist2 () Real)
(declare-fun range1 () Real)
(assert (and (<= 4.0 range1) (<= range1 6.0)))
(assert (= opdist2 (- -1.0 range1)))
(declare-fun x2 () Real)
(declare-fun y2 () Real)
(assert (= x2 (- (* (cos Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) opdist2) (* (sin Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) 0))))
(assert (= y2 (+ (* (sin Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) opdist2) (* (cos Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) 0))))
(declare-fun x3 () Real)
(declare-fun y3 () Real)
(assert (= x3 (+ x2 103.42607059136343)))
(assert (= y3 (+ y2 -55.33521489578369)))
(declare-fun opdist3 () Real)
(declare-fun range2 () Real)
(assert (and (<= 3.0 range2) (<= range2 5.0)))
(assert (= opdist3 (+ range2 2.25)))
(declare-fun x4 () Real)
(declare-fun y4 () Real)
(assert (= x4 (- (* (cos Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) 0) (* (sin Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) opdist3))))
(assert (= y4 (+ (* (sin Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) 0) (* (cos Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) opdist3))))
(declare-fun x5 () Real)
(declare-fun y5 () Real)
(assert (= x5 (+ x4 103.42607059136343)))
(assert (= y5 (+ y4 -55.33521489578369)))
(declare-fun angle1 () Real)
(assert (= angle1 (ite (< 0 (- (arctan (div (assert (- y5 y3)) (assert (- x5 x3)))) (div 3.1416 2))) (mod (- (arctan (div (assert (- y5 y3)) (assert (- x5 x3)))) (div 3.1416 2)) 6.2832) (- (arctan (div (assert (- y5 y3)) (assert (- x5 x3)))) (div 3.1416 2)))))
(assert (= angle1 (ite (< (- (arctan (div (assert (- y5 y3)) (assert (- x5 x3)))) (div 3.1416 2)) 0) (mod (- (arctan (div (assert (- y5 y3)) (assert (- x5 x3)))) (div 3.1416 2)) -6.2832) (- (arctan (div (assert (- y5 y3)) (assert (- x5 x3)))) (div 3.1416 2)))))
(declare-fun theta1 () Real)
(assert (= theta1 angle1))
(assert (= theta1 (ite (<= 3.1416 angle1) (- angle1 6.2832) angle1)))
(assert (= theta1 (ite (<= angle1 -3.1416) (+ angle1 6.2832) angle1)))
(assert (= -1.0826838338659077 theta1))
(check-sat)
(exit)
(declare-fun x1 () Real)
(declare-fun y1 () Real)
(declare-fun opdist1 () Real)
(declare-fun range1 () Real)
(assert (and (<= 3.0 range1) (<= range1 5.0)))
(assert (= opdist1 (+ range1 2.25)))
(declare-fun x2 () Real)
(declare-fun y2 () Real)
(assert (= x2 (- (* (cos Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) 0) (* (sin Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) opdist1))))
(assert (= y2 (+ (* (sin Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) 0) (* (cos Range(-10.0, 10.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)))).value) opdist1))))
(declare-fun x3 () Real)
(declare-fun y3 () Real)
(assert (= x3 (+ x2 103.42607059136343)))
(assert (= y3 (+ y2 -55.33521489578369)))
(declare-fun opdist2 () Real)
(declare-fun angle1 () Real)
(assert (= angle1 (ite (< 0 (- (arctan (div (assert (- y3 -55.33521489578369)) (assert (- x3 103.42607059136343)))) (div 3.1416 2))) (mod (- (arctan (div (assert (- y3 -55.33521489578369)) (assert (- x3 103.42607059136343)))) (div 3.1416 2)) 6.2832) (- (arctan (div (assert (- y3 -55.33521489578369)) (assert (- x3 103.42607059136343)))) (div 3.1416 2)))))
(assert (= angle1 (ite (< (- (arctan (div (assert (- y3 -55.33521489578369)) (assert (- x3 103.42607059136343)))) (div 3.1416 2)) 0) (mod (- (arctan (div (assert (- y3 -55.33521489578369)) (assert (- x3 103.42607059136343)))) (div 3.1416 2)) -6.2832) (- (arctan (div (assert (- y3 -55.33521489578369)) (assert (- x3 103.42607059136343)))) (div 3.1416 2)))))
(declare-fun theta1 () Real)
(assert (= theta1 angle1))
(assert (= theta1 (ite (<= 3.1416 angle1) (- angle1 6.2832) angle1)))
(assert (= theta1 (ite (<= angle1 -3.1416) (+ angle1 6.2832) angle1)))
(declare-fun range2 () Real)
(assert (and (<= -1.0 range2) (<= range2 1.0)))
(declare-fun range3 () Real)
(assert (and (<= 2.0 range3) (<= range3 5.0)))
(declare-fun x4 () Real)
(declare-fun y4 () Real)
(assert (= x4 (- (* (cos theta1) range2) (* (sin theta1) range3))))
(assert (= y4 (+ (* (sin theta1) range2) (* (cos theta1) range3))))
(declare-fun x5 () Real)
(declare-fun y5 () Real)
(assert (= x5 (+ x4 x3)))
(assert (= y5 (+ y4 y3)))
(assert (and (= 107.3431365738531 x5) (= -45.491647974286636 y5)))
(check-sat)
(exit)
(declare-fun opdist1 () Real)
(declare-fun opdist2 () Real)
(declare-fun range1 () Real)
(assert (and (<= -15.0 range1) (<= range1 15.0)))
(assert (= opdist2 (* range1 0.01745329252)))
(assert (= opdist1 (+ -0.03261498625435544 opdist2)))
(assert (= -0.0345353790147039 opdist1))
(check-sat)
(exit)
(declare-fun x1 () Real)
(declare-fun y1 () Real)
(declare-fun opdist1 () Real)
(declare-fun range1 () Real)
(assert (and (<= -10.0 range1) (<= range1 10.0)))
(assert (= opdist1 (* range1 0.01745329252)))
(declare-fun range2 () Real)
(assert (and (<= -1.0 range2) (<= range2 1.0)))
(declare-fun range3 () Real)
(assert (and (<= 3.0 range3) (<= range3 5.0)))
(declare-fun x2 () Real)
(declare-fun y2 () Real)
(assert (= x2 (- (* (cos opdist1) range2) (* (sin opdist1) range3))))
(assert (= y2 (+ (* (sin opdist1) range2) (* (cos opdist1) range3))))
(declare-fun x3 () Real)
(declare-fun y3 () Real)
(assert (= x3 (+ x2 103.42607059136343)))
(assert (= y3 (+ y2 -55.33521489578369)))
(assert (and (= 102.76425589761033 x3) (= -51.573281421635805 y3)))
(check-sat)
(exit)
(declare-fun opdist1 () Real)
(declare-fun opdist2 () Real)
(declare-fun range1 () Real)
(assert (and (<= -20.0 range1) (<= range1 20.0)))
(assert (= opdist2 (* range1 0.01745329252)))
(assert (= opdist1 (+ opdist2 -0.1331658312297106)))
(assert (= -0.1897463164254607 opdist1))
(check-sat)
(exit)
(declare-fun x1 () Real)
(declare-fun y1 () Real)
(declare-fun opdist1 () Real)
(declare-fun range1 () Real)
(assert (and (<= -10.0 range1) (<= range1 10.0)))
(assert (= opdist1 (* range1 0.01745329252)))
(declare-fun range2 () Real)
(assert (and (<= -1.0 range2) (<= range2 1.0)))
(declare-fun range3 () Real)
(assert (and (<= 3.0 range3) (<= range3 5.0)))
(declare-fun x2 () Real)
(declare-fun y2 () Real)
(assert (= x2 (- (* (cos opdist1) range2) (* (sin opdist1) range3))))
(assert (= y2 (+ (* (sin opdist1) range2) (* (cos opdist1) range3))))
(declare-fun x3 () Real)
(declare-fun y3 () Real)
(assert (= x3 (+ x2 103.42607059136343)))
(assert (= y3 (+ y2 -55.33521489578369)))
(declare-fun range4 () Real)
(assert (and (<= -2.0 range4) (<= range4 2.0)))
(declare-fun range5 () Real)
(assert (and (<= 3.0 range5) (<= range5 5.0)))
(declare-fun x4 () Real)
(declare-fun y4 () Real)
(assert (= x4 (- (* (cos Range(-20.0, 20.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)).offsetRotated(Range(-10.0, 10.0).__mul__(0.01745329252), (Range(-1.0, 1.0) @ Range(3.0, 5.0))))).value) range4) (* (sin Range(-20.0, 20.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)).offsetRotated(Range(-10.0, 10.0).__mul__(0.01745329252), (Range(-1.0, 1.0) @ Range(3.0, 5.0))))).value) range5))))
(assert (= y4 (+ (* (sin Range(-20.0, 20.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)).offsetRotated(Range(-10.0, 10.0).__mul__(0.01745329252), (Range(-1.0, 1.0) @ Range(3.0, 5.0))))).value) range4) (* (cos Range(-20.0, 20.0).__mul__(0.01745329252).__add__(<VectorField roadDirection>.__getitem__(PointIn(Options(<Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>, <Lane>)).offsetRotated(Range(-10.0, 10.0).__mul__(0.01745329252), (Range(-1.0, 1.0) @ Range(3.0, 5.0))))).value) range5))))
(declare-fun x5 () Real)
(declare-fun y5 () Real)
(assert (= x5 (+ x4 x3)))
(assert (= y5 (+ y4 y3)))
(assert (and (= 97.93753180800634 x5) (= -14.332890224101376 y5)))
(check-sat)
(exit)
(declare-fun opdist1 () Real)
(declare-fun range1 () Real)
(assert (and (<= 0.0 range1) (<= range1 360.0)))
(assert (= opdist1 (* range1 0.01745329252)))
(assert (= 0.2737306017134193 opdist1))
(check-sat)
(exit)
